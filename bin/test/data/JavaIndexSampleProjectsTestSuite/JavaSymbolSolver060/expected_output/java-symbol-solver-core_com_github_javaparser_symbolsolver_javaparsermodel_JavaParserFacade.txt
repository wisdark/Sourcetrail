FILE: JavaParserFacade.java
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [JavaParserFacade.java <30:43 30:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel [JavaParserFacade.java <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <34:30 34:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <35:30 35:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <36:30 36:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <37:30 37:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <38:30 38:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <39:30 39:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <40:30 40:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <41:30 41:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserFacade.java <49:37 49:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [JavaParserFacade.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <26:19 26:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <27:19 27:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <28:19 28:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <29:19 29:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <30:19 30:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <31:19 31:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <32:19 32:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <33:19 33:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <34:19 34:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <35:19 35:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <36:19 36:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <37:19 37:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <38:19 38:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <39:19 39:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <40:19 40:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <41:19 41:28>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <49:26 49:35>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <354:56 354:65>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <394:26 394:35>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <411:43 411:52>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <418:43 418:52>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <432:46 432:55>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <455:47 455:56>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <456:54 456:63>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <468:47 468:56>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <470:47 470:56>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <471:24 471:33>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <471:80 471:89>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <479:36 479:45>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <483:36 483:45>]
QUALIFIER: com.github.javaparser [JavaParserFacade.java <528:67 528:76>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [JavaParserFacade.java <17:13 17:18>]
QUALIFIER: com.github [JavaParserFacade.java <19:12 19:17>]
QUALIFIER: com.github [JavaParserFacade.java <20:12 20:17>]
QUALIFIER: com.github [JavaParserFacade.java <21:12 21:17>]
QUALIFIER: com.github [JavaParserFacade.java <22:12 22:17>]
QUALIFIER: com.github [JavaParserFacade.java <23:12 23:17>]
QUALIFIER: com.github [JavaParserFacade.java <24:12 24:17>]
QUALIFIER: com.github [JavaParserFacade.java <25:12 25:17>]
QUALIFIER: com.github [JavaParserFacade.java <26:12 26:17>]
QUALIFIER: com.github [JavaParserFacade.java <27:12 27:17>]
QUALIFIER: com.github [JavaParserFacade.java <28:12 28:17>]
QUALIFIER: com.github [JavaParserFacade.java <29:12 29:17>]
QUALIFIER: com.github [JavaParserFacade.java <30:12 30:17>]
QUALIFIER: com.github [JavaParserFacade.java <31:12 31:17>]
QUALIFIER: com.github [JavaParserFacade.java <32:12 32:17>]
QUALIFIER: com.github [JavaParserFacade.java <33:12 33:17>]
QUALIFIER: com.github [JavaParserFacade.java <34:12 34:17>]
QUALIFIER: com.github [JavaParserFacade.java <35:12 35:17>]
QUALIFIER: com.github [JavaParserFacade.java <36:12 36:17>]
QUALIFIER: com.github [JavaParserFacade.java <37:12 37:17>]
QUALIFIER: com.github [JavaParserFacade.java <38:12 38:17>]
QUALIFIER: com.github [JavaParserFacade.java <39:12 39:17>]
QUALIFIER: com.github [JavaParserFacade.java <40:12 40:17>]
QUALIFIER: com.github [JavaParserFacade.java <41:12 41:17>]
QUALIFIER: com.github [JavaParserFacade.java <49:19 49:24>]
QUALIFIER: com.github [JavaParserFacade.java <354:49 354:54>]
QUALIFIER: com.github [JavaParserFacade.java <394:19 394:24>]
QUALIFIER: com.github [JavaParserFacade.java <411:36 411:41>]
QUALIFIER: com.github [JavaParserFacade.java <418:36 418:41>]
QUALIFIER: com.github [JavaParserFacade.java <432:39 432:44>]
QUALIFIER: com.github [JavaParserFacade.java <455:40 455:45>]
QUALIFIER: com.github [JavaParserFacade.java <456:47 456:52>]
QUALIFIER: com.github [JavaParserFacade.java <468:40 468:45>]
QUALIFIER: com.github [JavaParserFacade.java <470:40 470:45>]
QUALIFIER: com.github [JavaParserFacade.java <471:17 471:22>]
QUALIFIER: com.github [JavaParserFacade.java <471:73 471:78>]
QUALIFIER: com.github [JavaParserFacade.java <479:29 479:34>]
QUALIFIER: com.github [JavaParserFacade.java <483:29 483:34>]
QUALIFIER: com.github [JavaParserFacade.java <528:60 528:65>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [JavaParserFacade.java <17:9 17:11>]
QUALIFIER: com [JavaParserFacade.java <19:8 19:10>]
QUALIFIER: com [JavaParserFacade.java <20:8 20:10>]
QUALIFIER: com [JavaParserFacade.java <21:8 21:10>]
QUALIFIER: com [JavaParserFacade.java <22:8 22:10>]
QUALIFIER: com [JavaParserFacade.java <23:8 23:10>]
QUALIFIER: com [JavaParserFacade.java <24:8 24:10>]
QUALIFIER: com [JavaParserFacade.java <25:8 25:10>]
QUALIFIER: com [JavaParserFacade.java <26:8 26:10>]
QUALIFIER: com [JavaParserFacade.java <27:8 27:10>]
QUALIFIER: com [JavaParserFacade.java <28:8 28:10>]
QUALIFIER: com [JavaParserFacade.java <29:8 29:10>]
QUALIFIER: com [JavaParserFacade.java <30:8 30:10>]
QUALIFIER: com [JavaParserFacade.java <31:8 31:10>]
QUALIFIER: com [JavaParserFacade.java <32:8 32:10>]
QUALIFIER: com [JavaParserFacade.java <33:8 33:10>]
QUALIFIER: com [JavaParserFacade.java <34:8 34:10>]
QUALIFIER: com [JavaParserFacade.java <35:8 35:10>]
QUALIFIER: com [JavaParserFacade.java <36:8 36:10>]
QUALIFIER: com [JavaParserFacade.java <37:8 37:10>]
QUALIFIER: com [JavaParserFacade.java <38:8 38:10>]
QUALIFIER: com [JavaParserFacade.java <39:8 39:10>]
QUALIFIER: com [JavaParserFacade.java <40:8 40:10>]
QUALIFIER: com [JavaParserFacade.java <41:8 41:10>]
QUALIFIER: com [JavaParserFacade.java <49:15 49:17>]
QUALIFIER: com [JavaParserFacade.java <354:45 354:47>]
QUALIFIER: com [JavaParserFacade.java <394:15 394:17>]
QUALIFIER: com [JavaParserFacade.java <411:32 411:34>]
QUALIFIER: com [JavaParserFacade.java <418:32 418:34>]
QUALIFIER: com [JavaParserFacade.java <432:35 432:37>]
QUALIFIER: com [JavaParserFacade.java <455:36 455:38>]
QUALIFIER: com [JavaParserFacade.java <456:43 456:45>]
QUALIFIER: com [JavaParserFacade.java <468:36 468:38>]
QUALIFIER: com [JavaParserFacade.java <470:36 470:38>]
QUALIFIER: com [JavaParserFacade.java <471:13 471:15>]
QUALIFIER: com [JavaParserFacade.java <471:69 471:71>]
QUALIFIER: com [JavaParserFacade.java <479:25 479:27>]
QUALIFIER: com [JavaParserFacade.java <483:25 483:27>]
QUALIFIER: com [JavaParserFacade.java <528:56 528:58>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <23:30 23:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <24:30 24:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <25:30 25:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <26:30 26:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <27:30 27:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <28:30 28:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <354:67 354:69>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <394:37 394:39>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <411:54 411:56>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <418:54 418:56>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <432:57 432:59>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <455:58 455:60>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <456:65 456:67>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <468:58 468:60>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <470:58 470:60>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <471:35 471:37>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <471:91 471:93>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <479:47 479:49>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <483:47 483:49>]
QUALIFIER: com.github.javaparser.ast [JavaParserFacade.java <528:78 528:80>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.body [JavaParserFacade.java <23:34 23:37>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserFacade.java <394:41 394:44>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserFacade.java <528:82 528:85>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast.stmt [JavaParserFacade.java <25:34 25:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.stmt
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <26:34 26:37>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <27:34 27:37>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <28:34 28:37>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <354:71 354:74>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <411:58 411:61>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <418:58 418:61>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <432:61 432:64>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <455:62 455:65>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <456:69 456:72>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <468:62 468:65>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <470:62 470:65>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <471:39 471:42>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <471:95 471:98>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <479:51 479:54>]
QUALIFIER: com.github.javaparser.ast.type [JavaParserFacade.java <483:51 483:54>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [JavaParserFacade.java <29:48 29:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [JavaParserFacade.java <29:43 29:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserFacade.java <32:49 32:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserFacade.java <33:49 33:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserFacade.java <34:49 34:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserFacade.java <35:49 35:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <31:43 31:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <32:43 32:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <33:43 33:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <34:43 34:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <35:43 35:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <36:43 36:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <37:43 37:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <38:43 38:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserFacade.java <39:43 39:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [JavaParserFacade.java <36:49 36:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [JavaParserFacade.java <37:49 37:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [JavaParserFacade.java <38:49 38:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.resolution.ConstructorResolutionLogic [JavaParserFacade.java <179:55 179:80>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.ConstructorResolutionLogic [JavaParserFacade.java <221:55 221:80>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [JavaParserFacade.java <40:43 40:52>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [JavaParserFacade.java <41:43 41:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.util [JavaParserFacade.java <44:13 44:16>]
QUALIFIER: java.util [JavaParserFacade.java <45:13 45:16>]
QUALIFIER: java.util [JavaParserFacade.java <46:13 46:16>]
QUALIFIER: java.util [JavaParserFacade.java <47:13 47:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [JavaParserFacade.java <43:8 43:11>]
QUALIFIER: java [JavaParserFacade.java <44:8 44:11>]
QUALIFIER: java [JavaParserFacade.java <45:8 45:11>]
QUALIFIER: java [JavaParserFacade.java <46:8 46:11>]
QUALIFIER: java [JavaParserFacade.java <47:8 47:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.logging [JavaParserFacade.java <44:18 44:24>]
QUALIFIER: java.util.logging [JavaParserFacade.java <45:18 45:24>]
QUALIFIER: java.util.logging [JavaParserFacade.java <46:18 46:24>]
SYMBOL_PACKAGE: java.util.logging
QUALIFIER: java.util.logging.Level [JavaParserFacade.java <61:25 61:29>]
QUALIFIER: java.util.logging.Level [JavaParserFacade.java <63:33 63:37>]
QUALIFIER: java.util.logging.Logger [JavaParserFacade.java <58:36 58:41>]
QUALIFIER: java.util.stream.Collectors [JavaParserFacade.java <362:236 362:245>]
QUALIFIER: java.util.stream.Collectors [JavaParserFacade.java <443:138 443:147>]
QUALIFIER: java.util.stream [JavaParserFacade.java <47:18 47:23>]
SYMBOL_PACKAGE: java.util.stream
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [JavaParserFacade.java <49:61 49:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [JavaParserFacade.java <49:50 49:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <75:9 75:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <76:9 76:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <77:9 77:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <89:54 89:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <166:30 166:45>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <217:26 217:41>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <237:39 237:54>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <407:21 407:36>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <56:1 <56:14 56:29> 531:1>]
SYMBOL_FIELD: private static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger [JavaParserFacade.java <58:27 58:32>]
SYMBOL_METHOD: static java.util.logging.Logger java.util.logging.Logger.getLogger(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: void java.util.logging.Logger.setLevel(java.util.logging.Level)
SYMBOL_FIELD: static java.util.logging.Level java.util.logging.Level.INFO
SYMBOL_METHOD: java.util.logging.ConsoleHandler.ConsoleHandler()
SYMBOL_METHOD: void java.util.logging.Handler.setLevel(java.util.logging.Level)
SYMBOL_METHOD: void java.util.logging.Logger.addHandler(java.util.logging.Handler)
SYMBOL_FIELD: private static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances [JavaParserFacade.java <67:54 67:62>]
SYMBOL_METHOD: java.util.WeakHashMap<K, V>.WeakHashMap()
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <68:24 68:33>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.symbolSolver [JavaParserFacade.java <69:26 69:37>]
SYMBOL_FIELD: private java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <70:29 70:50>]
SYMBOL_METHOD: java.util.IdentityHashMap<K, V>.IdentityHashMap()
SYMBOL_FIELD: private java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved [JavaParserFacade.java <71:29 71:53>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeExtractor [JavaParserFacade.java <72:27 72:39>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <74:5 <74:5 <74:13 74:28> 74:51> 78:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getRoot()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.TypeExtractor(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeSolver() [JavaParserFacade.java <80:5 <80:5 <80:23 80:35> 80:37> 82:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getSymbolSolver() [JavaParserFacade.java <84:5 <84:5 <84:25 84:39> 84:41> 86:5>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <88:5 <88:5 <88:36 88:38> 88:61> 90:5>]
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.computeIfAbsent(java.util.Map<K, V>.K, java.util.function.Function<? super K, ? extends V>)
SYMBOL_METHOD: public static void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.clearInstances() [JavaParserFacade.java <95:1 <95:1 <95:24 95:37> 95:39> 97:5>]
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: void java.util.Map<K, V>.clear()
SYMBOL_METHOD: protected static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <99:5 <99:5 <99:27 99:43> 99:94> 123:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.core.resolution.Context.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends()
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [JavaParserFacade.java <112:28 112:35>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [JavaParserFacade.java <114:28 114:35>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [JavaParserFacade.java <460:24 460:31>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [JavaParserFacade.java <462:24 462:31>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [JavaParserFacade.java <464:24 464:31>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isSuper()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.superBound(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) [JavaParserFacade.java <125:5 <125:5 <125:56 125:60> 125:79> 127:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbol(java.lang.String, com.github.javaparser.ast.Node)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) [JavaParserFacade.java <129:5 <129:5 <129:56 129:60> 129:81> 131:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) [JavaParserFacade.java <133:5 <133:5 <133:56 133:60> 133:77> 139:5>]
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr) [JavaParserFacade.java <141:5 <141:5 <141:47 141:51> 141:82> 143:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) [JavaParserFacade.java <252:1 <252:1 <252:47 252:51> 252:104> 263:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr) [JavaParserFacade.java <145:5 <145:5 <145:52 145:56> 145:95> 147:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) [JavaParserFacade.java <211:1 <211:1 <211:52 211:56> 211:117> 226:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt) [JavaParserFacade.java <149:5 <149:5 <149:52 149:56> 149:125> 151:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) [JavaParserFacade.java <153:5 <153:5 <153:52 153:56> 153:147> 184:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.util.LinkedList<E>.LinkedList()
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) [JavaParserFacade.java <228:5 <228:5 <228:18 228:31> 228:167> 247:5>]
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getArguments()
SYMBOL_METHOD: java.util.Optional<N> com.github.javaparser.HasParentNode<T>.getAncestorOfType<N>(java.lang.Class<N>)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <161:20 161:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <177:20 177:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <194:24 194:38>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <201:28 201:42>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <205:16 205:30>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <219:20 219:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <270:20 270:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [JavaParserFacade.java <272:20 272:34>]
SYMBOL_METHOD: boolean com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.isThis()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [JavaParserFacade.java <479:5 <479:5 <479:17 479:23> 479:76> 481:5>]
SYMBOL_METHOD: com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.nodeTypes.NodeWithExtends<N>.getExtendedTypes(int)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <171:51 171:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <258:50 258:66>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <266:27 266:43>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <358:75 358:91>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <415:37 415:53>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <480:30 480:46>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <500:27 500:43>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <510:16 510:32>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserFacade.java <529:16 529:32>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithSimpleName<N>.getNameAsString()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.resolution.ConstructorResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration>, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors()
SYMBOL_METHOD: void com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder.setMethod(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends MethodLikeDeclaration>)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) [JavaParserFacade.java <186:5 <186:5 <186:45 186:49> 186:64> 206:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.ThisExpr.getClassExpr()
QUALIFIER: java.lang.String [JavaParserFacade.java <241:48 241:53>]
QUALIFIER: java.lang.String [JavaParserFacade.java <495:48 495:53>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.Node.toString()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.body.ClassOrInterfaceDeclaration> com.github.javaparser.ast.CompilationUnit.getClassByName(java.lang.String)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [JavaParserFacade.java <509:5 <509:5 <509:37 509:54> 509:111> 511:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [JavaParserFacade.java <528:5 <528:5 <528:37 528:54> 528:121> 530:5>]
SYMBOL_METHOD: protected com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) [JavaParserFacade.java <394:5 <394:5 <394:65 394:86> 394:97> 404:5>]
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.ObjectCreationExpr.getArguments()
SYMBOL_METHOD: com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.expr.ObjectCreationExpr.getType()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder.LambdaArgumentTypePlaceholder(int)
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <280:5 <280:5 <280:17 280:23> 280:56> 318:5>]
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getArguments()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.MethodCallExpr.getName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) [JavaParserFacade.java <265:5 <265:5 <265:51 265:55> 265:86> 274:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) [JavaParserFacade.java <276:5 <276:5 <276:17 276:23> 276:34> 278:5>]
SYMBOL_METHOD: boolean java.util.Map<K, V>.containsKey(java.lang.Object)
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <389:1 <389:1 <389:18 389:32> 389:65> 392:5>]
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V)
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.remove(java.lang.Object)
SYMBOL_METHOD: void java.util.logging.Logger.finer(java.lang.String)
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object)
SYMBOL_METHOD: private java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) [JavaParserFacade.java <320:5 <320:5 <320:28 320:31> 320:63> 329:5>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [JavaParserFacade.java <322:20 322:27>]
QUALIFIER: java.util.Optional [JavaParserFacade.java <327:20 327:27>]
QUALIFIER: java.util.Optional [JavaParserFacade.java <342:28 342:35>]
QUALIFIER: java.util.Optional [JavaParserFacade.java <346:16 346:23>]
SYMBOL_METHOD: private java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) [JavaParserFacade.java <337:1 <337:1 <337:28 337:31> 337:75> 347:5>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
SYMBOL_METHOD: java.util.Set<java.util.Map<K, V>.K> java.util.Map<K, V>.keySet()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) [JavaParserFacade.java <349:5 <349:5 <349:27 349:39> 349:80> 371:5>]
SYMBOL_METHOD: com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.expr.MethodReferenceExpr.getScope()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: com.github.javaparser.ast.type.Type com.github.javaparser.ast.expr.TypeExpr.getType()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllMethods()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.methods.MethodUsage.getName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.expr.MethodReferenceExpr.getIdentifier()
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: int java.util.List<E>.size()
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.get(int)
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <373:5 <373:5 <373:20 373:40> 373:85> 380:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException()
SYMBOL_METHOD: R com.github.javaparser.ast.visitor.Visitable.accept<R, A>(com.github.javaparser.ast.visitor.GenericVisitor<R, A>, A)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) [JavaParserFacade.java <406:5 <406:5 <406:17 406:42> 406:66> 409:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [JavaParserFacade.java <411:5 <411:5 <411:17 411:30> 411:86> 416:5>]
SYMBOL_METHOD: com.github.javaparser.ast.type.Type com.github.javaparser.ast.body.VariableDeclarator.getType()
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <432:5 <432:5 <432:20 432:33> 432:92> 476:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type) [JavaParserFacade.java <418:5 <418:5 <418:17 418:30> 418:72> 420:5>]
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [JavaParserFacade.java <423:5 <423:5 <423:20 423:24> 423:67> 430:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String)
SYMBOL_METHOD: static java.util.List<T> java.util.Collections.emptyList<T>()
QUALIFIER: java.util.Collections [JavaParserFacade.java <441:41 441:51>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.type.ClassOrInterfaceType.getTypeArguments()
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String)
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [JavaParserFacade.java <456:20 456:32>]
SYMBOL_METHOD: java.lang.String java.lang.Enum<E>.name()
SYMBOL_METHOD: com.github.javaparser.ast.type.PrimitiveType.Primitive com.github.javaparser.ast.type.PrimitiveType.getType()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getExtendedTypes()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getSuperTypes()
SYMBOL_FIELD: static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.UNBOUNDED
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.VoidType [JavaParserFacade.java <469:20 469:27>]
SYMBOL_FIELD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.VoidType.INSTANCE
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: com.github.javaparser.ast.type.Type com.github.javaparser.ast.type.ArrayType.getComponentType()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <483:5 <483:5 <483:17 483:23> 483:82> 485:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) [JavaParserFacade.java <487:5 <487:5 <487:24 487:41> 487:62> 507:5>]
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.RuntimeException.RuntimeException(java.lang.String)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.Range> com.github.javaparser.ast.Node.getRange()
SYMBOL_FIELD: com.github.javaparser.Position com.github.javaparser.Range.begin
SYMBOL_FIELD: int com.github.javaparser.Position.line
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) [JavaParserFacade.java <516:1 <516:1 <516:17 516:31> 516:42> 526:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.JavaParserEnumDeclaration(com.github.javaparser.ast.body.EnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.CompilationUnit [JavaParserFacade.java <19:34 19:48>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.Node [JavaParserFacade.java <20:34 20:37>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.NodeList<N> [JavaParserFacade.java <21:34 21:41>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.body [JavaParserFacade.java <22:34 22:37>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.body.EnumDeclaration [JavaParserFacade.java <23:39 23:53>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.expr [JavaParserFacade.java <24:34 24:37>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt [JavaParserFacade.java <25:39 25:71>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <26:39 26:58>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.type.UnknownType [JavaParserFacade.java <27:39 27:49>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.ast.type.WildcardType [JavaParserFacade.java <28:39 28:50>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.core.resolution.Context [JavaParserFacade.java <29:59 29:65>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations [JavaParserFacade.java <30:59 30:70>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.declarations [JavaParserFacade.java <31:49 31:60>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration [JavaParserFacade.java <32:62 32:82>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <33:62 33:83>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <34:62 34:78>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <35:62 35:76>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <36:57 36:67>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <37:60 37:74>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <38:60 38:69>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.model.typesystem [JavaParserFacade.java <39:49 39:58>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.resolution.ConstructorResolutionLogic [JavaParserFacade.java <40:54 40:79>]
REFERENCE_IMPORT: JavaParserFacade.java -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [JavaParserFacade.java <41:54 41:65>]
REFERENCE_IMPORT: JavaParserFacade.java -> java.util [JavaParserFacade.java <43:13 43:16>]
REFERENCE_IMPORT: JavaParserFacade.java -> java.util.logging.ConsoleHandler [JavaParserFacade.java <44:26 44:39>]
REFERENCE_IMPORT: JavaParserFacade.java -> java.util.logging.Level [JavaParserFacade.java <45:26 45:30>]
REFERENCE_IMPORT: JavaParserFacade.java -> java.util.logging.Logger [JavaParserFacade.java <46:26 46:31>]
REFERENCE_IMPORT: JavaParserFacade.java -> java.util.stream.Collectors [JavaParserFacade.java <47:25 47:34>]
REFERENCE_IMPORT: JavaParserFacade.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserFacade.java <49:71 49:83>]
REFERENCE_TYPE_USAGE: static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger -> java.util.logging.Logger [JavaParserFacade.java <58:20 58:25>]
REFERENCE_CALL: static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger -> static java.util.logging.Logger java.util.logging.Logger.getLogger(java.lang.String) [JavaParserFacade.java <58:43 58:51>]
REFERENCE_CALL: static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger -> java.lang.String java.lang.Class<T>.getCanonicalName() [JavaParserFacade.java <58:76 58:91>]
REFERENCE_TYPE_USAGE: static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <58:53 58:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> void java.util.logging.Logger.setLevel(java.util.logging.Level) [JavaParserFacade.java <61:16 61:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger [JavaParserFacade.java <61:9 61:14>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger [JavaParserFacade.java <64:9 64:14>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> static java.util.logging.Level java.util.logging.Level.INFO [JavaParserFacade.java <61:31 61:34>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> static java.util.logging.Level java.util.logging.Level.INFO [JavaParserFacade.java <63:39 63:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> java.util.logging.ConsoleHandler [JavaParserFacade.java <62:9 62:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> java.util.logging.ConsoleHandler [JavaParserFacade.java <62:45 62:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> java.util.logging.ConsoleHandler.ConsoleHandler() [JavaParserFacade.java <62:45 62:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> void java.util.logging.Handler.setLevel(java.util.logging.Level) [JavaParserFacade.java <63:24 63:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade -> void java.util.logging.Logger.addHandler(java.util.logging.Handler) [JavaParserFacade.java <64:16 64:25>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <67:24 67:33>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <67:36 67:51>]
REFERENCE_TYPE_USAGE: static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances -> java.util.Map<K, V> [JavaParserFacade.java <67:20 67:22>]
REFERENCE_TYPE_USAGE: static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <67:24 67:33>]
REFERENCE_TYPE_USAGE: static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <67:36 67:51>]
REFERENCE_CALL: static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances -> java.util.WeakHashMap<K, V>.WeakHashMap() [JavaParserFacade.java <67:70 67:82>]
REFERENCE_TYPE_USAGE: static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances -> java.util.WeakHashMap<K, V> [JavaParserFacade.java <67:70 67:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <68:13 68:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.symbolSolver -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [JavaParserFacade.java <69:13 69:24>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.ast.Node [JavaParserFacade.java <70:17 70:20>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.ast.Node [JavaParserFacade.java <71:17 71:20>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.ast.Node [JavaParserFacade.java <320:37 320:40>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.ast.Node [JavaParserFacade.java <337:37 337:40>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <70:23 70:26>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <71:23 71:26>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <320:43 320:46>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <337:43 337:46>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved -> java.util.Map<K, V> [JavaParserFacade.java <70:13 70:15>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved -> com.github.javaparser.ast.Node [JavaParserFacade.java <70:17 70:20>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <70:23 70:26>]
REFERENCE_CALL: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved -> java.util.IdentityHashMap<K, V>.IdentityHashMap() [JavaParserFacade.java <70:58 70:74>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved -> java.util.IdentityHashMap<K, V> [JavaParserFacade.java <70:58 70:72>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved -> java.util.Map<K, V> [JavaParserFacade.java <71:13 71:15>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved -> com.github.javaparser.ast.Node [JavaParserFacade.java <71:17 71:20>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <71:23 71:26>]
REFERENCE_CALL: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved -> java.util.IdentityHashMap<K, V>.IdentityHashMap() [JavaParserFacade.java <71:61 71:77>]
REFERENCE_TYPE_USAGE: java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved -> java.util.IdentityHashMap<K, V> [JavaParserFacade.java <71:61 71:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeExtractor -> com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor [JavaParserFacade.java <72:13 72:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <74:30 74:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <75:14 75:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getRoot() [JavaParserFacade.java <75:38 75:44>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.symbolSolver [JavaParserFacade.java <76:14 76:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver.SymbolSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <76:33 76:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [JavaParserFacade.java <76:33 76:44>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeExtractor [JavaParserFacade.java <77:14 77:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.TypeExtractor(com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade) [JavaParserFacade.java <77:34 77:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor [JavaParserFacade.java <77:34 77:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeSolver() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <80:12 80:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeSolver() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <81:16 81:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getSymbolSolver() -> com.github.javaparser.symbolsolver.resolution.SymbolSolver [JavaParserFacade.java <84:12 84:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getSymbolSolver() -> com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.symbolSolver [JavaParserFacade.java <85:16 85:27>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserFacade.java <88:19 88:34>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <88:40 88:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Map<K, V>.V java.util.Map<K, V>.computeIfAbsent(java.util.Map<K, V>.K, java.util.function.Function<? super K, ? extends V>) [JavaParserFacade.java <89:26 89:40>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances [JavaParserFacade.java <89:16 89:24>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <89:72 89:74>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.clearInstances() -> void [JavaParserFacade.java <95:19 95:22>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.clearInstances() -> void java.util.Map<K, V>.clear() [JavaParserFacade.java <96:19 96:23>]
REFERENCE_USAGE: static void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.clearInstances() -> static java.util.Map<com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.instances [JavaParserFacade.java <96:9 96:17>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <99:22 99:25>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <99:45 99:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <101:22 101:25>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <110:17 110:20>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <120:13 120:16>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [JavaParserFacade.java <99:56 99:62>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserFacade.java <99:73 99:82>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [JavaParserFacade.java <100:18 100:31>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <101:22 101:25>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <305:22 305:25>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <320:22 320:25>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <337:22 337:25>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [JavaParserFacade.java <101:13 101:20>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.core.resolution.Context.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <101:45 101:60>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [JavaParserFacade.java <101:67 101:74>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <102:24 102:32>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <103:31 103:33>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [JavaParserFacade.java <107:25 107:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends() [JavaParserFacade.java <108:35 108:43>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends() [JavaParserFacade.java <111:35 111:43>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [JavaParserFacade.java <108:22 108:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [JavaParserFacade.java <108:55 108:64>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [JavaParserFacade.java <109:47 109:56>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isSuper() [JavaParserFacade.java <108:68 108:74>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard [JavaParserFacade.java <109:17 109:24>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <110:38 110:54>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [JavaParserFacade.java <110:70 110:83>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserFacade.java <112:37 112:48>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.core.resolution.Context, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.superBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserFacade.java <114:37 114:46>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [JavaParserFacade.java <125:28 125:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [JavaParserFacade.java <129:28 129:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [JavaParserFacade.java <133:28 133:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <125:12 125:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [JavaParserFacade.java <125:38 125:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> com.github.javaparser.ast.expr.NameExpr [JavaParserFacade.java <125:62 125:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbol(java.lang.String, com.github.javaparser.ast.Node) [JavaParserFacade.java <126:29 126:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.symbolSolver [JavaParserFacade.java <126:16 126:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserFacade.java <126:60 126:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName() [JavaParserFacade.java <126:50 126:56>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <129:12 129:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [JavaParserFacade.java <129:38 129:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) -> com.github.javaparser.ast.expr.SimpleName [JavaParserFacade.java <129:62 129:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbol(java.lang.String, com.github.javaparser.ast.Node) [JavaParserFacade.java <130:29 130:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) -> com.github.javaparser.symbolsolver.resolution.SymbolSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.symbolSolver [JavaParserFacade.java <130:16 130:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.SimpleName) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserFacade.java <130:50 130:54>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <133:12 133:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [JavaParserFacade.java <133:38 133:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> com.github.javaparser.ast.expr.Expression [JavaParserFacade.java <133:62 133:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> com.github.javaparser.ast.expr.NameExpr [JavaParserFacade.java <134:29 134:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> com.github.javaparser.ast.expr.NameExpr [JavaParserFacade.java <135:27 135:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.NameExpr) [JavaParserFacade.java <135:20 135:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [JavaParserFacade.java <137:23 137:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> java.lang.IllegalArgumentException [JavaParserFacade.java <137:23 137:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> java.lang.String java.lang.Class<T>.getCanonicalName() [JavaParserFacade.java <137:64 137:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.Expression) -> java.lang.Class<?> java.lang.Object.getClass() [JavaParserFacade.java <137:53 137:60>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <141:28 141:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <252:28 252:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <258:25 258:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <141:12 141:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <141:28 141:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.expr.MethodCallExpr [JavaParserFacade.java <141:53 141:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) [JavaParserFacade.java <142:16 142:20>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <145:28 145:49>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <149:28 149:49>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <153:28 153:49>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <179:25 179:46>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <211:28 211:49>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <221:25 221:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <145:12 145:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <145:28 145:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr) -> com.github.javaparser.ast.expr.ObjectCreationExpr [JavaParserFacade.java <145:58 145:75>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) [JavaParserFacade.java <146:16 146:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <149:12 149:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <149:28 149:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt) -> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt [JavaParserFacade.java <149:58 149:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) [JavaParserFacade.java <150:16 150:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <153:12 153:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <171:13 171:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <179:9 179:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <153:28 153:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <161:45 161:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <177:45 177:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <179:25 179:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt [JavaParserFacade.java <153:58 153:90>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> boolean [JavaParserFacade.java <153:127 153:133>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <154:14 154:17>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <212:14 212:17>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <228:98 228:101>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <253:14 253:17>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <441:18 441:21>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <488:14 488:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.List<E> [JavaParserFacade.java <154:9 154:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.List<E> [JavaParserFacade.java <155:9 155:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <154:14 154:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <166:13 166:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.LinkedList<E>.LinkedList() [JavaParserFacade.java <154:40 154:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.LinkedList<E>.LinkedList() [JavaParserFacade.java <155:64 155:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.LinkedList<E> [JavaParserFacade.java <154:40 154:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.LinkedList<E> [JavaParserFacade.java <155:64 155:73>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <155:14 155:42>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <213:14 213:42>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <228:124 228:152>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <254:14 254:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <155:14 155:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <180:14 180:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) [JavaParserFacade.java <157:9 157:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getArguments() [JavaParserFacade.java <157:93 157:104>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <159:18 159:44>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <199:26 199:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.Optional<T> [JavaParserFacade.java <159:9 159:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <159:18 159:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <159:113 159:139>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <163:9 163:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.Optional<N> com.github.javaparser.HasParentNode<T>.getAncestorOfType<N>(java.lang.Class<N>) [JavaParserFacade.java <159:95 159:111>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <160:26 160:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [JavaParserFacade.java <161:36 161:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [JavaParserFacade.java <177:36 177:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <163:61 163:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <164:9 164:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <171:29 171:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> boolean com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.isThis() [JavaParserFacade.java <165:48 165:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [JavaParserFacade.java <166:63 166:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <166:47 166:49>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <166:51 166:60>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <171:91 171:100>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <171:142 171:151>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <179:165 179:174>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.nodeTypes.NodeWithExtends<N>.getExtendedTypes(int) [JavaParserFacade.java <166:81 166:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [JavaParserFacade.java <167:27 167:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [JavaParserFacade.java <168:56 168:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [JavaParserFacade.java <168:38 168:52>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <171:29 171:43>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <186:28 186:42>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <267:25 267:39>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <358:25 358:39>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <436:29 436:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <171:103 171:111>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <171:69 171:78>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithSimpleName<N>.getNameAsString() [JavaParserFacade.java <171:123 171:137>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [JavaParserFacade.java <172:20 172:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [JavaParserFacade.java <173:31 173:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.resolution.ConstructorResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration>, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <179:82 179:99>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors() [JavaParserFacade.java <179:131 179:145>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [JavaParserFacade.java <179:103 179:118>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, boolean) -> void com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder.setMethod(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends MethodLikeDeclaration>) [JavaParserFacade.java <181:25 181:33>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <186:12 186:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <192:13 192:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <186:28 186:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.ast.expr.ThisExpr [JavaParserFacade.java <186:51 186:58>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <188:33 188:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <198:20 198:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <200:33 200:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.ThisExpr.getClassExpr() [JavaParserFacade.java <188:18 188:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.ThisExpr.getClassExpr() [JavaParserFacade.java <190:37 190:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.lang.String [JavaParserFacade.java <190:13 190:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.lang.String com.github.javaparser.ast.Node.toString() [JavaParserFacade.java <190:58 190:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <190:52 190:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <199:72 199:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <201:82 201:84>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserFacade.java <192:29 192:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserFacade.java <192:29 192:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [JavaParserFacade.java <192:74 192:87>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <192:63 192:72>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [JavaParserFacade.java <193:23 193:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [JavaParserFacade.java <194:40 194:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [JavaParserFacade.java <201:44 201:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [JavaParserFacade.java <205:32 205:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [JavaParserFacade.java <194:53 194:79>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.CompilationUnit [JavaParserFacade.java <197:22 197:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<T> [JavaParserFacade.java <197:13 197:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<T> [JavaParserFacade.java <199:17 199:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.ast.CompilationUnit [JavaParserFacade.java <197:22 197:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.ast.CompilationUnit [JavaParserFacade.java <197:67 197:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<N> com.github.javaparser.HasParentNode<T>.getAncestorOfType<N>(java.lang.Class<N>) [JavaParserFacade.java <197:49 197:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <199:26 199:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> java.util.Optional<com.github.javaparser.ast.body.ClassOrInterfaceDeclaration> com.github.javaparser.ast.CompilationUnit.getClassByName(java.lang.String) [JavaParserFacade.java <199:78 199:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [JavaParserFacade.java <201:51 201:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [JavaParserFacade.java <205:39 205:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ThisExpr) -> com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) [JavaParserFacade.java <205:58 205:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <211:12 211:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <221:9 221:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <211:28 211:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <219:45 219:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserFacade.java <221:25 221:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.ast.expr.ObjectCreationExpr [JavaParserFacade.java <211:58 211:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> boolean [JavaParserFacade.java <211:97 211:103>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.List<E> [JavaParserFacade.java <212:9 212:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.List<E> [JavaParserFacade.java <213:9 213:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <212:14 212:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <217:9 217:12>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.LinkedList<E>.LinkedList() [JavaParserFacade.java <212:40 212:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.LinkedList<E>.LinkedList() [JavaParserFacade.java <213:64 213:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.LinkedList<E> [JavaParserFacade.java <212:40 212:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.LinkedList<E> [JavaParserFacade.java <213:64 213:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <213:14 213:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <222:14 222:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) [JavaParserFacade.java <215:9 215:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.ObjectCreationExpr.getArguments() [JavaParserFacade.java <215:63 215:74>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [JavaParserFacade.java <217:59 217:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <217:43 217:45>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <217:47 217:56>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <221:205 221:214>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.expr.ObjectCreationExpr.getType() [JavaParserFacade.java <217:86 217:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [JavaParserFacade.java <218:24 218:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [JavaParserFacade.java <219:36 219:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.resolution.ConstructorResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration>, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <221:82 221:99>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors() [JavaParserFacade.java <221:171 221:185>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [JavaParserFacade.java <221:103 221:118>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [JavaParserFacade.java <221:149 221:166>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [JavaParserFacade.java <221:131 221:145>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.ObjectCreationExpr, boolean) -> void com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder.setMethod(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends MethodLikeDeclaration>) [JavaParserFacade.java <223:25 223:33>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> void [JavaParserFacade.java <228:13 228:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.ast.Node [JavaParserFacade.java <228:33 228:36>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.NodeList<N> -> com.github.javaparser.ast.expr.Expression [JavaParserFacade.java <228:53 228:62>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.ast.NodeList<N> [JavaParserFacade.java <228:44 228:51>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.ast.expr.Expression [JavaParserFacade.java <228:53 228:62>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.ast.expr.Expression [JavaParserFacade.java <230:14 230:23>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> boolean [JavaParserFacade.java <228:71 228:77>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> java.util.List<E> [JavaParserFacade.java <228:93 228:96>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> java.util.List<E> [JavaParserFacade.java <228:119 228:122>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <228:98 228:101>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <228:124 228:152>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <232:17 232:45>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <232:65 232:93>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> int [JavaParserFacade.java <229:9 229:11>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <231:43 231:52>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.ast.expr.MethodReferenceExpr [JavaParserFacade.java <231:83 231:101>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder.LambdaArgumentTypePlaceholder(int) [JavaParserFacade.java <232:65 232:93>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [JavaParserFacade.java <233:31 233:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [JavaParserFacade.java <234:30 234:32>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [JavaParserFacade.java <237:35 237:37>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <237:72 237:78>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <237:56 237:58>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <237:60 237:69>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [JavaParserFacade.java <238:26 238:48>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> java.lang.Exception [JavaParserFacade.java <240:26 240:34>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable) [JavaParserFacade.java <241:31 241:46>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> java.lang.RuntimeException [JavaParserFacade.java <241:31 241:46>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [JavaParserFacade.java <241:55 241:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <252:12 252:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <258:9 258:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <252:28 252:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserFacade.java <258:25 258:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.ast.expr.MethodCallExpr [JavaParserFacade.java <252:53 252:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> boolean [JavaParserFacade.java <252:84 252:90>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.util.List<E> [JavaParserFacade.java <253:9 253:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.util.List<E> [JavaParserFacade.java <254:9 254:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <253:14 253:17>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.util.LinkedList<E>.LinkedList() [JavaParserFacade.java <253:40 253:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.util.LinkedList<E>.LinkedList() [JavaParserFacade.java <254:64 254:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.util.LinkedList<E> [JavaParserFacade.java <253:40 253:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.util.LinkedList<E> [JavaParserFacade.java <254:64 254:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <254:14 254:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [JavaParserFacade.java <259:14 259:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> void com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments(com.github.javaparser.ast.Node, com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression>, boolean, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, java.util.List<com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder>) [JavaParserFacade.java <256:9 256:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getArguments() [JavaParserFacade.java <256:55 256:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <258:107 258:117>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <258:68 258:77>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <258:95 258:104>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <258:175 258:184>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserFacade.java <258:144 258:148>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.MethodCallExpr.getName() [JavaParserFacade.java <258:134 258:140>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr, boolean) -> void com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder.setMethod(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends MethodLikeDeclaration>) [JavaParserFacade.java <260:25 260:33>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration [JavaParserFacade.java <265:28 265:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <265:12 265:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <267:9 267:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration [JavaParserFacade.java <265:28 265:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration [JavaParserFacade.java <268:9 268:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration [JavaParserFacade.java <268:56 268:76>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration [JavaParserFacade.java <272:45 272:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.ast.expr.AnnotationExpr [JavaParserFacade.java <265:57 265:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.core.resolution.Context [JavaParserFacade.java <266:9 266:15>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <266:45 266:54>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <266:72 266:81>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <267:127 267:136>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <267:25 267:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <267:83 267:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithName<N>.getNameAsString() [JavaParserFacade.java <267:108 267:122>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [JavaParserFacade.java <268:110 268:136>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [JavaParserFacade.java <269:44 269:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [JavaParserFacade.java <270:36 270:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.AnnotationDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.AnnotationExpr) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [JavaParserFacade.java <272:36 272:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <276:12 276:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <276:25 276:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <277:16 277:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <280:12 280:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <283:17 283:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <305:22 305:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <311:17 311:20>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.Node [JavaParserFacade.java <280:25 280:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.Node [JavaParserFacade.java <290:26 290:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> boolean [JavaParserFacade.java <280:36 280:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> boolean [JavaParserFacade.java <287:17 287:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> boolean java.util.Map<K, V>.containsKey(java.lang.Object) [JavaParserFacade.java <282:41 282:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> boolean java.util.Map<K, V>.containsKey(java.lang.Object) [JavaParserFacade.java <291:53 291:63>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <282:18 282:39>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <285:17 285:38>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <291:30 291:51>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <298:21 298:42>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <299:21 299:42>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <303:20 303:41>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithLambdasSolved [JavaParserFacade.java <305:39 305:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <283:28 283:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <311:32 311:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [JavaParserFacade.java <285:40 285:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [JavaParserFacade.java <299:44 299:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [JavaParserFacade.java <312:43 312:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.expr.MethodCallExpr [JavaParserFacade.java <288:37 288:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.expr.MethodCallExpr [JavaParserFacade.java <289:21 289:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.expr.MethodCallExpr [JavaParserFacade.java <289:54 289:67>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getArguments() [JavaParserFacade.java <290:52 290:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <292:29 292:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <299:54 299:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<K, V>.V java.util.Map<K, V>.remove(java.lang.Object) [JavaParserFacade.java <298:44 298:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> void java.util.logging.Logger.finer(java.lang.String) [JavaParserFacade.java <301:24 301:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> void java.util.logging.Logger.finer(java.lang.String) [JavaParserFacade.java <313:24 313:28>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger [JavaParserFacade.java <301:17 301:22>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> static java.util.logging.Logger com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.logger [JavaParserFacade.java <313:17 313:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [JavaParserFacade.java <303:43 303:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Optional<T> [JavaParserFacade.java <305:13 305:20>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) [JavaParserFacade.java <305:34 305:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) [JavaParserFacade.java <309:19 309:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <306:21 306:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <310:22 310:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <307:28 307:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <316:24 316:26>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved [JavaParserFacade.java <309:24 309:48>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) -> java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.cacheWithoutLambdasSolved [JavaParserFacade.java <312:17 312:41>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> java.util.Optional<T> [JavaParserFacade.java <320:13 320:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <320:22 320:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <320:43 320:46>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> java.util.Map<K, V> [JavaParserFacade.java <320:33 320:35>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <320:37 320:40>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <320:54 320:57>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> boolean java.util.Map<K, V>.containsKey(java.lang.Object) [JavaParserFacade.java <321:17 321:27>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [JavaParserFacade.java <322:29 322:30>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [JavaParserFacade.java <322:36 322:38>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <324:29 324:38>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <325:31 325:40>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) [JavaParserFacade.java <325:20 325:23>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.Node) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [JavaParserFacade.java <327:29 327:33>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> java.util.Optional<T> [JavaParserFacade.java <337:13 337:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <337:22 337:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <337:43 337:46>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> java.util.Map<K, V> [JavaParserFacade.java <337:33 337:35>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.ast.Node [JavaParserFacade.java <337:37 337:40>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.ast.Node [JavaParserFacade.java <338:14 338:17>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <337:54 337:63>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <339:32 339:41>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <340:17 340:26>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> com.github.javaparser.ast.expr.LambdaExpr [JavaParserFacade.java <340:45 340:54>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> java.util.Set<java.util.Map<K, V>.K> java.util.Map<K, V>.keySet() [JavaParserFacade.java <338:29 338:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> boolean java.lang.String.equals(java.lang.Object) [JavaParserFacade.java <341:46 341:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> java.lang.String com.github.javaparser.ast.Node.toString() [JavaParserFacade.java <341:35 341:42>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> java.lang.String com.github.javaparser.ast.Node.toString() [JavaParserFacade.java <341:64 341:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserFacade.java <341:79 341:91>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserFacade.java <341:111 341:123>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [JavaParserFacade.java <342:37 342:38>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [JavaParserFacade.java <342:44 342:46>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find(java.util.Map<com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.ast.expr.LambdaExpr) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [JavaParserFacade.java <346:25 346:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <349:15 349:25>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <362:14 362:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.MethodReferenceExpr [JavaParserFacade.java <349:41 349:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.expr.MethodReferenceExpr.getScope() [JavaParserFacade.java <350:35 350:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.Expression com.github.javaparser.ast.expr.MethodReferenceExpr.getScope() [JavaParserFacade.java <353:60 353:67>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.TypeExpr [JavaParserFacade.java <350:57 350:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.TypeExpr [JavaParserFacade.java <353:9 353:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.TypeExpr [JavaParserFacade.java <353:30 353:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [JavaParserFacade.java <351:23 351:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [JavaParserFacade.java <360:23 360:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [JavaParserFacade.java <365:27 365:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [JavaParserFacade.java <369:27 369:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <351:23 351:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <355:23 355:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <360:23 360:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <365:27 365:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <369:27 369:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.type.Type com.github.javaparser.ast.expr.TypeExpr.getType() [JavaParserFacade.java <354:24 354:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.type.Type com.github.javaparser.ast.expr.TypeExpr.getType() [JavaParserFacade.java <355:62 355:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.type.Type com.github.javaparser.ast.expr.TypeExpr.getType() [JavaParserFacade.java <357:85 357:91>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <354:76 354:95>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <357:9 357:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <357:54 357:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [JavaParserFacade.java <355:23 355:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.String java.lang.Class<T>.getCanonicalName() [JavaParserFacade.java <355:83 355:98>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.Class<?> java.lang.Object.getClass() [JavaParserFacade.java <355:72 355:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <358:9 358:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <358:25 358:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <358:138 358:146>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <358:93 358:102>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <358:126 358:135>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <358:188 358:197>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserFacade.java <358:179 358:183>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [JavaParserFacade.java <358:169 358:175>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [JavaParserFacade.java <359:45 359:52>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <362:14 362:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.util.List<E> [JavaParserFacade.java <362:9 362:12>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserFacade.java <362:228 362:234>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [JavaParserFacade.java <362:157 362:162>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserFacade.java <362:148 362:153>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllMethods() [JavaParserFacade.java <362:132 362:144>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserFacade.java <362:44 362:67>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [JavaParserFacade.java <362:101 362:127>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> boolean java.lang.String.equals(java.lang.Object) [JavaParserFacade.java <362:183 362:188>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.String com.github.javaparser.symbolsolver.model.methods.MethodUsage.getName() [JavaParserFacade.java <362:173 362:179>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.lang.String com.github.javaparser.ast.expr.MethodReferenceExpr.getIdentifier() [JavaParserFacade.java <362:210 362:222>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserFacade.java <362:247 362:252>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> int java.util.List<E>.size() [JavaParserFacade.java <363:30 363:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage(com.github.javaparser.ast.expr.MethodReferenceExpr) -> java.util.List<E>.E java.util.List<E>.get(int) [JavaParserFacade.java <367:37 367:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <373:15 373:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <374:9 374:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <375:9 375:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.Node [JavaParserFacade.java <373:42 373:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.Node [JavaParserFacade.java <373:53 373:56>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> boolean [JavaParserFacade.java <373:65 373:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <374:25 374:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <375:26 375:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserFacade.java <376:23 376:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <389:13 389:16>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.ast.Node [JavaParserFacade.java <389:34 389:37>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> boolean [JavaParserFacade.java <389:45 389:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> java.lang.IllegalArgumentException.IllegalArgumentException() [JavaParserFacade.java <390:37 390:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> java.lang.IllegalArgumentException [JavaParserFacade.java <390:37 390:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> R com.github.javaparser.ast.visitor.Visitable.accept<R, A>(com.github.javaparser.ast.visitor.GenericVisitor<R, A>, A) [JavaParserFacade.java <391:21 391:26>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(com.github.javaparser.ast.Node, boolean) -> com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeExtractor [JavaParserFacade.java <391:28 391:40>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [JavaParserFacade.java <394:62 394:62>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [JavaParserFacade.java <528:103 528:103>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.TypeDeclaration<T> [JavaParserFacade.java <394:46 394:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <394:88 394:91>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <395:29 395:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <396:21 396:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.EnumDeclaration [JavaParserFacade.java <397:36 397:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.EnumDeclaration [JavaParserFacade.java <398:21 398:35>]
REFERENCE_CALL: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserFacade.java <399:20 399:32>]
REFERENCE_CALL: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserFacade.java <402:43 402:55>]
REFERENCE_CALL: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> java.lang.IllegalArgumentException.IllegalArgumentException() [JavaParserFacade.java <400:23 400:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> java.lang.IllegalArgumentException [JavaParserFacade.java <400:23 400:46>]
REFERENCE_CALL: com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.TypeDeclaration<?> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl(com.github.javaparser.ast.Node) [JavaParserFacade.java <402:20 402:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <406:12 406:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <407:9 407:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> com.github.javaparser.ast.body.VariableDeclarator [JavaParserFacade.java <406:44 406:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [JavaParserFacade.java <407:54 407:67>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <407:38 407:40>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <407:42 407:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType(com.github.javaparser.ast.body.VariableDeclarator) -> com.github.javaparser.ast.type.Type com.github.javaparser.ast.body.VariableDeclarator.getType() [JavaParserFacade.java <407:73 407:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <411:12 411:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.type.Type [JavaParserFacade.java <411:63 411:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <411:74 411:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.type.UnknownType [JavaParserFacade.java <412:29 412:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [JavaParserFacade.java <413:23 413:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> java.lang.IllegalArgumentException [JavaParserFacade.java <413:23 413:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <415:16 415:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <415:55 415:64>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <415:75 415:84>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <418:12 418:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type) -> com.github.javaparser.ast.type.Type [JavaParserFacade.java <418:63 418:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) [JavaParserFacade.java <419:16 419:29>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String [JavaParserFacade.java <423:13 423:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String [JavaParserFacade.java <424:9 424:14>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <423:26 423:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserFacade.java <424:54 424:58>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [JavaParserFacade.java <424:44 424:50>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <425:45 425:53>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope() [JavaParserFacade.java <425:34 425:41>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<com.github.javaparser.ast.type.ClassOrInterfaceType> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope() [JavaParserFacade.java <426:47 426:54>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [JavaParserFacade.java <426:20 426:24>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <426:58 426:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <432:15 432:18>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <441:18 441:21>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.Type [JavaParserFacade.java <432:66 432:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.core.resolution.Context [JavaParserFacade.java <432:77 432:83>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <433:29 433:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <434:13 434:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.ClassOrInterfaceType [JavaParserFacade.java <434:58 434:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String [JavaParserFacade.java <435:13 435:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName(com.github.javaparser.ast.type.ClassOrInterfaceType) [JavaParserFacade.java <435:27 435:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [JavaParserFacade.java <436:13 436:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <436:29 436:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserFacade.java <440:13 440:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <436:60 436:68>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <436:76 436:85>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <453:106 453:115>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [JavaParserFacade.java <437:22 437:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String) [JavaParserFacade.java <438:27 438:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [JavaParserFacade.java <438:27 438:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [JavaParserFacade.java <440:51 440:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.List<E> [JavaParserFacade.java <441:13 441:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static java.util.List<T> java.util.Collections.emptyList<T>() [JavaParserFacade.java <441:53 441:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <442:57 442:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <459:49 459:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <459:94 459:102>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <461:57 461:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <461:101 461:109>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <463:57 463:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <463:102 463:110>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.type.ClassOrInterfaceType.getTypeArguments() [JavaParserFacade.java <442:38 442:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.type.ClassOrInterfaceType.getTypeArguments() [JavaParserFacade.java <443:55 443:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserFacade.java <443:130 443:136>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserFacade.java <443:89 443:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserFacade.java <443:80 443:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <443:74 443:76>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <460:93 460:95>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <462:88 462:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <443:101 443:114>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <460:46 460:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <462:44 462:57>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <472:34 472:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserFacade.java <443:149 443:154>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter() [JavaParserFacade.java <445:33 445:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserFacade.java <446:48 446:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserFacade.java <447:46 447:69>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [JavaParserFacade.java <447:32 447:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [JavaParserFacade.java <450:32 450:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [JavaParserFacade.java <447:32 447:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [JavaParserFacade.java <450:32 450:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [JavaParserFacade.java <449:21 449:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [JavaParserFacade.java <449:92 449:124>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() [JavaParserFacade.java <450:79 450:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <453:28 453:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [JavaParserFacade.java <453:28 453:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserFacade.java <453:47 453:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.PrimitiveType [JavaParserFacade.java <455:67 455:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.PrimitiveType [JavaParserFacade.java <456:74 456:86>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) [JavaParserFacade.java <456:34 456:39>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String java.lang.Enum<E>.name() [JavaParserFacade.java <456:105 456:108>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.PrimitiveType.Primitive com.github.javaparser.ast.type.PrimitiveType.getType() [JavaParserFacade.java <456:95 456:101>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.WildcardType [JavaParserFacade.java <457:36 457:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.WildcardType [JavaParserFacade.java <458:13 458:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.WildcardType [JavaParserFacade.java <458:42 458:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getExtendedTypes() [JavaParserFacade.java <459:30 459:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getExtendedTypes() [JavaParserFacade.java <460:74 460:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getExtendedTypes() [JavaParserFacade.java <461:38 461:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getExtendedTypes() [JavaParserFacade.java <463:38 463:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getSuperTypes() [JavaParserFacade.java <459:78 459:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getSuperTypes() [JavaParserFacade.java <461:85 461:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getSuperTypes() [JavaParserFacade.java <462:72 462:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.util.Optional<com.github.javaparser.ast.type.ReferenceType> com.github.javaparser.ast.type.WildcardType.getSuperTypes() [JavaParserFacade.java <463:86 463:98>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserFacade.java <460:33 460:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.superBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserFacade.java <462:33 462:42>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.UNBOUNDED [JavaParserFacade.java <464:33 464:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [JavaParserFacade.java <466:27 466:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [JavaParserFacade.java <474:23 474:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <466:27 466:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.UnsupportedOperationException [JavaParserFacade.java <474:23 474:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String com.github.javaparser.ast.Node.toString() [JavaParserFacade.java <466:70 466:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.VoidType [JavaParserFacade.java <468:67 468:74>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.VoidType.INSTANCE [JavaParserFacade.java <469:29 469:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.ArrayType [JavaParserFacade.java <470:67 470:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.ArrayType [JavaParserFacade.java <471:44 471:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.ArrayType [JavaParserFacade.java <471:100 471:108>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserFacade.java <472:24 472:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [JavaParserFacade.java <472:24 472:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.Type com.github.javaparser.ast.type.ArrayType.getComponentType() [JavaParserFacade.java <472:61 472:76>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.String java.lang.Class<T>.getCanonicalName() [JavaParserFacade.java <474:69 474:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> java.lang.Class<?> java.lang.Object.getClass() [JavaParserFacade.java <474:58 474:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <479:12 479:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.type.Type [JavaParserFacade.java <479:56 479:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <479:67 479:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <480:16 480:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <480:48 480:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <480:65 480:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <483:12 483:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.ast.type.Type [JavaParserFacade.java <483:56 483:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.core.resolution.Context [JavaParserFacade.java <483:67 483:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(com.github.javaparser.ast.type.Type, com.github.javaparser.symbolsolver.core.resolution.Context) [JavaParserFacade.java <484:16 484:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <487:12 487:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <501:18 501:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.expr.MethodCallExpr [JavaParserFacade.java <487:43 487:56>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.List<E> [JavaParserFacade.java <488:9 488:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <488:14 488:17>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.ArrayList<E>.ArrayList() [JavaParserFacade.java <488:33 488:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.ArrayList<E> [JavaParserFacade.java <488:33 488:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getArguments() [JavaParserFacade.java <489:18 489:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.expr.Expression> com.github.javaparser.ast.expr.MethodCallExpr.getArguments() [JavaParserFacade.java <490:42 490:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.expr.Expression [JavaParserFacade.java <490:18 490:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> boolean java.util.List<E>.add(java.util.List<E>.E) [JavaParserFacade.java <493:28 493:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node, boolean) [JavaParserFacade.java <493:32 493:38>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.Exception [JavaParserFacade.java <494:26 494:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable) [JavaParserFacade.java <495:31 495:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.RuntimeException [JavaParserFacade.java <495:31 495:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.RuntimeException [JavaParserFacade.java <503:23 503:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [JavaParserFacade.java <495:55 495:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.core.resolution.Context [JavaParserFacade.java <500:9 500:15>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <500:45 500:54>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <500:62 500:71>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <501:104 501:113>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [JavaParserFacade.java <501:18 501:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<T> [JavaParserFacade.java <501:9 501:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <501:53 501:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserFacade.java <501:87 501:91>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.MethodCallExpr.getName() [JavaParserFacade.java <501:77 501:83>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.MethodCallExpr.getName() [JavaParserFacade.java <503:58 503:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> boolean java.util.Optional<T>.isPresent() [JavaParserFacade.java <502:26 502:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.RuntimeException.RuntimeException(java.lang.String) [JavaParserFacade.java <503:23 503:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <504:59 504:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserFacade.java <506:28 506:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<com.github.javaparser.Range> com.github.javaparser.ast.Node.getRange() [JavaParserFacade.java <504:48 504:55>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.Position com.github.javaparser.Range.begin [JavaParserFacade.java <504:65 504:69>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(com.github.javaparser.ast.expr.MethodCallExpr) -> int com.github.javaparser.Position.line [JavaParserFacade.java <504:71 504:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserFacade.java <509:12 509:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <509:56 509:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <510:34 510:50>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <510:81 510:90>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserFacade.java <516:12 516:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [JavaParserFacade.java <516:33 516:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <518:29 518:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [JavaParserFacade.java <519:62 519:88>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <519:24 519:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <522:24 522:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [JavaParserFacade.java <519:24 519:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [JavaParserFacade.java <522:24 522:40>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [JavaParserFacade.java <519:42 519:59>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <519:98 519:107>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <521:111 521:120>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <522:59 522:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.EnumDeclaration [JavaParserFacade.java <520:36 520:50>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.EnumDeclaration [JavaParserFacade.java <521:88 521:102>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [JavaParserFacade.java <521:13 521:37>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [JavaParserFacade.java <521:61 521:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.JavaParserEnumDeclaration(com.github.javaparser.ast.body.EnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <521:61 521:85>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) [JavaParserFacade.java <524:20 524:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserFacade.java <524:36 524:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserFacade.java <528:12 528:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) -> com.github.javaparser.ast.body.TypeDeclaration<T> [JavaParserFacade.java <528:87 528:101>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.toTypeDeclaration(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserFacade.java <529:34 529:50>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.typeSolver [JavaParserFacade.java <529:69 529:78>]
LOCAL_SYMBOL: JavaParserFacade.java<0> [JavaParserFacade.java <62:24 62:37>]
LOCAL_SYMBOL: JavaParserFacade.java<0> [JavaParserFacade.java <63:9 63:22>]
LOCAL_SYMBOL: JavaParserFacade.java<0> [JavaParserFacade.java <64:27 64:40>]
LOCAL_SYMBOL: JavaParserFacade.java<100:36> [JavaParserFacade.java <100:36 100:36>]
LOCAL_SYMBOL: JavaParserFacade.java<100:36> [JavaParserFacade.java <107:9 107:9>]
LOCAL_SYMBOL: JavaParserFacade.java<102:37> [JavaParserFacade.java <102:37 102:37>]
LOCAL_SYMBOL: JavaParserFacade.java<102:37> [JavaParserFacade.java <104:13 104:13>]
LOCAL_SYMBOL: JavaParserFacade.java<104:20> [JavaParserFacade.java <104:20 104:20>]
LOCAL_SYMBOL: JavaParserFacade.java<104:20> [JavaParserFacade.java <106:13 106:13>]
LOCAL_SYMBOL: JavaParserFacade.java<107:39> [JavaParserFacade.java <107:39 107:39>]
LOCAL_SYMBOL: JavaParserFacade.java<107:39> [JavaParserFacade.java <119:9 119:9>]
LOCAL_SYMBOL: JavaParserFacade.java<108:79> [JavaParserFacade.java <108:79 108:79>]
LOCAL_SYMBOL: JavaParserFacade.java<108:79> [JavaParserFacade.java <116:13 116:13>]
LOCAL_SYMBOL: JavaParserFacade.java<111:48> [JavaParserFacade.java <111:48 111:48>]
LOCAL_SYMBOL: JavaParserFacade.java<111:48> [JavaParserFacade.java <113:17 113:17>]
LOCAL_SYMBOL: JavaParserFacade.java<113:24> [JavaParserFacade.java <113:24 113:24>]
LOCAL_SYMBOL: JavaParserFacade.java<113:24> [JavaParserFacade.java <115:17 115:17>]
LOCAL_SYMBOL: JavaParserFacade.java<116:20> [JavaParserFacade.java <116:20 116:20>]
LOCAL_SYMBOL: JavaParserFacade.java<116:20> [JavaParserFacade.java <118:13 118:13>]
LOCAL_SYMBOL: JavaParserFacade.java<119:16> [JavaParserFacade.java <119:16 119:16>]
LOCAL_SYMBOL: JavaParserFacade.java<119:16> [JavaParserFacade.java <122:9 122:9>]
LOCAL_SYMBOL: JavaParserFacade.java<125:81> [JavaParserFacade.java <125:81 125:81>]
LOCAL_SYMBOL: JavaParserFacade.java<125:81> [JavaParserFacade.java <127:5 127:5>]
LOCAL_SYMBOL: JavaParserFacade.java<129:83> [JavaParserFacade.java <129:83 129:83>]
LOCAL_SYMBOL: JavaParserFacade.java<129:83> [JavaParserFacade.java <131:5 131:5>]
LOCAL_SYMBOL: JavaParserFacade.java<133:79> [JavaParserFacade.java <133:79 133:79>]
LOCAL_SYMBOL: JavaParserFacade.java<133:79> [JavaParserFacade.java <139:5 139:5>]
LOCAL_SYMBOL: JavaParserFacade.java<134:39> [JavaParserFacade.java <134:39 134:39>]
LOCAL_SYMBOL: JavaParserFacade.java<134:39> [JavaParserFacade.java <136:9 136:9>]
LOCAL_SYMBOL: JavaParserFacade.java<136:16> [JavaParserFacade.java <136:16 136:16>]
LOCAL_SYMBOL: JavaParserFacade.java<136:16> [JavaParserFacade.java <138:9 138:9>]
LOCAL_SYMBOL: JavaParserFacade.java<141:84> [JavaParserFacade.java <141:84 141:84>]
LOCAL_SYMBOL: JavaParserFacade.java<141:84> [JavaParserFacade.java <143:5 143:5>]
LOCAL_SYMBOL: JavaParserFacade.java<145:97> [JavaParserFacade.java <145:97 145:97>]
LOCAL_SYMBOL: JavaParserFacade.java<145:97> [JavaParserFacade.java <147:5 147:5>]
LOCAL_SYMBOL: JavaParserFacade.java<149:127> [JavaParserFacade.java <149:127 149:127>]
LOCAL_SYMBOL: JavaParserFacade.java<149:127> [JavaParserFacade.java <151:5 151:5>]
LOCAL_SYMBOL: JavaParserFacade.java<153:149> [JavaParserFacade.java <153:149 153:149>]
LOCAL_SYMBOL: JavaParserFacade.java<153:149> [JavaParserFacade.java <184:5 184:5>]
LOCAL_SYMBOL: JavaParserFacade.java<160:39> [JavaParserFacade.java <160:39 160:39>]
LOCAL_SYMBOL: JavaParserFacade.java<160:39> [JavaParserFacade.java <162:9 162:9>]
LOCAL_SYMBOL: JavaParserFacade.java<165:58> [JavaParserFacade.java <165:58 165:58>]
LOCAL_SYMBOL: JavaParserFacade.java<165:58> [JavaParserFacade.java <170:9 170:9>]
LOCAL_SYMBOL: JavaParserFacade.java<167:46> [JavaParserFacade.java <167:46 167:46>]
LOCAL_SYMBOL: JavaParserFacade.java<167:46> [JavaParserFacade.java <169:13 169:13>]
LOCAL_SYMBOL: JavaParserFacade.java<170:16> [JavaParserFacade.java <170:16 170:16>]
LOCAL_SYMBOL: JavaParserFacade.java<170:16> [JavaParserFacade.java <175:9 175:9>]
LOCAL_SYMBOL: JavaParserFacade.java<172:32> [JavaParserFacade.java <172:32 172:32>]
LOCAL_SYMBOL: JavaParserFacade.java<172:32> [JavaParserFacade.java <174:13 174:13>]
LOCAL_SYMBOL: JavaParserFacade.java<176:31> [JavaParserFacade.java <176:31 176:31>]
LOCAL_SYMBOL: JavaParserFacade.java<176:31> [JavaParserFacade.java <178:9 178:9>]
LOCAL_SYMBOL: JavaParserFacade.java<180:72> [JavaParserFacade.java <180:72 180:72>]
LOCAL_SYMBOL: JavaParserFacade.java<180:72> [JavaParserFacade.java <182:9 182:9>]
LOCAL_SYMBOL: JavaParserFacade.java<186:65> [JavaParserFacade.java <186:65 186:65>]
LOCAL_SYMBOL: JavaParserFacade.java<186:65> [JavaParserFacade.java <206:5 206:5>]
LOCAL_SYMBOL: JavaParserFacade.java<188:45> [JavaParserFacade.java <188:45 188:45>]
LOCAL_SYMBOL: JavaParserFacade.java<188:45> [JavaParserFacade.java <204:9 204:9>]
LOCAL_SYMBOL: JavaParserFacade.java<193:34> [JavaParserFacade.java <193:34 193:34>]
LOCAL_SYMBOL: JavaParserFacade.java<193:34> [JavaParserFacade.java <195:13 195:13>]
LOCAL_SYMBOL: JavaParserFacade.java<198:32> [JavaParserFacade.java <198:32 198:32>]
LOCAL_SYMBOL: JavaParserFacade.java<198:32> [JavaParserFacade.java <203:13 203:13>]
LOCAL_SYMBOL: JavaParserFacade.java<200:45> [JavaParserFacade.java <200:45 200:45>]
LOCAL_SYMBOL: JavaParserFacade.java<200:45> [JavaParserFacade.java <202:17 202:17>]
LOCAL_SYMBOL: JavaParserFacade.java<211:119> [JavaParserFacade.java <211:119 211:119>]
LOCAL_SYMBOL: JavaParserFacade.java<211:119> [JavaParserFacade.java <226:5 226:5>]
LOCAL_SYMBOL: JavaParserFacade.java<218:43> [JavaParserFacade.java <218:43 218:43>]
LOCAL_SYMBOL: JavaParserFacade.java<218:43> [JavaParserFacade.java <220:9 220:9>]
LOCAL_SYMBOL: JavaParserFacade.java<222:72> [JavaParserFacade.java <222:72 222:72>]
LOCAL_SYMBOL: JavaParserFacade.java<222:72> [JavaParserFacade.java <224:9 224:9>]
LOCAL_SYMBOL: JavaParserFacade.java<228:169> [JavaParserFacade.java <228:169 228:169>]
LOCAL_SYMBOL: JavaParserFacade.java<228:169> [JavaParserFacade.java <247:5 247:5>]
LOCAL_SYMBOL: JavaParserFacade.java<230:48> [JavaParserFacade.java <230:48 230:48>]
LOCAL_SYMBOL: JavaParserFacade.java<230:48> [JavaParserFacade.java <246:9 246:9>]
LOCAL_SYMBOL: JavaParserFacade.java<231:104> [JavaParserFacade.java <231:104 231:104>]
LOCAL_SYMBOL: JavaParserFacade.java<231:104> [JavaParserFacade.java <235:13 235:13>]
LOCAL_SYMBOL: JavaParserFacade.java<235:20> [JavaParserFacade.java <235:20 235:20>]
LOCAL_SYMBOL: JavaParserFacade.java<235:20> [JavaParserFacade.java <244:13 244:13>]
LOCAL_SYMBOL: JavaParserFacade.java<236:21> [JavaParserFacade.java <236:21 236:21>]
LOCAL_SYMBOL: JavaParserFacade.java<236:21> [JavaParserFacade.java <238:17 238:17>]
LOCAL_SYMBOL: JavaParserFacade.java<238:53> [JavaParserFacade.java <238:53 238:53>]
LOCAL_SYMBOL: JavaParserFacade.java<238:53> [JavaParserFacade.java <240:17 240:17>]
LOCAL_SYMBOL: JavaParserFacade.java<240:39> [JavaParserFacade.java <240:39 240:39>]
LOCAL_SYMBOL: JavaParserFacade.java<240:39> [JavaParserFacade.java <243:17 243:17>]
LOCAL_SYMBOL: JavaParserFacade.java<252:106> [JavaParserFacade.java <252:106 252:106>]
LOCAL_SYMBOL: JavaParserFacade.java<252:106> [JavaParserFacade.java <263:5 263:5>]
LOCAL_SYMBOL: JavaParserFacade.java<259:72> [JavaParserFacade.java <259:72 259:72>]
LOCAL_SYMBOL: JavaParserFacade.java<259:72> [JavaParserFacade.java <261:9 261:9>]
LOCAL_SYMBOL: JavaParserFacade.java<265:88> [JavaParserFacade.java <265:88 265:88>]
LOCAL_SYMBOL: JavaParserFacade.java<265:88> [JavaParserFacade.java <274:5 274:5>]
LOCAL_SYMBOL: JavaParserFacade.java<269:56> [JavaParserFacade.java <269:56 269:56>]
LOCAL_SYMBOL: JavaParserFacade.java<269:56> [JavaParserFacade.java <271:9 271:9>]
LOCAL_SYMBOL: JavaParserFacade.java<271:16> [JavaParserFacade.java <271:16 271:16>]
LOCAL_SYMBOL: JavaParserFacade.java<271:16> [JavaParserFacade.java <273:9 273:9>]
LOCAL_SYMBOL: JavaParserFacade.java<276:36> [JavaParserFacade.java <276:36 276:36>]
LOCAL_SYMBOL: JavaParserFacade.java<276:36> [JavaParserFacade.java <278:5 278:5>]
LOCAL_SYMBOL: JavaParserFacade.java<280:58> [JavaParserFacade.java <280:58 280:58>]
LOCAL_SYMBOL: JavaParserFacade.java<280:58> [JavaParserFacade.java <318:5 318:5>]
LOCAL_SYMBOL: JavaParserFacade.java<281:27> [JavaParserFacade.java <281:27 281:27>]
LOCAL_SYMBOL: JavaParserFacade.java<281:27> [JavaParserFacade.java <304:9 304:9>]
LOCAL_SYMBOL: JavaParserFacade.java<282:60> [JavaParserFacade.java <282:60 282:60>]
LOCAL_SYMBOL: JavaParserFacade.java<282:60> [JavaParserFacade.java <302:13 302:13>]
LOCAL_SYMBOL: JavaParserFacade.java<288:53> [JavaParserFacade.java <288:53 288:53>]
LOCAL_SYMBOL: JavaParserFacade.java<288:53> [JavaParserFacade.java <296:17 296:17>]
LOCAL_SYMBOL: JavaParserFacade.java<290:68> [JavaParserFacade.java <290:68 290:68>]
LOCAL_SYMBOL: JavaParserFacade.java<290:68> [JavaParserFacade.java <295:21 295:21>]
LOCAL_SYMBOL: JavaParserFacade.java<291:71> [JavaParserFacade.java <291:71 291:71>]
LOCAL_SYMBOL: JavaParserFacade.java<291:71> [JavaParserFacade.java <294:25 294:25>]
LOCAL_SYMBOL: JavaParserFacade.java<297:42> [JavaParserFacade.java <297:42 297:42>]
LOCAL_SYMBOL: JavaParserFacade.java<297:42> [JavaParserFacade.java <300:17 300:17>]
LOCAL_SYMBOL: JavaParserFacade.java<304:16> [JavaParserFacade.java <304:16 304:16>]
LOCAL_SYMBOL: JavaParserFacade.java<304:16> [JavaParserFacade.java <317:9 317:9>]
LOCAL_SYMBOL: JavaParserFacade.java<306:34> [JavaParserFacade.java <306:34 306:34>]
LOCAL_SYMBOL: JavaParserFacade.java<306:34> [JavaParserFacade.java <308:13 308:13>]
LOCAL_SYMBOL: JavaParserFacade.java<310:35> [JavaParserFacade.java <310:35 310:35>]
LOCAL_SYMBOL: JavaParserFacade.java<310:35> [JavaParserFacade.java <315:13 315:13>]
LOCAL_SYMBOL: JavaParserFacade.java<320:65> [JavaParserFacade.java <320:65 320:65>]
LOCAL_SYMBOL: JavaParserFacade.java<320:65> [JavaParserFacade.java <329:5 329:5>]
LOCAL_SYMBOL: JavaParserFacade.java<321:36> [JavaParserFacade.java <321:36 321:36>]
LOCAL_SYMBOL: JavaParserFacade.java<321:36> [JavaParserFacade.java <323:9 323:9>]
LOCAL_SYMBOL: JavaParserFacade.java<324:41> [JavaParserFacade.java <324:41 324:41>]
LOCAL_SYMBOL: JavaParserFacade.java<324:41> [JavaParserFacade.java <326:9 326:9>]
LOCAL_SYMBOL: JavaParserFacade.java<326:16> [JavaParserFacade.java <326:16 326:16>]
LOCAL_SYMBOL: JavaParserFacade.java<326:16> [JavaParserFacade.java <328:9 328:9>]
LOCAL_SYMBOL: JavaParserFacade.java<337:77> [JavaParserFacade.java <337:77 337:77>]
LOCAL_SYMBOL: JavaParserFacade.java<337:77> [JavaParserFacade.java <347:5 347:5>]
LOCAL_SYMBOL: JavaParserFacade.java<338:39> [JavaParserFacade.java <338:39 338:39>]
LOCAL_SYMBOL: JavaParserFacade.java<338:39> [JavaParserFacade.java <345:9 345:9>]
LOCAL_SYMBOL: JavaParserFacade.java<339:44> [JavaParserFacade.java <339:44 339:44>]
LOCAL_SYMBOL: JavaParserFacade.java<339:44> [JavaParserFacade.java <344:13 344:13>]
LOCAL_SYMBOL: JavaParserFacade.java<341:138> [JavaParserFacade.java <341:138 341:138>]
LOCAL_SYMBOL: JavaParserFacade.java<341:138> [JavaParserFacade.java <343:17 343:17>]
LOCAL_SYMBOL: JavaParserFacade.java<349:82> [JavaParserFacade.java <349:82 349:82>]
LOCAL_SYMBOL: JavaParserFacade.java<349:82> [JavaParserFacade.java <371:5 371:5>]
LOCAL_SYMBOL: JavaParserFacade.java<350:68> [JavaParserFacade.java <350:68 350:68>]
LOCAL_SYMBOL: JavaParserFacade.java<350:68> [JavaParserFacade.java <352:9 352:9>]
LOCAL_SYMBOL: JavaParserFacade.java<354:99> [JavaParserFacade.java <354:99 354:99>]
LOCAL_SYMBOL: JavaParserFacade.java<354:99> [JavaParserFacade.java <356:9 356:9>]
LOCAL_SYMBOL: JavaParserFacade.java<359:57> [JavaParserFacade.java <359:57 359:57>]
LOCAL_SYMBOL: JavaParserFacade.java<359:57> [JavaParserFacade.java <361:9 361:9>]
LOCAL_SYMBOL: JavaParserFacade.java<363:38> [JavaParserFacade.java <363:38 363:38>]
LOCAL_SYMBOL: JavaParserFacade.java<363:38> [JavaParserFacade.java <370:9 370:9>]
LOCAL_SYMBOL: JavaParserFacade.java<373:87> [JavaParserFacade.java <373:87 373:87>]
LOCAL_SYMBOL: JavaParserFacade.java<373:87> [JavaParserFacade.java <380:5 380:5>]
LOCAL_SYMBOL: JavaParserFacade.java<376:49> [JavaParserFacade.java <376:49 376:49>]
LOCAL_SYMBOL: JavaParserFacade.java<376:49> [JavaParserFacade.java <378:9 378:9>]
LOCAL_SYMBOL: JavaParserFacade.java<389:67> [JavaParserFacade.java <389:67 389:67>]
LOCAL_SYMBOL: JavaParserFacade.java<389:67> [JavaParserFacade.java <392:5 392:5>]
LOCAL_SYMBOL: JavaParserFacade.java<394:99> [JavaParserFacade.java <394:99 394:99>]
LOCAL_SYMBOL: JavaParserFacade.java<394:99> [JavaParserFacade.java <404:5 404:5>]
LOCAL_SYMBOL: JavaParserFacade.java<395:58> [JavaParserFacade.java <395:58 395:58>]
LOCAL_SYMBOL: JavaParserFacade.java<395:58> [JavaParserFacade.java <397:9 397:9>]
LOCAL_SYMBOL: JavaParserFacade.java<397:53> [JavaParserFacade.java <397:53 397:53>]
LOCAL_SYMBOL: JavaParserFacade.java<397:53> [JavaParserFacade.java <399:9 399:9>]
LOCAL_SYMBOL: JavaParserFacade.java<399:49> [JavaParserFacade.java <399:49 399:49>]
LOCAL_SYMBOL: JavaParserFacade.java<399:49> [JavaParserFacade.java <401:9 401:9>]
LOCAL_SYMBOL: JavaParserFacade.java<401:16> [JavaParserFacade.java <401:16 401:16>]
LOCAL_SYMBOL: JavaParserFacade.java<401:16> [JavaParserFacade.java <403:9 403:9>]
LOCAL_SYMBOL: JavaParserFacade.java<406:68> [JavaParserFacade.java <406:68 406:68>]
LOCAL_SYMBOL: JavaParserFacade.java<406:68> [JavaParserFacade.java <409:5 409:5>]
LOCAL_SYMBOL: JavaParserFacade.java<411:88> [JavaParserFacade.java <411:88 411:88>]
LOCAL_SYMBOL: JavaParserFacade.java<411:88> [JavaParserFacade.java <416:5 416:5>]
LOCAL_SYMBOL: JavaParserFacade.java<412:42> [JavaParserFacade.java <412:42 412:42>]
LOCAL_SYMBOL: JavaParserFacade.java<412:42> [JavaParserFacade.java <414:9 414:9>]
LOCAL_SYMBOL: JavaParserFacade.java<418:74> [JavaParserFacade.java <418:74 418:74>]
LOCAL_SYMBOL: JavaParserFacade.java<418:74> [JavaParserFacade.java <420:5 420:5>]
LOCAL_SYMBOL: JavaParserFacade.java<423:69> [JavaParserFacade.java <423:69 423:69>]
LOCAL_SYMBOL: JavaParserFacade.java<423:69> [JavaParserFacade.java <430:5 430:5>]
LOCAL_SYMBOL: JavaParserFacade.java<425:58> [JavaParserFacade.java <425:58 425:58>]
LOCAL_SYMBOL: JavaParserFacade.java<425:58> [JavaParserFacade.java <427:9 427:9>]
LOCAL_SYMBOL: JavaParserFacade.java<427:16> [JavaParserFacade.java <427:16 427:16>]
LOCAL_SYMBOL: JavaParserFacade.java<427:16> [JavaParserFacade.java <429:9 429:9>]
LOCAL_SYMBOL: JavaParserFacade.java<432:94> [JavaParserFacade.java <432:94 432:94>]
LOCAL_SYMBOL: JavaParserFacade.java<432:94> [JavaParserFacade.java <476:5 476:5>]
LOCAL_SYMBOL: JavaParserFacade.java<433:51> [JavaParserFacade.java <433:51 433:51>]
LOCAL_SYMBOL: JavaParserFacade.java<433:51> [JavaParserFacade.java <455:9 455:9>]
LOCAL_SYMBOL: JavaParserFacade.java<437:34> [JavaParserFacade.java <437:34 437:34>]
LOCAL_SYMBOL: JavaParserFacade.java<437:34> [JavaParserFacade.java <439:13 439:13>]
LOCAL_SYMBOL: JavaParserFacade.java<442:70> [JavaParserFacade.java <442:70 442:70>]
LOCAL_SYMBOL: JavaParserFacade.java<442:70> [JavaParserFacade.java <444:13 444:13>]
LOCAL_SYMBOL: JavaParserFacade.java<445:52> [JavaParserFacade.java <445:52 445:52>]
LOCAL_SYMBOL: JavaParserFacade.java<445:52> [JavaParserFacade.java <452:13 452:13>]
LOCAL_SYMBOL: JavaParserFacade.java<446:74> [JavaParserFacade.java <446:74 446:74>]
LOCAL_SYMBOL: JavaParserFacade.java<446:74> [JavaParserFacade.java <448:17 448:17>]
LOCAL_SYMBOL: JavaParserFacade.java<448:24> [JavaParserFacade.java <448:24 448:24>]
LOCAL_SYMBOL: JavaParserFacade.java<448:24> [JavaParserFacade.java <451:17 451:17>]
LOCAL_SYMBOL: JavaParserFacade.java<452:20> [JavaParserFacade.java <452:20 452:20>]
LOCAL_SYMBOL: JavaParserFacade.java<452:20> [JavaParserFacade.java <454:13 454:13>]
LOCAL_SYMBOL: JavaParserFacade.java<455:82> [JavaParserFacade.java <455:82 455:82>]
LOCAL_SYMBOL: JavaParserFacade.java<455:82> [JavaParserFacade.java <457:9 457:9>]
LOCAL_SYMBOL: JavaParserFacade.java<457:50> [JavaParserFacade.java <457:50 457:50>]
LOCAL_SYMBOL: JavaParserFacade.java<457:50> [JavaParserFacade.java <468:9 468:9>]
LOCAL_SYMBOL: JavaParserFacade.java<459:107> [JavaParserFacade.java <459:107 459:107>]
LOCAL_SYMBOL: JavaParserFacade.java<459:107> [JavaParserFacade.java <461:13 461:13>]
LOCAL_SYMBOL: JavaParserFacade.java<461:114> [JavaParserFacade.java <461:114 461:114>]
LOCAL_SYMBOL: JavaParserFacade.java<461:114> [JavaParserFacade.java <463:13 463:13>]
LOCAL_SYMBOL: JavaParserFacade.java<463:115> [JavaParserFacade.java <463:115 463:115>]
LOCAL_SYMBOL: JavaParserFacade.java<463:115> [JavaParserFacade.java <465:13 465:13>]
LOCAL_SYMBOL: JavaParserFacade.java<465:20> [JavaParserFacade.java <465:20 465:20>]
LOCAL_SYMBOL: JavaParserFacade.java<465:20> [JavaParserFacade.java <467:13 467:13>]
LOCAL_SYMBOL: JavaParserFacade.java<468:77> [JavaParserFacade.java <468:77 468:77>]
LOCAL_SYMBOL: JavaParserFacade.java<468:77> [JavaParserFacade.java <470:9 470:9>]
LOCAL_SYMBOL: JavaParserFacade.java<470:78> [JavaParserFacade.java <470:78 470:78>]
LOCAL_SYMBOL: JavaParserFacade.java<470:78> [JavaParserFacade.java <473:9 473:9>]
LOCAL_SYMBOL: JavaParserFacade.java<473:16> [JavaParserFacade.java <473:16 473:16>]
LOCAL_SYMBOL: JavaParserFacade.java<473:16> [JavaParserFacade.java <475:9 475:9>]
LOCAL_SYMBOL: JavaParserFacade.java<479:78> [JavaParserFacade.java <479:78 479:78>]
LOCAL_SYMBOL: JavaParserFacade.java<479:78> [JavaParserFacade.java <481:5 481:5>]
LOCAL_SYMBOL: JavaParserFacade.java<483:84> [JavaParserFacade.java <483:84 483:84>]
LOCAL_SYMBOL: JavaParserFacade.java<483:84> [JavaParserFacade.java <485:5 485:5>]
LOCAL_SYMBOL: JavaParserFacade.java<487:64> [JavaParserFacade.java <487:64 487:64>]
LOCAL_SYMBOL: JavaParserFacade.java<487:64> [JavaParserFacade.java <507:5 507:5>]
LOCAL_SYMBOL: JavaParserFacade.java<489:42> [JavaParserFacade.java <489:42 489:42>]
LOCAL_SYMBOL: JavaParserFacade.java<489:42> [JavaParserFacade.java <499:9 499:9>]
LOCAL_SYMBOL: JavaParserFacade.java<490:58> [JavaParserFacade.java <490:58 490:58>]
LOCAL_SYMBOL: JavaParserFacade.java<490:58> [JavaParserFacade.java <498:13 498:13>]
LOCAL_SYMBOL: JavaParserFacade.java<492:21> [JavaParserFacade.java <492:21 492:21>]
LOCAL_SYMBOL: JavaParserFacade.java<492:21> [JavaParserFacade.java <494:17 494:17>]
LOCAL_SYMBOL: JavaParserFacade.java<494:39> [JavaParserFacade.java <494:39 494:39>]
LOCAL_SYMBOL: JavaParserFacade.java<494:39> [JavaParserFacade.java <496:17 496:17>]
LOCAL_SYMBOL: JavaParserFacade.java<502:39> [JavaParserFacade.java <502:39 502:39>]
LOCAL_SYMBOL: JavaParserFacade.java<502:39> [JavaParserFacade.java <505:9 505:9>]
LOCAL_SYMBOL: JavaParserFacade.java<509:113> [JavaParserFacade.java <509:113 509:113>]
LOCAL_SYMBOL: JavaParserFacade.java<509:113> [JavaParserFacade.java <511:5 511:5>]
LOCAL_SYMBOL: JavaParserFacade.java<516:44> [JavaParserFacade.java <516:44 516:44>]
LOCAL_SYMBOL: JavaParserFacade.java<516:44> [JavaParserFacade.java <526:5 526:5>]
LOCAL_SYMBOL: JavaParserFacade.java<518:58> [JavaParserFacade.java <518:58 518:58>]
LOCAL_SYMBOL: JavaParserFacade.java<518:58> [JavaParserFacade.java <520:9 520:9>]
LOCAL_SYMBOL: JavaParserFacade.java<520:53> [JavaParserFacade.java <520:53 520:53>]
LOCAL_SYMBOL: JavaParserFacade.java<520:53> [JavaParserFacade.java <523:9 523:9>]
LOCAL_SYMBOL: JavaParserFacade.java<523:16> [JavaParserFacade.java <523:16 523:16>]
LOCAL_SYMBOL: JavaParserFacade.java<523:16> [JavaParserFacade.java <525:9 525:9>]
LOCAL_SYMBOL: JavaParserFacade.java<528:123> [JavaParserFacade.java <528:123 528:123>]
LOCAL_SYMBOL: JavaParserFacade.java<528:123> [JavaParserFacade.java <530:5 530:5>]
LOCAL_SYMBOL: JavaParserFacade.java<56:31> [JavaParserFacade.java <56:31 56:31>]
LOCAL_SYMBOL: JavaParserFacade.java<56:31> [JavaParserFacade.java <531:1 531:1>]
LOCAL_SYMBOL: JavaParserFacade.java<60:12> [JavaParserFacade.java <60:12 60:12>]
LOCAL_SYMBOL: JavaParserFacade.java<60:12> [JavaParserFacade.java <65:5 65:5>]
LOCAL_SYMBOL: JavaParserFacade.java<74:53> [JavaParserFacade.java <74:53 74:53>]
LOCAL_SYMBOL: JavaParserFacade.java<74:53> [JavaParserFacade.java <78:5 78:5>]
LOCAL_SYMBOL: JavaParserFacade.java<80:39> [JavaParserFacade.java <80:39 80:39>]
LOCAL_SYMBOL: JavaParserFacade.java<80:39> [JavaParserFacade.java <82:5 82:5>]
LOCAL_SYMBOL: JavaParserFacade.java<84:43> [JavaParserFacade.java <84:43 84:43>]
LOCAL_SYMBOL: JavaParserFacade.java<84:43> [JavaParserFacade.java <86:5 86:5>]
LOCAL_SYMBOL: JavaParserFacade.java<88:63> [JavaParserFacade.java <88:63 88:63>]
LOCAL_SYMBOL: JavaParserFacade.java<88:63> [JavaParserFacade.java <90:5 90:5>]
LOCAL_SYMBOL: JavaParserFacade.java<95:41> [JavaParserFacade.java <95:41 95:41>]
LOCAL_SYMBOL: JavaParserFacade.java<95:41> [JavaParserFacade.java <97:5 97:5>]
LOCAL_SYMBOL: JavaParserFacade.java<99:96> [JavaParserFacade.java <99:96 99:96>]
LOCAL_SYMBOL: JavaParserFacade.java<99:96> [JavaParserFacade.java <123:5 123:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade<0> [JavaParserFacade.java <74:41 74:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade<0> [JavaParserFacade.java <75:27 75:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade<0> [JavaParserFacade.java <76:46 76:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.JavaParserFacade<0> [JavaParserFacade.java <77:48 77:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<0> [JavaParserFacade.java <479:61 479:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<0> [JavaParserFacade.java <480:24 480:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<0> [JavaParserFacade.java <483:61 483:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<0> [JavaParserFacade.java <484:31 484:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<1> [JavaParserFacade.java <479:72 479:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<1> [JavaParserFacade.java <480:59 480:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<1> [JavaParserFacade.java <483:75 483:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert<1> [JavaParserFacade.java <484:37 484:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <411:68 411:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <412:13 412:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <415:31 415:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <418:68 418:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <419:31 419:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <419:37 419:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <432:71 432:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <433:13 433:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <434:80 434:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <455:20 455:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <456:89 456:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <457:20 457:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <458:56 458:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <468:20 468:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <470:20 470:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <471:111 471:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<0> [JavaParserFacade.java <474:53 474:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <458:26 458:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <459:17 459:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <459:65 459:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <460:61 460:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <461:25 461:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <461:72 461:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <462:59 462:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <463:25 463:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <463:73 463:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<10> [JavaParserFacade.java <466:57 466:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<11> [JavaParserFacade.java <471:54 471:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<11> [JavaParserFacade.java <472:49 472:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <411:79 411:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <415:66 415:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <432:85 432:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <436:52 436:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <443:120 443:126>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <460:100 460:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <462:95 462:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<1> [JavaParserFacade.java <472:81 472:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<2> [JavaParserFacade.java <434:34 434:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<2> [JavaParserFacade.java <435:33 435:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<2> [JavaParserFacade.java <442:17 442:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<2> [JavaParserFacade.java <443:34 443:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<3> [JavaParserFacade.java <435:20 435:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<3> [JavaParserFacade.java <436:70 436:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<3> [JavaParserFacade.java <438:51 438:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<4> [JavaParserFacade.java <436:46 436:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<4> [JavaParserFacade.java <437:18 437:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<4> [JavaParserFacade.java <440:47 440:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<5> [JavaParserFacade.java <440:29 440:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<5> [JavaParserFacade.java <445:17 445:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<5> [JavaParserFacade.java <446:21 446:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<5> [JavaParserFacade.java <447:72 447:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<5> [JavaParserFacade.java <449:127 449:141>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<5> [JavaParserFacade.java <453:73 453:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<6> [JavaParserFacade.java <441:24 441:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<6> [JavaParserFacade.java <443:17 443:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<6> [JavaParserFacade.java <453:90 453:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<9> [JavaParserFacade.java <449:55 449:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage<9> [JavaParserFacade.java <450:45 450:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType<0> [JavaParserFacade.java <406:63 406:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType<0> [JavaParserFacade.java <407:69 407:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType<0> [JavaParserFacade.java <407:84 407:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType<1> [JavaParserFacade.java <407:14 407:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsageVariableType<1> [JavaParserFacade.java <408:16 408:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <320:49 320:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <321:13 321:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <322:32 322:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <325:25 325:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <337:49 337:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <338:25 338:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<0> [JavaParserFacade.java <342:40 342:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <320:59 320:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <321:29 321:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <322:40 322:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <324:13 324:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <325:43 325:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <337:65 337:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <341:53 341:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<1> [JavaParserFacade.java <341:125 341:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<2> [JavaParserFacade.java <338:19 338:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<2> [JavaParserFacade.java <339:17 339:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<2> [JavaParserFacade.java <340:57 340:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<4> [JavaParserFacade.java <340:28 340:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<4> [JavaParserFacade.java <341:21 341:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<4> [JavaParserFacade.java <341:93 341:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.find<4> [JavaParserFacade.java <342:48 342:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <394:93 394:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <395:13 395:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <396:50 396:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <397:20 397:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <398:38 398:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <399:34 399:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.findContainingTypeDecl<0> [JavaParserFacade.java <402:57 402:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get<0> [JavaParserFacade.java <88:51 88:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get<0> [JavaParserFacade.java <89:42 89:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<0> [JavaParserFacade.java <373:47 373:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<0> [JavaParserFacade.java <374:41 374:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<1> [JavaParserFacade.java <373:58 373:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<1> [JavaParserFacade.java <375:42 375:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<2> [JavaParserFacade.java <373:73 373:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<2> [JavaParserFacade.java <374:47 374:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<2> [JavaParserFacade.java <375:49 375:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<3> [JavaParserFacade.java <374:14 374:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<3> [JavaParserFacade.java <376:38 376:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<3> [JavaParserFacade.java <379:16 379:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<4> [JavaParserFacade.java <375:14 375:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<4> [JavaParserFacade.java <376:13 376:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete<4> [JavaParserFacade.java <377:20 377:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <276:30 276:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <277:24 277:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <280:30 280:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <282:53 282:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <283:44 283:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <285:44 285:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <288:21 288:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <289:70 289:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <298:51 298:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <299:48 299:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <299:62 299:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <301:46 301:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <303:47 303:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <305:63 305:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <309:51 309:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <311:48 311:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <312:47 312:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<0> [JavaParserFacade.java <313:46 313:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<1> [JavaParserFacade.java <280:44 280:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<1> [JavaParserFacade.java <281:13 281:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<1> [JavaParserFacade.java <283:50 283:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<1> [JavaParserFacade.java <311:54 311:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<2> [JavaParserFacade.java <283:22 283:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<2> [JavaParserFacade.java <285:50 285:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<2> [JavaParserFacade.java <301:62 301:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<3> [JavaParserFacade.java <287:25 287:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<3> [JavaParserFacade.java <293:29 293:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<3> [JavaParserFacade.java <297:21 297:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<4> [JavaParserFacade.java <289:36 289:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<4> [JavaParserFacade.java <290:37 290:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<5> [JavaParserFacade.java <290:31 290:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<5> [JavaParserFacade.java <291:65 291:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<5> [JavaParserFacade.java <292:37 292:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <305:28 305:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <306:17 306:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <307:24 307:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <309:13 309:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <310:18 310:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <313:80 313:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<7> [JavaParserFacade.java <316:20 316:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<8> [JavaParserFacade.java <311:22 311:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<8> [JavaParserFacade.java <312:53 312:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType<8> [JavaParserFacade.java <314:24 314:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete<0> [JavaParserFacade.java <389:39 389:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete<0> [JavaParserFacade.java <390:13 390:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete<0> [JavaParserFacade.java <391:16 391:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete<1> [JavaParserFacade.java <389:53 389:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete<1> [JavaParserFacade.java <391:43 391:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration<0> [JavaParserFacade.java <509:84 509:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration<0> [JavaParserFacade.java <510:52 510:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration<0> [JavaParserFacade.java <528:106 528:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration<0> [JavaParserFacade.java <529:52 529:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<0> [JavaParserFacade.java <516:38 516:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<0> [JavaParserFacade.java <518:13 518:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<0> [JavaParserFacade.java <519:91 519:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<0> [JavaParserFacade.java <520:20 520:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<0> [JavaParserFacade.java <521:105 521:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<0> [JavaParserFacade.java <524:50 524:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<1> [JavaParserFacade.java <521:39 521:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeOfThisIn<1> [JavaParserFacade.java <522:42 522:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<0> [JavaParserFacade.java <423:47 423:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<0> [JavaParserFacade.java <424:23 424:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<0> [JavaParserFacade.java <425:13 425:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<0> [JavaParserFacade.java <426:26 426:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<1> [JavaParserFacade.java <424:16 424:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<1> [JavaParserFacade.java <426:73 426:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.qName<1> [JavaParserFacade.java <428:20 428:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <125:71 125:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <126:41 126:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <126:69 126:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <129:73 129:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <130:41 130:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <130:59 130:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <133:73 133:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <134:13 134:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <135:37 135:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <137:48 137:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <141:68 141:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <142:22 142:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <145:77 145:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <146:22 146:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <149:92 149:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <150:22 150:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <153:92 153:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <157:24 157:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <157:59 157:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <159:61 159:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <165:14 165:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <186:60 186:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <188:13 188:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <190:32 190:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <197:44 197:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <205:81 205:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <211:77 211:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <215:24 215:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <215:44 215:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <217:67 217:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <217:97 217:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <252:68 252:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <256:24 256:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <256:40 256:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <258:79 258:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <258:119 258:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <265:72 265:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <266:56 266:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<0> [JavaParserFacade.java <267:93 267:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<10> [JavaParserFacade.java <180:44 180:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<10> [JavaParserFacade.java <181:13 181:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <153:135 153:146>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <157:109 157:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <190:20 190:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <192:89 192:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <199:93 199:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <211:105 211:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <215:79 215:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <252:92 252:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <256:71 256:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <266:17 266:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<1> [JavaParserFacade.java <267:75 267:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <154:20 154:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <157:123 157:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <179:150 179:162>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <192:55 192:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <193:17 193:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <194:47 194:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <212:20 212:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <215:93 215:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <221:190 221:202>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <253:20 253:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <256:85 256:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <258:153 258:165>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <267:42 267:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <268:79 268:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<2> [JavaParserFacade.java <269:13 269:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <155:45 155:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <157:138 157:149>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <180:58 180:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <197:39 197:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <198:17 198:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <199:69 199:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <213:45 213:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <215:108 215:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <222:58 222:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <254:45 254:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <256:100 256:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <259:58 259:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <268:31 268:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<3> [JavaParserFacade.java <270:43 270:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <159:47 159:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <160:14 160:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <163:49 163:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <199:55 199:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <200:21 200:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <201:70 201:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <217:14 217:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <218:14 218:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <221:121 221:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <258:44 258:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <260:35 260:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<4> [JavaParserFacade.java <262:16 262:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <163:37 163:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <166:71 166:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <166:102 166:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <171:80 171:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <171:113 171:121>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <221:49 221:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <223:35 223:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <225:16 225:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <259:44 259:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<5> [JavaParserFacade.java <260:13 260:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <164:25 164:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <168:17 168:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <173:17 173:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <176:13 176:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <179:121 179:128>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <222:44 222:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<6> [JavaParserFacade.java <223:13 223:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<7> [JavaParserFacade.java <166:18 166:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<7> [JavaParserFacade.java <167:17 167:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<7> [JavaParserFacade.java <168:28 168:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<8> [JavaParserFacade.java <171:46 171:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<8> [JavaParserFacade.java <172:17 172:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<8> [JavaParserFacade.java <173:28 173:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<9> [JavaParserFacade.java <179:49 179:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<9> [JavaParserFacade.java <181:35 181:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve<9> [JavaParserFacade.java <183:16 183:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<0> [JavaParserFacade.java <228:38 228:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<0> [JavaParserFacade.java <242:29 242:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<10> [JavaParserFacade.java <240:36 240:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<10> [JavaParserFacade.java <242:52 242:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<1> [JavaParserFacade.java <228:65 228:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<1> [JavaParserFacade.java <230:42 230:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<2> [JavaParserFacade.java <228:79 228:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<2> [JavaParserFacade.java <237:96 237:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<3> [JavaParserFacade.java <228:104 228:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<3> [JavaParserFacade.java <233:17 233:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<3> [JavaParserFacade.java <237:21 237:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<4> [JavaParserFacade.java <228:155 228:166>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<4> [JavaParserFacade.java <234:17 234:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<5> [JavaParserFacade.java <229:13 229:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<5> [JavaParserFacade.java <232:95 232:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<5> [JavaParserFacade.java <245:13 245:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<6> [JavaParserFacade.java <230:25 230:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<6> [JavaParserFacade.java <231:17 231:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<6> [JavaParserFacade.java <231:57 231:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<6> [JavaParserFacade.java <237:80 237:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<6> [JavaParserFacade.java <242:35 242:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<8> [JavaParserFacade.java <232:47 232:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<8> [JavaParserFacade.java <233:35 233:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<8> [JavaParserFacade.java <234:34 234:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<9> [JavaParserFacade.java <238:50 238:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveArguments<9> [JavaParserFacade.java <239:27 239:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <99:50 99:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <100:13 100:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <101:62 101:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <105:24 105:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <107:20 107:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <108:17 108:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <108:50 108:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <109:42 109:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <117:24 117:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<0> [JavaParserFacade.java <120:27 120:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<1> [JavaParserFacade.java <99:64 99:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<1> [JavaParserFacade.java <101:37 101:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<1> [JavaParserFacade.java <110:88 110:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<2> [JavaParserFacade.java <99:84 99:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<2> [JavaParserFacade.java <101:79 101:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<2> [JavaParserFacade.java <110:97 110:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<3> [JavaParserFacade.java <101:28 101:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<3> [JavaParserFacade.java <102:17 102:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<3> [JavaParserFacade.java <103:24 103:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<4> [JavaParserFacade.java <109:26 109:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<4> [JavaParserFacade.java <110:56 110:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<4> [JavaParserFacade.java <111:21 111:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<5> [JavaParserFacade.java <110:22 110:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<5> [JavaParserFacade.java <112:50 112:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<5> [JavaParserFacade.java <114:48 114:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<6> [JavaParserFacade.java <120:18 120:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveGenericTypes<6> [JavaParserFacade.java <121:20 121:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <487:58 487:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <489:13 489:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <490:37 490:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <495:133 495:136>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <500:56 500:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <501:72 501:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <503:53 503:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <504:23 504:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<0> [JavaParserFacade.java <504:43 504:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<1> [JavaParserFacade.java <488:20 488:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<1> [JavaParserFacade.java <493:21 493:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<1> [JavaParserFacade.java <501:96 501:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<1> [JavaParserFacade.java <504:119 504:124>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<2> [JavaParserFacade.java <490:29 490:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<2> [JavaParserFacade.java <493:40 493:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<2> [JavaParserFacade.java <495:126 495:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<4> [JavaParserFacade.java <494:36 494:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<4> [JavaParserFacade.java <495:140 495:140>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<5> [JavaParserFacade.java <500:17 500:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<5> [JavaParserFacade.java <501:45 501:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<5> [JavaParserFacade.java <504:85 504:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<6> [JavaParserFacade.java <501:31 501:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<6> [JavaParserFacade.java <502:14 502:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage<6> [JavaParserFacade.java <506:16 506:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<0> [JavaParserFacade.java <349:61 349:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<0> [JavaParserFacade.java <350:15 350:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<0> [JavaParserFacade.java <353:40 353:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<0> [JavaParserFacade.java <362:190 362:208>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<1> [JavaParserFacade.java <353:18 353:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<1> [JavaParserFacade.java <354:15 354:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<1> [JavaParserFacade.java <355:53 355:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<1> [JavaParserFacade.java <357:76 357:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<2> [JavaParserFacade.java <357:30 357:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<2> [JavaParserFacade.java <358:104 358:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<2> [JavaParserFacade.java <358:148 358:167>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<3> [JavaParserFacade.java <358:42 358:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<3> [JavaParserFacade.java <359:14 359:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<3> [JavaParserFacade.java <362:70 362:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<4> [JavaParserFacade.java <362:27 362:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<4> [JavaParserFacade.java <363:17 363:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.toMethodUsage<4> [JavaParserFacade.java <367:24 367:35>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [JavaParserFacade.java <443:94 443:95>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [JavaParserFacade.java <443:116 443:117>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [JavaParserFacade.java <362:164 362:165>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [JavaParserFacade.java <362:170 362:171>]
COMMENT: comment [JavaParserFacade.java <1:1 15:3>]
COMMENT: comment [JavaParserFacade.java <51:1 55:3>]
COMMENT: comment [JavaParserFacade.java <92:5 94:7>]
COMMENT: comment [JavaParserFacade.java <187:9 187:60>]
COMMENT: comment [JavaParserFacade.java <189:13 189:33>]
COMMENT: comment [JavaParserFacade.java <191:13 191:52>]
COMMENT: comment [JavaParserFacade.java <196:13 196:61>]
COMMENT: comment [JavaParserFacade.java <208:5 210:7>]
COMMENT: comment [JavaParserFacade.java <249:5 251:7>]
COMMENT: comment [JavaParserFacade.java <331:5 336:7>]
COMMENT: comment [JavaParserFacade.java <383:5 388:7>]
COMMENT: comment [JavaParserFacade.java <422:5 422:52>]
COMMENT: comment [JavaParserFacade.java <460:111 460:140>]
COMMENT: comment [JavaParserFacade.java <462:106 462:135>]
COMMENT: comment [JavaParserFacade.java <491:17 491:66>]
COMMENT: comment [JavaParserFacade.java <497:17 497:60>]
COMMENT: comment [JavaParserFacade.java <513:5 515:7>]
COMMENT: comment [JavaParserFacade.java <517:9 517:39>]
