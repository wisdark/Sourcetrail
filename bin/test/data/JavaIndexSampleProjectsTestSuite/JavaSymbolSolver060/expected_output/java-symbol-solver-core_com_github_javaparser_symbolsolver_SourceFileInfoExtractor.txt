FILE: SourceFileInfoExtractor.java
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <34:30 34:41>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <35:30 35:41>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <36:30 36:41>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <44:37 44:48>]
QUALIFIER: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <159:67 159:78>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver [SourceFileInfoExtractor.java <17:31 17:42>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <26:19 26:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <27:19 27:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <28:19 28:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <29:19 29:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <30:19 30:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <31:19 31:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <32:19 32:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <33:19 33:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <34:19 34:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <35:19 35:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <36:19 36:28>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <44:26 44:35>]
QUALIFIER: com.github.javaparser [SourceFileInfoExtractor.java <159:56 159:65>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [SourceFileInfoExtractor.java <17:13 17:18>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <19:12 19:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <20:12 20:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <21:12 21:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <22:12 22:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <23:12 23:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <24:12 24:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <25:12 25:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <26:12 26:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <27:12 27:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <28:12 28:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <29:12 29:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <30:12 30:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <31:12 31:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <32:12 32:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <33:12 33:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <34:12 34:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <35:12 35:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <36:12 36:17>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <44:19 44:24>]
QUALIFIER: com.github [SourceFileInfoExtractor.java <159:49 159:54>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [SourceFileInfoExtractor.java <17:9 17:11>]
QUALIFIER: com [SourceFileInfoExtractor.java <19:8 19:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <20:8 20:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <21:8 21:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <22:8 22:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <23:8 23:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <24:8 24:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <25:8 25:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <26:8 26:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <27:8 27:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <28:8 28:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <29:8 29:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <30:8 30:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <31:8 31:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <32:8 32:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <33:8 33:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <34:8 34:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <35:8 35:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <36:8 36:10>]
QUALIFIER: com [SourceFileInfoExtractor.java <44:15 44:17>]
QUALIFIER: com [SourceFileInfoExtractor.java <159:45 159:47>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.JavaParser [SourceFileInfoExtractor.java <189:38 189:47>]
QUALIFIER: com.github.javaparser.JavaParser [SourceFileInfoExtractor.java <206:38 206:47>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <23:30 23:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <24:30 24:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <25:30 25:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <26:30 26:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <27:30 27:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <28:30 28:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <29:30 29:32>]
QUALIFIER: com.github.javaparser.ast [SourceFileInfoExtractor.java <30:30 30:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.body [SourceFileInfoExtractor.java <24:34 24:37>]
QUALIFIER: com.github.javaparser.ast.body [SourceFileInfoExtractor.java <25:34 25:37>]
QUALIFIER: com.github.javaparser.ast.body [SourceFileInfoExtractor.java <26:34 26:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast.expr [SourceFileInfoExtractor.java <27:34 27:37>]
QUALIFIER: com.github.javaparser.ast.expr [SourceFileInfoExtractor.java <28:34 28:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast.stmt [SourceFileInfoExtractor.java <30:34 30:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.stmt
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [SourceFileInfoExtractor.java <100:43 100:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [SourceFileInfoExtractor.java <122:32 122:47>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [SourceFileInfoExtractor.java <149:29 149:44>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [SourceFileInfoExtractor.java <31:43 31:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [SourceFileInfoExtractor.java <32:49 32:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [SourceFileInfoExtractor.java <159:86 159:97>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [SourceFileInfoExtractor.java <32:43 32:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [SourceFileInfoExtractor.java <33:43 33:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [SourceFileInfoExtractor.java <34:43 34:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [SourceFileInfoExtractor.java <35:43 35:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [SourceFileInfoExtractor.java <36:43 36:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [SourceFileInfoExtractor.java <159:80 159:84>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [SourceFileInfoExtractor.java <33:49 33:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [SourceFileInfoExtractor.java <34:49 34:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [SourceFileInfoExtractor.java <35:49 35:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [SourceFileInfoExtractor.java <36:49 36:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.io [SourceFileInfoExtractor.java <38:13 38:14>]
QUALIFIER: java.io [SourceFileInfoExtractor.java <39:13 39:14>]
QUALIFIER: java.io [SourceFileInfoExtractor.java <40:13 40:14>]
SYMBOL_PACKAGE: java.io
QUALIFIER: java [SourceFileInfoExtractor.java <38:8 38:11>]
QUALIFIER: java [SourceFileInfoExtractor.java <39:8 39:11>]
QUALIFIER: java [SourceFileInfoExtractor.java <40:8 40:11>]
QUALIFIER: java [SourceFileInfoExtractor.java <41:8 41:11>]
QUALIFIER: java [SourceFileInfoExtractor.java <42:8 42:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util [SourceFileInfoExtractor.java <41:13 41:16>]
QUALIFIER: java.util [SourceFileInfoExtractor.java <42:13 42:16>]
SYMBOL_PACKAGE: java.util
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [SourceFileInfoExtractor.java <44:61 44:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [SourceFileInfoExtractor.java <44:50 44:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
QUALIFIER: com.github.javaparser.symbolsolver.SourceFileInfoExtractor [SourceFileInfoExtractor.java <63:9 63:12>]
QUALIFIER: com.github.javaparser.symbolsolver.SourceFileInfoExtractor [SourceFileInfoExtractor.java <69:9 69:12>]
QUALIFIER: com.github.javaparser.symbolsolver.SourceFileInfoExtractor [SourceFileInfoExtractor.java <79:9 79:12>]
QUALIFIER: com.github.javaparser.symbolsolver.SourceFileInfoExtractor [SourceFileInfoExtractor.java <83:9 83:12>]
QUALIFIER: com.github.javaparser.symbolsolver.SourceFileInfoExtractor [SourceFileInfoExtractor.java <213:9 213:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.SourceFileInfoExtractor [SourceFileInfoExtractor.java <51:1 <51:14 51:36> 216:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.SourceFileInfoExtractor.typeSolver [SourceFileInfoExtractor.java <53:24 53:33>]
SYMBOL_FIELD: private int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ok [SourceFileInfoExtractor.java <55:17 55:18>]
SYMBOL_BUILTIN_TYPE: int
SYMBOL_FIELD: private int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ko [SourceFileInfoExtractor.java <56:17 56:18>]
SYMBOL_FIELD: private int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.unsupported [SourceFileInfoExtractor.java <57:17 57:27>]
SYMBOL_FIELD: private boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.printFileName [SourceFileInfoExtractor.java <58:21 58:33>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_FIELD: private java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <59:25 59:27>]
QUALIFIER: java.lang.System [SourceFileInfoExtractor.java <59:31 59:36>]
QUALIFIER: java.lang.System [SourceFileInfoExtractor.java <60:31 60:36>]
QUALIFIER: java.lang.System [SourceFileInfoExtractor.java <152:17 152:22>]
SYMBOL_PACKAGE: java.lang
SYMBOL_FIELD: static java.io.PrintStream java.lang.System.out
SYMBOL_FIELD: private java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.err [SourceFileInfoExtractor.java <60:25 60:27>]
SYMBOL_FIELD: static java.io.PrintStream java.lang.System.err
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setVerbose(boolean) [SourceFileInfoExtractor.java <62:5 <62:5 <62:17 62:26> 62:43> 64:5>]
SYMBOL_BUILTIN_TYPE: void
SYMBOL_FIELD: private boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.verbose [SourceFileInfoExtractor.java <66:21 66:27>]
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setPrintFileName(boolean) [SourceFileInfoExtractor.java <68:5 <68:5 <68:17 68:32> 68:55> 70:5>]
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.clear() [SourceFileInfoExtractor.java <72:5 <72:5 <72:17 72:21> 72:23> 76:5>]
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setOut(java.io.PrintStream) [SourceFileInfoExtractor.java <78:5 <78:5 <78:17 78:22> 78:39> 80:5>]
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setErr(java.io.PrintStream) [SourceFileInfoExtractor.java <82:5 <82:5 <82:17 82:22> 82:39> 84:5>]
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getOk() [SourceFileInfoExtractor.java <86:5 <86:5 <86:16 86:20> 86:22> 89:5>]
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getUnsupported() [SourceFileInfoExtractor.java <91:5 <91:5 <91:16 91:29> 91:31> 93:5>]
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getKo() [SourceFileInfoExtractor.java <95:5 <95:5 <95:16 95:20> 95:22> 97:5>]
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [SourceFileInfoExtractor.java <99:5 <99:5 <99:18 99:30> 99:64> 110:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isClass()
SYMBOL_METHOD: void java.io.PrintStream.println(java.lang.String)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllSuperClasses()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllInterfaces()
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <112:5 <112:5 <112:18 112:22> 112:33> 136:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node)
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.Range> com.github.javaparser.ast.Node.getRange()
SYMBOL_FIELD: com.github.javaparser.Position com.github.javaparser.Range.begin
SYMBOL_FIELD: int com.github.javaparser.Position.line
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: java.lang.String java.lang.Throwable.getMessage()
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <138:5 <138:5 <138:18 138:33> 138:44> 145:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.Position> com.github.javaparser.ast.nodeTypes.NodeWithRange<N>.getBegin()
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) [SourceFileInfoExtractor.java <147:5 <147:5 <147:20 147:27> 147:48> 157:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes()
SYMBOL_METHOD: private java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) [SourceFileInfoExtractor.java <159:5 <159:5 <159:20 159:27> 159:150> 165:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr)
SYMBOL_METHOD: void java.lang.Throwable.printStackTrace()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: private java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <167:5 <167:5 <167:24 167:38> 167:49> 172:5>]
SYMBOL_METHOD: java.util.LinkedList<E>.LinkedList()
SYMBOL_METHOD: private void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) [SourceFileInfoExtractor.java <174:5 <174:5 <174:18 174:32> 174:61> 177:5>]
SYMBOL_METHOD: void java.util.List<E>.sort(java.util.Comparator<? super E>)
SYMBOL_METHOD: int com.github.javaparser.Position.compareTo(com.github.javaparser.Position)
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: void java.lang.Iterable<T>.forEach(java.util.function.Consumer<? super T>)
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) [SourceFileInfoExtractor.java <179:5 <179:5 <179:17 179:21> 179:67> 194:5>]
SYMBOL_METHOD: boolean java.io.File.isDirectory()
SYMBOL_METHOD: java.io.File java.io.File.listFiles()
SYMBOL_METHOD: boolean java.lang.String.endsWith(java.lang.String)
SYMBOL_METHOD: java.lang.String java.io.File.getName()
SYMBOL_METHOD: java.lang.String java.io.File.getAbsolutePath()
SYMBOL_METHOD: static com.github.javaparser.ast.CompilationUnit com.github.javaparser.JavaParser.parse(java.io.File)
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) [SourceFileInfoExtractor.java <196:5 <196:5 <196:17 196:32> 196:78> 210:5>]
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [SourceFileInfoExtractor.java <212:5 <212:5 <212:17 212:29> 212:52> 214:5>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.JavaParser [SourceFileInfoExtractor.java <19:30 19:39>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ParseException [SourceFileInfoExtractor.java <20:30 20:43>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.CompilationUnit [SourceFileInfoExtractor.java <21:34 21:48>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <22:34 22:37>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.PackageDeclaration [SourceFileInfoExtractor.java <23:34 23:51>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [SourceFileInfoExtractor.java <24:39 24:65>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.body.MethodDeclaration [SourceFileInfoExtractor.java <25:39 25:55>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.body.VariableDeclarator [SourceFileInfoExtractor.java <26:39 26:56>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.expr.Expression [SourceFileInfoExtractor.java <27:39 27:48>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.expr.MethodCallExpr [SourceFileInfoExtractor.java <28:39 28:52>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.ImportDeclaration [SourceFileInfoExtractor.java <29:34 29:50>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.ast.stmt.Statement [SourceFileInfoExtractor.java <30:39 30:47>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [SourceFileInfoExtractor.java <31:59 31:74>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [SourceFileInfoExtractor.java <32:62 32:76>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [SourceFileInfoExtractor.java <33:60 33:74>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [SourceFileInfoExtractor.java <34:60 34:69>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [SourceFileInfoExtractor.java <35:60 35:72>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [SourceFileInfoExtractor.java <36:60 36:63>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> java.io.File [SourceFileInfoExtractor.java <38:16 38:19>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> java.io.IOException [SourceFileInfoExtractor.java <39:16 39:26>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> java.io.PrintStream [SourceFileInfoExtractor.java <40:16 40:26>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> java.util.LinkedList<E> [SourceFileInfoExtractor.java <41:18 41:27>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> java.util.List<E> [SourceFileInfoExtractor.java <42:18 42:21>]
REFERENCE_IMPORT: SourceFileInfoExtractor.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <44:71 44:83>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.SourceFileInfoExtractor.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [SourceFileInfoExtractor.java <53:13 53:22>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ok -> int [SourceFileInfoExtractor.java <55:13 55:15>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ko -> int [SourceFileInfoExtractor.java <56:13 56:15>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.unsupported -> int [SourceFileInfoExtractor.java <57:13 57:15>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.printFileName -> boolean [SourceFileInfoExtractor.java <58:13 58:19>]
REFERENCE_TYPE_USAGE: java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out -> java.io.PrintStream [SourceFileInfoExtractor.java <59:13 59:23>]
REFERENCE_USAGE: java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out -> static java.io.PrintStream java.lang.System.out [SourceFileInfoExtractor.java <59:38 59:40>]
REFERENCE_TYPE_USAGE: java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.err -> java.io.PrintStream [SourceFileInfoExtractor.java <60:13 60:23>]
REFERENCE_USAGE: java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.err -> static java.io.PrintStream java.lang.System.err [SourceFileInfoExtractor.java <60:38 60:40>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setVerbose(boolean) -> void [SourceFileInfoExtractor.java <62:12 62:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setVerbose(boolean) -> boolean [SourceFileInfoExtractor.java <62:28 62:34>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setVerbose(boolean) -> boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.verbose [SourceFileInfoExtractor.java <63:14 63:20>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.verbose -> boolean [SourceFileInfoExtractor.java <66:13 66:19>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setPrintFileName(boolean) -> void [SourceFileInfoExtractor.java <68:12 68:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setPrintFileName(boolean) -> boolean [SourceFileInfoExtractor.java <68:34 68:40>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setPrintFileName(boolean) -> boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.printFileName [SourceFileInfoExtractor.java <69:14 69:26>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.clear() -> void [SourceFileInfoExtractor.java <72:12 72:15>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.clear() -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ok [SourceFileInfoExtractor.java <73:9 73:10>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.clear() -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ko [SourceFileInfoExtractor.java <74:9 74:10>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.clear() -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.unsupported [SourceFileInfoExtractor.java <75:9 75:19>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setOut(java.io.PrintStream) -> void [SourceFileInfoExtractor.java <78:12 78:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setOut(java.io.PrintStream) -> java.io.PrintStream [SourceFileInfoExtractor.java <78:24 78:34>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setOut(java.io.PrintStream) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <79:14 79:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setErr(java.io.PrintStream) -> void [SourceFileInfoExtractor.java <82:12 82:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setErr(java.io.PrintStream) -> java.io.PrintStream [SourceFileInfoExtractor.java <82:24 82:34>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setErr(java.io.PrintStream) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.err [SourceFileInfoExtractor.java <83:14 83:16>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getOk() -> int [SourceFileInfoExtractor.java <86:12 86:14>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getOk() -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ok [SourceFileInfoExtractor.java <87:16 87:17>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getUnsupported() -> int [SourceFileInfoExtractor.java <91:12 91:14>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getUnsupported() -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.unsupported [SourceFileInfoExtractor.java <92:16 92:26>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getKo() -> int [SourceFileInfoExtractor.java <95:12 95:14>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.getKo() -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ko [SourceFileInfoExtractor.java <96:16 96:17>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> void [SourceFileInfoExtractor.java <99:13 99:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [SourceFileInfoExtractor.java <99:32 99:58>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [SourceFileInfoExtractor.java <100:9 100:23>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [SourceFileInfoExtractor.java <100:76 100:93>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [SourceFileInfoExtractor.java <100:60 100:62>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.SourceFileInfoExtractor.typeSolver [SourceFileInfoExtractor.java <100:64 100:73>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isClass() [SourceFileInfoExtractor.java <101:29 101:35>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <102:17 102:23>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <104:21 104:27>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <107:21 107:27>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <102:13 102:15>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <104:17 104:19>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <107:17 107:19>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [SourceFileInfoExtractor.java <102:56 102:71>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [SourceFileInfoExtractor.java <103:18 103:30>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [SourceFileInfoExtractor.java <106:18 106:30>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllSuperClasses() [SourceFileInfoExtractor.java <103:63 103:80>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass() [SourceFileInfoExtractor.java <103:53 103:59>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass() [SourceFileInfoExtractor.java <106:53 106:59>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [SourceFileInfoExtractor.java <104:51 104:66>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [SourceFileInfoExtractor.java <107:50 107:65>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllInterfaces() [SourceFileInfoExtractor.java <106:63 106:78>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> void [SourceFileInfoExtractor.java <112:13 112:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <112:24 112:27>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [SourceFileInfoExtractor.java <113:29 113:55>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [SourceFileInfoExtractor.java <114:28 114:54>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [SourceFileInfoExtractor.java <114:13 114:25>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.expr.Expression [SourceFileInfoExtractor.java <115:36 115:45>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.expr.Expression [SourceFileInfoExtractor.java <116:103 116:112>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <116:18 116:30>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <116:72 116:84>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <117:25 117:37>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <118:25 118:37>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <120:25 120:37>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <120:71 120:83>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.ImportDeclaration [SourceFileInfoExtractor.java <116:49 116:65>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.MethodDeclaration [SourceFileInfoExtractor.java <117:56 117:72>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.PackageDeclaration [SourceFileInfoExtractor.java <118:56 118:73>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.Statement [SourceFileInfoExtractor.java <120:56 120:64>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.body.VariableDeclarator [SourceFileInfoExtractor.java <120:102 120:119>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [SourceFileInfoExtractor.java <122:21 122:24>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <122:65 122:71>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [SourceFileInfoExtractor.java <122:49 122:51>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.SourceFileInfoExtractor.typeSolver [SourceFileInfoExtractor.java <122:53 122:62>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <123:25 123:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <127:25 127:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <131:25 131:31>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <123:21 123:23>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.util.Optional<T>.T java.util.Optional<T>.get() [SourceFileInfoExtractor.java <123:61 123:63>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.util.Optional<com.github.javaparser.Range> com.github.javaparser.ast.Node.getRange() [SourceFileInfoExtractor.java <123:50 123:57>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> com.github.javaparser.Position com.github.javaparser.Range.begin [SourceFileInfoExtractor.java <123:67 123:71>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> int com.github.javaparser.Position.line [SourceFileInfoExtractor.java <123:73 123:76>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [SourceFileInfoExtractor.java <123:108 123:115>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ok [SourceFileInfoExtractor.java <124:21 124:22>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.lang.UnsupportedOperationException [SourceFileInfoExtractor.java <125:26 125:54>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.unsupported [SourceFileInfoExtractor.java <126:21 126:31>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.err [SourceFileInfoExtractor.java <127:21 127:23>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.err [SourceFileInfoExtractor.java <131:21 131:23>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.lang.String java.lang.Throwable.getMessage() [SourceFileInfoExtractor.java <127:37 127:46>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.lang.String java.lang.Throwable.getMessage() [SourceFileInfoExtractor.java <131:36 131:45>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> java.lang.RuntimeException [SourceFileInfoExtractor.java <129:26 129:41>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) -> int com.github.javaparser.symbolsolver.SourceFileInfoExtractor.ko [SourceFileInfoExtractor.java <130:21 130:22>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> void [SourceFileInfoExtractor.java <138:13 138:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <138:35 138:38>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <142:14 142:17>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.expr.MethodCallExpr [SourceFileInfoExtractor.java <139:29 139:42>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.expr.MethodCallExpr [SourceFileInfoExtractor.java <140:100 140:113>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <140:17 140:23>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <140:13 140:15>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> java.util.Optional<T>.T java.util.Optional<T>.get() [SourceFileInfoExtractor.java <140:53 140:55>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> java.util.Optional<com.github.javaparser.Position> com.github.javaparser.ast.nodeTypes.NodeWithRange<N>.getBegin() [SourceFileInfoExtractor.java <140:42 140:49>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> int com.github.javaparser.Position.line [SourceFileInfoExtractor.java <140:59 140:62>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) [SourceFileInfoExtractor.java <140:90 140:97>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [SourceFileInfoExtractor.java <142:32 142:44>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <143:13 143:28>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.String [SourceFileInfoExtractor.java <147:13 147:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.ast.expr.MethodCallExpr [SourceFileInfoExtractor.java <147:29 147:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) [SourceFileInfoExtractor.java <149:20 149:27>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solve(com.github.javaparser.ast.expr.MethodCallExpr) [SourceFileInfoExtractor.java <149:62 149:66>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [SourceFileInfoExtractor.java <149:46 149:48>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.SourceFileInfoExtractor.typeSolver [SourceFileInfoExtractor.java <149:50 149:59>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> java.lang.Exception [SourceFileInfoExtractor.java <150:18 150:26>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.verbose [SourceFileInfoExtractor.java <151:17 151:23>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <152:28 152:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> static java.io.PrintStream java.lang.System.err [SourceFileInfoExtractor.java <152:24 152:26>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<T>.T java.util.Optional<T>.get() [SourceFileInfoExtractor.java <152:82 152:84>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> java.util.Optional<com.github.javaparser.Position> com.github.javaparser.ast.nodeTypes.NodeWithRange<N>.getBegin() [SourceFileInfoExtractor.java <152:71 152:78>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> int com.github.javaparser.Position.line [SourceFileInfoExtractor.java <152:88 152:91>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.ast.expr.MethodCallExpr) -> void java.lang.Throwable.printStackTrace() [SourceFileInfoExtractor.java <153:19 153:33>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.lang.String [SourceFileInfoExtractor.java <159:13 159:18>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [SourceFileInfoExtractor.java <159:45 159:115>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [SourceFileInfoExtractor.java <159:29 159:43>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [SourceFileInfoExtractor.java <159:99 159:115>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [SourceFileInfoExtractor.java <160:46 160:53>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [SourceFileInfoExtractor.java <161:83 161:103>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString(com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [SourceFileInfoExtractor.java <161:53 161:79>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <167:18 167:21>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <168:14 168:17>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <174:50 174:53>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <190:22 190:25>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.List<E> [SourceFileInfoExtractor.java <167:13 167:16>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.List<E> [SourceFileInfoExtractor.java <168:9 168:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <167:18 167:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <167:40 167:43>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <168:14 168:17>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.LinkedList<E>.LinkedList() [SourceFileInfoExtractor.java <168:32 168:43>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.LinkedList<E> [SourceFileInfoExtractor.java <168:32 168:41>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) [SourceFileInfoExtractor.java <169:9 169:23>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> void java.util.List<E>.sort(java.util.Comparator<? super E>) [SourceFileInfoExtractor.java <170:15 170:18>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> int com.github.javaparser.Position.compareTo(com.github.javaparser.Position) [SourceFileInfoExtractor.java <170:52 170:60>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.Optional<T>.T java.util.Optional<T>.get() [SourceFileInfoExtractor.java <170:46 170:48>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.Optional<T>.T java.util.Optional<T>.get() [SourceFileInfoExtractor.java <170:76 170:78>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.Optional<com.github.javaparser.Position> com.github.javaparser.ast.nodeTypes.NodeWithRange<N>.getBegin() [SourceFileInfoExtractor.java <170:35 170:42>]
REFERENCE_CALL: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) -> java.util.Optional<com.github.javaparser.Position> com.github.javaparser.ast.nodeTypes.NodeWithRange<N>.getBegin() [SourceFileInfoExtractor.java <170:65 170:72>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> void [SourceFileInfoExtractor.java <174:13 174:16>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <174:34 174:37>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <174:50 174:53>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> java.util.List<E> [SourceFileInfoExtractor.java <174:45 174:48>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [SourceFileInfoExtractor.java <175:15 175:17>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> void java.lang.Iterable<T>.forEach(java.util.function.Consumer<? super T>) [SourceFileInfoExtractor.java <176:30 176:36>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [SourceFileInfoExtractor.java <176:14 176:26>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node, java.util.List<com.github.javaparser.ast.Node>) [SourceFileInfoExtractor.java <176:43 176:57>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> void [SourceFileInfoExtractor.java <179:12 179:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.io.File [SourceFileInfoExtractor.java <179:23 179:26>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.io.File [SourceFileInfoExtractor.java <181:18 181:21>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.io.IOException [SourceFileInfoExtractor.java <179:41 179:51>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> com.github.javaparser.ParseException [SourceFileInfoExtractor.java <179:54 179:67>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> boolean java.io.File.isDirectory() [SourceFileInfoExtractor.java <180:18 180:28>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.io.File java.io.File.listFiles() [SourceFileInfoExtractor.java <181:32 181:40>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) [SourceFileInfoExtractor.java <182:17 182:21>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> boolean java.lang.String.endsWith(java.lang.String) [SourceFileInfoExtractor.java <185:32 185:39>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.lang.String java.io.File.getName() [SourceFileInfoExtractor.java <185:22 185:28>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.printFileName [SourceFileInfoExtractor.java <186:21 186:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <187:25 187:31>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <187:21 187:23>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.lang.String java.io.File.getAbsolutePath() [SourceFileInfoExtractor.java <187:53 187:67>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> com.github.javaparser.ast.CompilationUnit [SourceFileInfoExtractor.java <189:17 189:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> static com.github.javaparser.ast.CompilationUnit com.github.javaparser.JavaParser.parse(java.io.File) [SourceFileInfoExtractor.java <189:49 189:53>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.util.List<E> [SourceFileInfoExtractor.java <190:17 190:20>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> com.github.javaparser.ast.Node [SourceFileInfoExtractor.java <190:22 190:25>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <190:36 190:50>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> void java.lang.Iterable<T>.forEach(java.util.function.Consumer<? super T>) [SourceFileInfoExtractor.java <191:23 191:29>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(java.io.File) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <191:36 191:40>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> void [SourceFileInfoExtractor.java <196:12 196:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.io.File [SourceFileInfoExtractor.java <196:34 196:37>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.io.File [SourceFileInfoExtractor.java <198:18 198:21>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.io.IOException [SourceFileInfoExtractor.java <196:52 196:62>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> com.github.javaparser.ParseException [SourceFileInfoExtractor.java <196:65 196:78>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> boolean java.io.File.isDirectory() [SourceFileInfoExtractor.java <197:18 197:28>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.io.File java.io.File.listFiles() [SourceFileInfoExtractor.java <198:32 198:40>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) [SourceFileInfoExtractor.java <199:17 199:32>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> boolean java.lang.String.endsWith(java.lang.String) [SourceFileInfoExtractor.java <202:32 202:39>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.lang.String java.io.File.getName() [SourceFileInfoExtractor.java <202:22 202:28>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> boolean com.github.javaparser.symbolsolver.SourceFileInfoExtractor.printFileName [SourceFileInfoExtractor.java <203:21 203:33>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> void java.io.PrintStream.println(java.lang.String) [SourceFileInfoExtractor.java <204:25 204:31>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.io.PrintStream com.github.javaparser.symbolsolver.SourceFileInfoExtractor.out [SourceFileInfoExtractor.java <204:21 204:23>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> java.lang.String java.io.File.getAbsolutePath() [SourceFileInfoExtractor.java <204:53 204:67>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> com.github.javaparser.ast.CompilationUnit [SourceFileInfoExtractor.java <206:17 206:31>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> static com.github.javaparser.ast.CompilationUnit com.github.javaparser.JavaParser.parse(java.io.File) [SourceFileInfoExtractor.java <206:49 206:53>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(java.io.File) -> void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls(com.github.javaparser.ast.Node) [SourceFileInfoExtractor.java <207:17 207:32>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void [SourceFileInfoExtractor.java <212:12 212:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [SourceFileInfoExtractor.java <212:31 212:40>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.SourceFileInfoExtractor.typeSolver [SourceFileInfoExtractor.java <213:14 213:23>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<101:40> [SourceFileInfoExtractor.java <101:40 101:40>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<101:40> [SourceFileInfoExtractor.java <109:9 109:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<103:85> [SourceFileInfoExtractor.java <103:85 103:85>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<103:85> [SourceFileInfoExtractor.java <105:13 105:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<106:83> [SourceFileInfoExtractor.java <106:83 106:83>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<106:83> [SourceFileInfoExtractor.java <108:13 108:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<112:35> [SourceFileInfoExtractor.java <112:35 112:35>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<112:35> [SourceFileInfoExtractor.java <136:5 136:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<113:58> [SourceFileInfoExtractor.java <113:58 113:58>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<113:58> [SourceFileInfoExtractor.java <115:9 115:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<115:48> [SourceFileInfoExtractor.java <115:48 115:48>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<115:48> [SourceFileInfoExtractor.java <135:9 135:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<118:77> [SourceFileInfoExtractor.java <118:77 118:77>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<118:77> [SourceFileInfoExtractor.java <120:13 120:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<120:123> [SourceFileInfoExtractor.java <120:123 120:123>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<120:123> [SourceFileInfoExtractor.java <134:13 134:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<121:21> [SourceFileInfoExtractor.java <121:21 121:21>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<121:21> [SourceFileInfoExtractor.java <125:17 125:17>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<125:61> [SourceFileInfoExtractor.java <125:61 125:61>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<125:61> [SourceFileInfoExtractor.java <129:17 129:17>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<129:47> [SourceFileInfoExtractor.java <129:47 129:47>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<129:47> [SourceFileInfoExtractor.java <133:17 133:17>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<138:46> [SourceFileInfoExtractor.java <138:46 138:46>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<138:46> [SourceFileInfoExtractor.java <145:5 145:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<139:45> [SourceFileInfoExtractor.java <139:45 139:45>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<139:45> [SourceFileInfoExtractor.java <141:9 141:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<142:49> [SourceFileInfoExtractor.java <142:49 142:49>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<142:49> [SourceFileInfoExtractor.java <144:9 144:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<147:50> [SourceFileInfoExtractor.java <147:50 147:50>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<147:50> [SourceFileInfoExtractor.java <157:5 157:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<148:13> [SourceFileInfoExtractor.java <148:13 148:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<148:13> [SourceFileInfoExtractor.java <150:9 150:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<150:31> [SourceFileInfoExtractor.java <150:31 150:31>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<150:31> [SourceFileInfoExtractor.java <156:9 156:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<151:26> [SourceFileInfoExtractor.java <151:26 151:26>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<151:26> [SourceFileInfoExtractor.java <154:13 154:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<159:152> [SourceFileInfoExtractor.java <159:152 159:152>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<159:152> [SourceFileInfoExtractor.java <165:5 165:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<160:58> [SourceFileInfoExtractor.java <160:58 160:58>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<160:58> [SourceFileInfoExtractor.java <162:9 162:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<162:16> [SourceFileInfoExtractor.java <162:16 162:16>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<162:16> [SourceFileInfoExtractor.java <164:9 164:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<167:51> [SourceFileInfoExtractor.java <167:51 167:51>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<167:51> [SourceFileInfoExtractor.java <172:5 172:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<174:63> [SourceFileInfoExtractor.java <174:63 174:63>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<174:63> [SourceFileInfoExtractor.java <177:5 177:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<179:69> [SourceFileInfoExtractor.java <179:69 179:69>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<179:69> [SourceFileInfoExtractor.java <194:5 194:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<180:33> [SourceFileInfoExtractor.java <180:33 180:33>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<180:33> [SourceFileInfoExtractor.java <184:9 184:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<181:45> [SourceFileInfoExtractor.java <181:45 181:45>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<181:45> [SourceFileInfoExtractor.java <183:13 183:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<184:16> [SourceFileInfoExtractor.java <184:16 184:16>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<184:16> [SourceFileInfoExtractor.java <193:9 193:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<185:51> [SourceFileInfoExtractor.java <185:51 185:51>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<185:51> [SourceFileInfoExtractor.java <192:13 192:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<186:36> [SourceFileInfoExtractor.java <186:36 186:36>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<186:36> [SourceFileInfoExtractor.java <188:17 188:17>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<196:80> [SourceFileInfoExtractor.java <196:80 196:80>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<196:80> [SourceFileInfoExtractor.java <210:5 210:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<197:33> [SourceFileInfoExtractor.java <197:33 197:33>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<197:33> [SourceFileInfoExtractor.java <201:9 201:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<198:45> [SourceFileInfoExtractor.java <198:45 198:45>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<198:45> [SourceFileInfoExtractor.java <200:13 200:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<201:16> [SourceFileInfoExtractor.java <201:16 201:16>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<201:16> [SourceFileInfoExtractor.java <209:9 209:9>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<202:51> [SourceFileInfoExtractor.java <202:51 202:51>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<202:51> [SourceFileInfoExtractor.java <208:13 208:13>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<203:36> [SourceFileInfoExtractor.java <203:36 203:36>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<203:36> [SourceFileInfoExtractor.java <205:17 205:17>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<212:54> [SourceFileInfoExtractor.java <212:54 212:54>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<212:54> [SourceFileInfoExtractor.java <214:5 214:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<51:38> [SourceFileInfoExtractor.java <51:38 51:38>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<51:38> [SourceFileInfoExtractor.java <216:1 216:1>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<62:45> [SourceFileInfoExtractor.java <62:45 62:45>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<62:45> [SourceFileInfoExtractor.java <64:5 64:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<68:57> [SourceFileInfoExtractor.java <68:57 68:57>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<68:57> [SourceFileInfoExtractor.java <70:5 70:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<72:25> [SourceFileInfoExtractor.java <72:25 72:25>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<72:25> [SourceFileInfoExtractor.java <76:5 76:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<78:41> [SourceFileInfoExtractor.java <78:41 78:41>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<78:41> [SourceFileInfoExtractor.java <80:5 80:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<82:41> [SourceFileInfoExtractor.java <82:41 82:41>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<82:41> [SourceFileInfoExtractor.java <84:5 84:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<86:24> [SourceFileInfoExtractor.java <86:24 86:24>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<86:24> [SourceFileInfoExtractor.java <89:5 89:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<91:33> [SourceFileInfoExtractor.java <91:33 91:33>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<91:33> [SourceFileInfoExtractor.java <93:5 93:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<95:24> [SourceFileInfoExtractor.java <95:24 95:24>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<95:24> [SourceFileInfoExtractor.java <97:5 97:5>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<99:66> [SourceFileInfoExtractor.java <99:66 99:66>]
LOCAL_SYMBOL: SourceFileInfoExtractor.java<99:66> [SourceFileInfoExtractor.java <110:5 110:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<0> [SourceFileInfoExtractor.java <167:45 167:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<0> [SourceFileInfoExtractor.java <169:25 169:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<0> [SourceFileInfoExtractor.java <174:39 174:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<0> [SourceFileInfoExtractor.java <175:19 175:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<0> [SourceFileInfoExtractor.java <176:9 176:12>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <168:20 168:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <169:31 169:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <170:9 170:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <171:16 171:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <174:56 174:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <175:9 175:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.collectAllNodes<1> [SourceFileInfoExtractor.java <176:62 176:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setErr<0> [SourceFileInfoExtractor.java <82:36 82:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setErr<0> [SourceFileInfoExtractor.java <83:20 83:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setOut<0> [SourceFileInfoExtractor.java <78:36 78:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setOut<0> [SourceFileInfoExtractor.java <79:20 79:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setPrintFileName<0> [SourceFileInfoExtractor.java <68:42 68:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setPrintFileName<0> [SourceFileInfoExtractor.java <69:30 69:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setTypeSolver<0> [SourceFileInfoExtractor.java <212:42 212:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setTypeSolver<0> [SourceFileInfoExtractor.java <213:27 213:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setVerbose<0> [SourceFileInfoExtractor.java <62:36 62:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.setVerbose<0> [SourceFileInfoExtractor.java <63:24 63:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <112:29 112:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <113:13 113:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <114:57 114:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <115:20 115:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <116:32 116:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <116:86 116:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <117:39 117:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <118:39 118:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <120:39 120:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <120:85 120:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <122:73 122:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <123:45 123:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <123:87 123:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <179:28 179:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <180:13 180:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <181:27 181:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <185:17 185:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <187:48 187:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<0> [SourceFileInfoExtractor.java <189:55 189:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<1> [SourceFileInfoExtractor.java <122:26 122:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<1> [SourceFileInfoExtractor.java <123:104 123:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<1> [SourceFileInfoExtractor.java <181:23 181:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<1> [SourceFileInfoExtractor.java <182:23 182:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<2> [SourceFileInfoExtractor.java <125:56 125:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<2> [SourceFileInfoExtractor.java <127:33 127:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<2> [SourceFileInfoExtractor.java <128:27 128:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<3> [SourceFileInfoExtractor.java <129:43 129:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<3> [SourceFileInfoExtractor.java <131:33 131:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<3> [SourceFileInfoExtractor.java <132:27 132:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<5> [SourceFileInfoExtractor.java <189:33 189:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<5> [SourceFileInfoExtractor.java <190:52 190:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<6> [SourceFileInfoExtractor.java <190:28 190:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solve<6> [SourceFileInfoExtractor.java <191:17 191:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <138:40 138:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <139:13 139:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <140:37 140:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <140:73 140:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <140:116 140:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <142:27 142:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <196:39 196:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <197:13 197:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <198:27 198:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <202:17 202:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <204:48 204:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<0> [SourceFileInfoExtractor.java <206:55 206:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<1> [SourceFileInfoExtractor.java <142:19 142:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<1> [SourceFileInfoExtractor.java <143:30 143:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<1> [SourceFileInfoExtractor.java <198:23 198:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<1> [SourceFileInfoExtractor.java <199:34 199:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<5> [SourceFileInfoExtractor.java <206:33 206:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveMethodCalls<5> [SourceFileInfoExtractor.java <207:34 207:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<0> [SourceFileInfoExtractor.java <99:60 99:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<0> [SourceFileInfoExtractor.java <100:95 100:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<1> [SourceFileInfoExtractor.java <100:25 100:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<1> [SourceFileInfoExtractor.java <101:13 101:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<1> [SourceFileInfoExtractor.java <102:40 102:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<1> [SourceFileInfoExtractor.java <103:37 103:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<1> [SourceFileInfoExtractor.java <106:37 106:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<2> [SourceFileInfoExtractor.java <103:32 103:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<2> [SourceFileInfoExtractor.java <104:48 104:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<4> [SourceFileInfoExtractor.java <106:32 106:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.solveTypeDecl<4> [SourceFileInfoExtractor.java <107:47 107:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <147:44 147:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <149:68 149:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <152:66 152:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <152:102 152:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <159:118 159:149>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <160:13 160:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<0> [SourceFileInfoExtractor.java <161:20 161:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<1> [SourceFileInfoExtractor.java <150:28 150:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.SourceFileInfoExtractor.toString<1> [SourceFileInfoExtractor.java <153:17 153:17>]
LOCAL_SYMBOL: java.util.Comparator<T>.compare<2> [SourceFileInfoExtractor.java <170:21 170:22>]
LOCAL_SYMBOL: java.util.Comparator<T>.compare<2> [SourceFileInfoExtractor.java <170:32 170:33>]
LOCAL_SYMBOL: java.util.Comparator<T>.compare<3> [SourceFileInfoExtractor.java <170:25 170:26>]
LOCAL_SYMBOL: java.util.Comparator<T>.compare<3> [SourceFileInfoExtractor.java <170:62 170:63>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<2> [SourceFileInfoExtractor.java <176:38 176:38>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<2> [SourceFileInfoExtractor.java <176:59 176:59>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<7> [SourceFileInfoExtractor.java <191:31 191:31>]
LOCAL_SYMBOL: java.util.function.Consumer<T>.accept<7> [SourceFileInfoExtractor.java <191:42 191:42>]
COMMENT: comment [SourceFileInfoExtractor.java <1:1 15:3>]
COMMENT: comment [SourceFileInfoExtractor.java <46:1 50:3>]
COMMENT: comment [SourceFileInfoExtractor.java <119:17 119:23>]
