FILE: MethodResolutionLogic.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution [MethodResolutionLogic.java <17:44 17:53>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <32:30 32:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <33:30 33:41>]
QUALIFIER: com.github.javaparser.symbolsolver [MethodResolutionLogic.java <34:30 34:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <26:19 26:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <27:19 27:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <28:19 28:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <29:19 29:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <30:19 30:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <31:19 31:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <32:19 32:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <33:19 33:28>]
QUALIFIER: com.github.javaparser [MethodResolutionLogic.java <34:19 34:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [MethodResolutionLogic.java <17:13 17:18>]
QUALIFIER: com.github [MethodResolutionLogic.java <19:12 19:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <20:12 20:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <21:12 21:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <22:12 22:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <23:12 23:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <24:12 24:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <25:12 25:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <26:12 26:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <27:12 27:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <28:12 28:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <29:12 29:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <30:12 30:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <31:12 31:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <32:12 32:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <33:12 33:17>]
QUALIFIER: com.github [MethodResolutionLogic.java <34:12 34:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [MethodResolutionLogic.java <17:9 17:11>]
QUALIFIER: com [MethodResolutionLogic.java <19:8 19:10>]
QUALIFIER: com [MethodResolutionLogic.java <20:8 20:10>]
QUALIFIER: com [MethodResolutionLogic.java <21:8 21:10>]
QUALIFIER: com [MethodResolutionLogic.java <22:8 22:10>]
QUALIFIER: com [MethodResolutionLogic.java <23:8 23:10>]
QUALIFIER: com [MethodResolutionLogic.java <24:8 24:10>]
QUALIFIER: com [MethodResolutionLogic.java <25:8 25:10>]
QUALIFIER: com [MethodResolutionLogic.java <26:8 26:10>]
QUALIFIER: com [MethodResolutionLogic.java <27:8 27:10>]
QUALIFIER: com [MethodResolutionLogic.java <28:8 28:10>]
QUALIFIER: com [MethodResolutionLogic.java <29:8 29:10>]
QUALIFIER: com [MethodResolutionLogic.java <30:8 30:10>]
QUALIFIER: com [MethodResolutionLogic.java <31:8 31:10>]
QUALIFIER: com [MethodResolutionLogic.java <32:8 32:10>]
QUALIFIER: com [MethodResolutionLogic.java <33:8 33:10>]
QUALIFIER: com [MethodResolutionLogic.java <34:8 34:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [MethodResolutionLogic.java <19:48 19:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [MethodResolutionLogic.java <19:43 19:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [MethodResolutionLogic.java <20:59 20:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [MethodResolutionLogic.java <21:59 21:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [MethodResolutionLogic.java <22:59 22:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [MethodResolutionLogic.java <23:59 23:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [MethodResolutionLogic.java <20:43 20:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [MethodResolutionLogic.java <21:43 21:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [MethodResolutionLogic.java <22:43 22:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [MethodResolutionLogic.java <23:43 23:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [MethodResolutionLogic.java <596:51 596:75>]
QUALIFIER: com.github.javaparser.symbolsolver.javassistmodel [MethodResolutionLogic.java <24:43 24:56>]
QUALIFIER: com.github.javaparser.symbolsolver.javassistmodel [MethodResolutionLogic.java <25:43 25:56>]
QUALIFIER: com.github.javaparser.symbolsolver.javassistmodel [MethodResolutionLogic.java <26:43 26:56>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javassistmodel
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [MethodResolutionLogic.java <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [MethodResolutionLogic.java <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [MethodResolutionLogic.java <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [MethodResolutionLogic.java <30:43 30:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [MethodResolutionLogic.java <31:43 31:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [MethodResolutionLogic.java <28:49 28:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [MethodResolutionLogic.java <29:49 29:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [MethodResolutionLogic.java <30:49 30:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [MethodResolutionLogic.java <32:43 32:57>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [MethodResolutionLogic.java <33:43 33:57>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [MethodResolutionLogic.java <34:43 34:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel
QUALIFIER: java.util [MethodResolutionLogic.java <37:13 37:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [MethodResolutionLogic.java <36:8 36:11>]
QUALIFIER: java [MethodResolutionLogic.java <37:8 37:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.stream.Collectors [MethodResolutionLogic.java <382:191 382:200>]
QUALIFIER: java.util.stream.Collectors [MethodResolutionLogic.java <525:137 525:146>]
QUALIFIER: java.util.stream [MethodResolutionLogic.java <37:18 37:23>]
SYMBOL_PACKAGE: java.util.stream
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [MethodResolutionLogic.java <42:1 <42:14 42:34> 679:1>]
SYMBOL_METHOD: private static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <44:5 <44:5 <44:31 44:54> 44:119> 55:5>]
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList(java.util.Collection<? extends E>)
SYMBOL_METHOD: java.util.List<java.util.List<E>.E> java.util.List<E>.subList(int, int)
SYMBOL_METHOD: int java.util.List<E>.size()
SYMBOL_METHOD: boolean java.util.List<E>.isEmpty()
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: private static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <57:5 <57:5 <57:25 57:38> 57:65> 63:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.get(int)
SYMBOL_METHOD: public static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <65:5 <65:5 <65:27 65:38> 65:127> 67:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: private static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [MethodResolutionLogic.java <69:5 <69:5 <69:28 69:39> 69:159> 141:5>]
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter()
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <229:22 229:45>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <249:22 249:45>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <305:21 305:44>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <322:21 322:44>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <226:5 <226:5 <226:24 226:39> 226:102> 262:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType()
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.set(int, java.util.List<E>.E)
SYMBOL_METHOD: java.util.HashMap<K, V>.HashMap()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter()
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ArrayType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
SYMBOL_METHOD: public static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <155:5 <155:5 <155:27 155:57> 156:94> 168:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
SYMBOL_METHOD: boolean java.util.List<E>.addAll(java.util.Collection<? extends E>)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
SYMBOL_METHOD: public static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <143:5 <143:5 <143:27 143:57> 144:94> 153:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: private static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <170:5 <170:5 <170:28 170:71> 171:108> 224:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllAncestors()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException()
SYMBOL_METHOD: boolean java.util.Map<K, V>.containsKey(java.lang.Object)
SYMBOL_METHOD: java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object)
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends()
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [MethodResolutionLogic.java <303:74 303:81>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [MethodResolutionLogic.java <308:78 308:85>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.Wildcard [MethodResolutionLogic.java <311:78 311:85>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.transformTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.TypeTransformer)
SYMBOL_METHOD: public static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <264:5 <264:5 <264:27 264:38> 264:121> 340:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.methods.MethodUsage.getName()
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.declaringType()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes()
SYMBOL_METHOD: private static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <622:5 <622:5 <622:25 622:34> 622:106> 676:5>]
QUALIFIER: java.util.Map [MethodResolutionLogic.java <295:18 295:20>]
SYMBOL_METHOD: java.util.Set<java.util.Map<K, V>.Entry<java.util.Map<K, V>.K, java.util.Map<K, V>.V>> java.util.Map<K, V>.entrySet()
SYMBOL_METHOD: java.util.Map<K, V>.Entry<K, V>.K java.util.Map<K, V>.Entry<K, V>.getKey()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: java.util.Map<K, V>.Entry<K, V>.V java.util.Map<K, V>.Entry<K, V>.getValue()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.isExtends()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.superBound(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: private static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) [MethodResolutionLogic.java <342:5 <342:5 <342:44 342:70> 342:103> 364:5>]
SYMBOL_METHOD: java.util.TreeSet<E>.TreeSet(java.util.Comparator<? super E>)
SYMBOL_CLASS: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>) [MethodResolutionLogic.java <343:103 <343:103 343:103> 352:9>]
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [MethodResolutionLogic.java <344:13 <344:13 <345:24 345:30> 345:74> 351:13>]
SYMBOL_METHOD: int java.util.Comparator<T>.compare(java.util.Comparator<T>.T, java.util.Comparator<T>.T)
SYMBOL_METHOD: boolean com.github.javaparser.ast.Node.equals(java.lang.Object)
SYMBOL_METHOD: com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getWrappedNode()
SYMBOL_METHOD: boolean java.util.Set<E>.addAll(java.util.Collection<? extends E>)
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: java.util.HashSet<E>.HashSet()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature()
SYMBOL_METHOD: boolean java.util.Set<E>.contains(java.lang.Object)
SYMBOL_METHOD: boolean java.util.Set<E>.add(java.util.Set<E>.E)
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <373:1 <373:1 <373:54 373:71> 373:167> 379:5>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [MethodResolutionLogic.java <381:5 <381:5 <381:54 381:71> 381:194> 442:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [MethodResolutionLogic.java <384:20 384:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [MethodResolutionLogic.java <410:20 410:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [MethodResolutionLogic.java <440:20 440:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [MethodResolutionLogic.java <596:24 596:38>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull()
SYMBOL_METHOD: int java.lang.Integer.intValue()
SYMBOL_METHOD: boolean java.util.Set<E>.isEmpty()
SYMBOL_METHOD: int java.util.Set<E>.size()
SYMBOL_METHOD: boolean java.util.List<E>.removeAll(java.util.Collection<?>)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
SYMBOL_METHOD: private static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <453:5 <453:5 <453:28 453:41> 453:144> 501:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: protected static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <444:5 <444:5 <444:30 444:41> 444:98> 451:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.MethodAmbiguityException.MethodAmbiguityException(java.lang.String)
SYMBOL_METHOD: private static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <503:5 <503:5 <503:28 503:41> 503:106> 522:5>]
SYMBOL_METHOD: public static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <524:5 <524:5 <524:41 524:63> 524:153> 553:5>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
QUALIFIER: java.util.Optional [MethodResolutionLogic.java <528:20 528:27>]
QUALIFIER: java.util.Optional [MethodResolutionLogic.java <531:20 531:27>]
QUALIFIER: java.util.Optional [MethodResolutionLogic.java <551:20 551:27>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
SYMBOL_METHOD: private static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) [MethodResolutionLogic.java <555:5 <555:5 <555:28 555:38> 555:87> 568:5>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <570:5 <570:5 <570:54 570:70> 570:166> 572:5>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <583:1 <583:1 <583:54 583:70> 585:93> 620:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration.getContext()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.ValuesMethod.ValuesMethod(com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.getContext()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean)
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isRawType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded()
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.core.resolution.Context [MethodResolutionLogic.java <19:59 19:65>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration [MethodResolutionLogic.java <20:72 20:97>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [MethodResolutionLogic.java <21:72 21:96>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [MethodResolutionLogic.java <22:72 22:101>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [MethodResolutionLogic.java <23:72 23:98>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration [MethodResolutionLogic.java <24:58 24:82>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration [MethodResolutionLogic.java <25:58 25:81>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration [MethodResolutionLogic.java <26:58 26:86>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.declarations [MethodResolutionLogic.java <27:49 27:60>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <28:57 28:67>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [MethodResolutionLogic.java <29:60 29:74>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <30:60 30:69>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.model.typesystem [MethodResolutionLogic.java <31:49 31:58>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [MethodResolutionLogic.java <32:59 32:84>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration [MethodResolutionLogic.java <33:59 33:83>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration [MethodResolutionLogic.java <34:59 34:88>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> java.util [MethodResolutionLogic.java <36:13 36:16>]
REFERENCE_IMPORT: MethodResolutionLogic.java -> java.util.stream.Collectors [MethodResolutionLogic.java <37:25 37:34>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <44:25 44:28>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <44:61 44:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <45:14 45:17>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <46:14 46:17>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <57:45 57:48>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <65:84 65:87>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <69:85 69:88>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <264:78 264:81>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <373:124 373:127>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <381:124 381:127>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <444:78 444:81>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <453:102 453:105>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <524:110 524:113>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <570:123 570:126>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <584:90 584:93>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<E> [MethodResolutionLogic.java <44:20 44:23>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<E> [MethodResolutionLogic.java <44:56 44:59>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<E> [MethodResolutionLogic.java <45:9 45:12>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<E> [MethodResolutionLogic.java <46:9 46:12>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <44:25 44:28>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <44:61 44:64>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <44:102 44:105>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <45:14 45:17>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <46:14 46:17>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <51:13 51:16>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> int [MethodResolutionLogic.java <44:83 44:85>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.ArrayList<E>.ArrayList(java.util.Collection<? extends E>) [MethodResolutionLogic.java <45:30 45:40>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.ArrayList<E> [MethodResolutionLogic.java <45:30 45:38>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<java.util.List<E>.E> java.util.List<E>.subList(int, int) [MethodResolutionLogic.java <45:57 45:63>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<java.util.List<E>.E> java.util.List<E>.subList(int, int) [MethodResolutionLogic.java <46:52 46:58>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> int java.util.List<E>.size() [MethodResolutionLogic.java <46:90 46:93>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <47:28 47:34>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.util.List<E>.add(java.util.List<E>.E) [MethodResolutionLogic.java <49:17 49:19>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.util.List<E>.add(java.util.List<E>.E) [MethodResolutionLogic.java <52:17 52:19>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <51:34 51:47>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <52:25 52:33>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [MethodResolutionLogic.java <52:25 52:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <57:20 57:23>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <57:45 57:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [MethodResolutionLogic.java <57:40 57:43>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <58:28 58:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.IllegalArgumentException.IllegalArgumentException() [MethodResolutionLogic.java <59:23 59:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.IllegalArgumentException [MethodResolutionLogic.java <59:23 59:46>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <62:31 62:33>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <65:19 65:25>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <65:40 65:56>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [MethodResolutionLogic.java <65:66 65:71>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <65:79 65:82>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <65:84 65:87>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <65:106 65:115>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [MethodResolutionLogic.java <66:16 66:27>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [MethodResolutionLogic.java <69:20 69:26>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [MethodResolutionLogic.java <69:130 69:136>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [MethodResolutionLogic.java <103:9 103:15>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [MethodResolutionLogic.java <111:13 111:19>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <69:41 69:57>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String [MethodResolutionLogic.java <69:67 69:72>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String [MethodResolutionLogic.java <102:13 102:18>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E> [MethodResolutionLogic.java <69:80 69:83>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E> [MethodResolutionLogic.java <120:17 120:20>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <69:85 69:88>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <77:17 77:20>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <78:17 78:20>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <102:21 102:24>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <105:13 105:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <106:13 106:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <69:107 69:116>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <70:31 70:36>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [MethodResolutionLogic.java <70:21 70:27>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodResolutionLogic.java <73:20 73:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodResolutionLogic.java <131:32 131:51>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int [MethodResolutionLogic.java <74:13 74:15>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int [MethodResolutionLogic.java <104:14 104:16>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <74:30 74:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <75:24 75:40>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <99:20 99:36>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <104:36 104:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <131:70 131:86>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <75:62 75:65>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <92:42 92:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <99:58 99:61>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <77:59 77:65>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <87:114 87:120>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <95:102 95:108>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <105:52 105:58>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() [MethodResolutionLogic.java <77:44 77:55>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() [MethodResolutionLogic.java <87:99 87:110>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() [MethodResolutionLogic.java <95:87 95:98>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <78:50 78:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <106:46 106:48>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <79:35 79:48>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <83:39 83:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <84:66 84:79>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <111:68 111:81>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <126:35 126:48>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <80:26 80:49>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <120:22 120:45>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <122:22 122:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [MethodResolutionLogic.java <80:63 80:79>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [MethodResolutionLogic.java <120:72 120:88>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [MethodResolutionLogic.java <121:62 121:78>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <81:40 81:55>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <123:36 123:51>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <84:40 84:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [MethodResolutionLogic.java <84:106 84:121>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [MethodResolutionLogic.java <85:78 85:93>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [MethodResolutionLogic.java <84:92 84:102>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [MethodResolutionLogic.java <85:64 85:74>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.set(int, java.util.List<E>.E) [MethodResolutionLogic.java <85:44 85:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <87:46 87:69>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, int, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <95:34 95:57>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> java.lang.String [MethodResolutionLogic.java <102:13 102:18>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> java.lang.String [MethodResolutionLogic.java <144:63 144:68>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> java.lang.String [MethodResolutionLogic.java <156:63 156:68>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> java.lang.String [MethodResolutionLogic.java <171:77 171:82>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <102:21 102:24>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <144:71 144:74>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <156:71 156:74>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <171:85 171:88>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <285:43 285:46>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <622:92 622:95>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.Map<K, V> [MethodResolutionLogic.java <102:9 102:11>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.HashMap<K, V>.HashMap() [MethodResolutionLogic.java <102:51 102:59>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.HashMap<K, V> [MethodResolutionLogic.java <102:51 102:57>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <105:40 105:47>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <112:29 112:36>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <107:31 107:44>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <107:66 107:75>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <127:36 127:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod() [MethodResolutionLogic.java <107:115 107:130>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <107:97 107:111>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <108:52 108:66>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <108:35 108:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodResolutionLogic.java <108:70 108:76>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic() [MethodResolutionLogic.java <112:41 112:50>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ArrayType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <112:85 112:98>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ArrayType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <132:57 132:70>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <112:61 112:69>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <132:33 132:41>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [MethodResolutionLogic.java <112:61 112:69>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [MethodResolutionLogic.java <132:33 132:41>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <113:66 113:80>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <113:98 113:112>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <114:51 114:81>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <115:38 115:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <116:36 116:50>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <120:22 120:45>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <278:18 278:41>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.List<E>.addAll(java.util.Collection<? extends E>) [MethodResolutionLogic.java <121:32 121:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodResolutionLogic.java <121:46 121:58>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [MethodResolutionLogic.java <127:91 127:101>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean [MethodResolutionLogic.java <143:19 143:25>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <143:59 143:62>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <143:74 143:77>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <144:71 144:74>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [MethodResolutionLogic.java <144:59 144:61>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [MethodResolutionLogic.java <144:63 144:68>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <145:22 145:36>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <145:50 145:64>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <146:20 146:50>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <146:61 146:75>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <146:87 146:101>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <147:29 147:42>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <148:31 148:33>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodResolutionLogic.java <148:62 148:68>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <148:44 148:58>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [MethodResolutionLogic.java <151:23 151:51>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <151:23 151:51>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <151:73 151:88>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <151:118 151:133>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Class<?> java.lang.Object.getClass() [MethodResolutionLogic.java <151:62 151:69>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Class<?> java.lang.Object.getClass() [MethodResolutionLogic.java <151:107 151:114>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean [MethodResolutionLogic.java <155:19 155:25>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <155:59 155:71>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <155:83 155:95>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <160:18 160:30>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <161:18 161:30>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [MethodResolutionLogic.java <156:59 156:61>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [MethodResolutionLogic.java <156:63 156:68>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <156:71 156:74>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <157:39 157:44>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [MethodResolutionLogic.java <157:20 157:35>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [MethodResolutionLogic.java <157:55 157:70>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <158:20 158:63>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <162:21 162:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <160:18 160:30>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [MethodResolutionLogic.java <160:13 160:16>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllAncestors() [MethodResolutionLogic.java <160:52 160:66>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean [MethodResolutionLogic.java <170:20 170:26>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <170:73 170:85>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <170:97 170:109>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <187:17 187:29>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <188:17 188:29>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [MethodResolutionLogic.java <171:73 171:75>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [MethodResolutionLogic.java <171:77 171:82>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [MethodResolutionLogic.java <194:17 194:22>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <171:85 171:88>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <181:13 181:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <182:13 182:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <197:25 197:28>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <173:42 173:47>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <195:95 195:100>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [MethodResolutionLogic.java <173:23 173:38>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [MethodResolutionLogic.java <173:56 173:71>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [MethodResolutionLogic.java <176:45 176:48>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [MethodResolutionLogic.java <176:85 176:88>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [MethodResolutionLogic.java <180:61 180:64>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <176:22 176:41>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <176:62 176:81>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <180:38 180:57>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <181:43 181:62>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <182:39 182:58>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [MethodResolutionLogic.java <177:23 177:51>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <177:23 177:51>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <220:27 220:55>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [MethodResolutionLogic.java <180:14 180:16>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <181:66 181:68>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <182:62 182:64>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <186:31 186:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <186:64 186:78>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <209:38 209:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <187:50 187:64>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <188:48 188:62>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <190:24 190:67>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <193:31 193:44>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <195:34 195:47>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodResolutionLogic.java <194:76 194:82>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodResolutionLogic.java <195:85 195:91>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <194:58 194:72>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <195:67 195:81>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.Map<K, V>.containsKey(java.lang.Object) [MethodResolutionLogic.java <196:43 196:53>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.get(java.lang.Object) [MethodResolutionLogic.java <197:67 197:69>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <198:46 198:59>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <200:48 200:61>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <201:47 201:49>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <206:43 206:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.Object.equals(java.lang.Object) [MethodResolutionLogic.java <210:36 210:41>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <213:38 213:47>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends() [MethodResolutionLogic.java <214:48 214:56>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [MethodResolutionLogic.java <214:35 214:44>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [MethodResolutionLogic.java <215:74 215:83>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <215:28 215:58>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [MethodResolutionLogic.java <215:87 215:100>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [MethodResolutionLogic.java <220:27 220:55>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, com.github.javaparser.symbolsolver.model.typesystem.ReferenceType, java.util.Map<java.lang.String, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [MethodResolutionLogic.java <220:71 220:78>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <226:19 226:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <226:41 226:44>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <226:52 226:75>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <226:81 226:90>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <227:18 227:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <228:33 228:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <248:33 248:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [MethodResolutionLogic.java <228:22 228:29>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [MethodResolutionLogic.java <248:22 248:29>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodResolutionLogic.java <228:43 228:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodResolutionLogic.java <248:43 248:49>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [MethodResolutionLogic.java <229:22 229:51>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [MethodResolutionLogic.java <249:22 249:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <229:17 229:20>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <249:17 249:20>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [MethodResolutionLogic.java <229:47 229:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [MethodResolutionLogic.java <249:47 249:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <229:66 229:74>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <249:66 249:74>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <230:28 230:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <232:35 232:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <250:28 250:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <252:35 252:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [MethodResolutionLogic.java <231:31 231:59>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [MethodResolutionLogic.java <251:31 251:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <231:31 231:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <251:31 251:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <260:23 260:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [MethodResolutionLogic.java <233:42 233:48>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [MethodResolutionLogic.java <253:42 253:48>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <233:35 233:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <253:35 253:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <235:32 235:48>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <255:32 255:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [MethodResolutionLogic.java <235:32 235:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [MethodResolutionLogic.java <255:32 255:48>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [MethodResolutionLogic.java <235:61 235:69>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [MethodResolutionLogic.java <255:61 255:69>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <235:84 235:99>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <255:84 255:99>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <260:120 260:135>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [MethodResolutionLogic.java <235:71 235:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [MethodResolutionLogic.java <255:71 255:76>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [MethodResolutionLogic.java <239:25 239:35>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <241:25 241:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.ArrayType(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <242:24 242:32>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType [MethodResolutionLogic.java <242:24 242:32>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <242:34 242:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <245:66 245:81>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [MethodResolutionLogic.java <242:70 242:85>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [MethodResolutionLogic.java <242:56 242:66>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <243:25 243:39>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <244:13 244:25>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <244:41 244:55>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <245:111 245:125>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.transformTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.TypeTransformer) [MethodResolutionLogic.java <245:29 245:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <247:25 247:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [MethodResolutionLogic.java <260:23 260:51>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> java.lang.Object.getClass() [MethodResolutionLogic.java <260:109 260:116>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <264:19 264:25>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <264:40 264:50>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [MethodResolutionLogic.java <264:60 264:65>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <264:73 264:76>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <278:13 278:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <264:78 264:81>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <273:13 273:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <274:13 274:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <275:13 275:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <276:13 276:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <285:43 285:46>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <288:17 288:20>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <295:54 295:57>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <317:13 317:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <264:100 264:109>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <265:31 265:36>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <281:41 281:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.methods.MethodUsage.getName() [MethodResolutionLogic.java <265:21 265:27>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams() [MethodResolutionLogic.java <269:20 269:30>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams() [MethodResolutionLogic.java <272:36 272:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <269:52 269:55>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <286:56 286:59>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <304:53 304:56>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <321:53 321:56>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [MethodResolutionLogic.java <272:14 272:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [MethodResolutionLogic.java <286:18 286:20>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int) [MethodResolutionLogic.java <273:40 273:51>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int) [MethodResolutionLogic.java <275:53 275:64>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <276:46 276:48>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <292:43 292:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <305:85 305:87>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <322:85 322:87>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <278:18 278:41>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <285:17 285:40>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <295:28 295:51>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <296:17 296:40>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <300:18 300:41>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <318:18 318:41>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [MethodResolutionLogic.java <278:85 278:101>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [MethodResolutionLogic.java <279:58 279:74>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [MethodResolutionLogic.java <278:68 278:81>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration() [MethodResolutionLogic.java <287:57 287:70>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.addAll(java.util.Collection<? extends E>) [MethodResolutionLogic.java <279:28 279:33>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.declaringType() [MethodResolutionLogic.java <279:42 279:54>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [MethodResolutionLogic.java <281:30 281:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [MethodResolutionLogic.java <281:59 281:66>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <285:17 285:40>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <622:66 622:89>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Map<K, V> [MethodResolutionLogic.java <285:13 285:15>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.HashMap<K, V>.HashMap() [MethodResolutionLogic.java <285:69 285:77>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.HashMap<K, V> [MethodResolutionLogic.java <285:69 285:75>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes() [MethodResolutionLogic.java <286:40 286:52>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [MethodResolutionLogic.java <287:17 287:36>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <287:74 287:81>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <288:48 288:54>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic() [MethodResolutionLogic.java <289:31 289:40>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType() [MethodResolutionLogic.java <290:65 290:80>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ArrayType com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType() [MethodResolutionLogic.java <290:51 290:61>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <292:17 292:26>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V>.Entry<K, V> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <295:28 295:51>]
REFERENCE_TYPE_ARGUMENT: java.util.Map<K, V>.Entry<K, V> -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <295:54 295:57>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Map<K, V>.Entry<K, V> [MethodResolutionLogic.java <295:22 295:26>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Set<java.util.Map<K, V>.Entry<java.util.Map<K, V>.K, java.util.Map<K, V>.V>> java.util.Map<K, V>.entrySet() [MethodResolutionLogic.java <295:82 295:89>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Map<K, V>.Entry<K, V>.K java.util.Map<K, V>.Entry<K, V>.getKey() [MethodResolutionLogic.java <296:53 296:58>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <297:71 297:90>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <303:49 303:68>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <308:53 308:72>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <311:53 311:72>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <320:51 320:70>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <324:55 324:74>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <326:55 326:74>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Map<K, V>.Entry<K, V>.V java.util.Map<K, V>.Entry<K, V>.getValue() [MethodResolutionLogic.java <297:102 297:109>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <301:46 301:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <319:46 319:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <301:24 301:32>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <304:31 304:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <305:63 305:71>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <319:24 319:32>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <321:31 321:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <322:63 322:71>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <303:83 303:94>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <308:87 308:98>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <303:100 303:116>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <320:80 320:96>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <326:84 326:100>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [MethodResolutionLogic.java <303:100 303:116>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [MethodResolutionLogic.java <320:80 320:96>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [MethodResolutionLogic.java <326:84 326:100>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [MethodResolutionLogic.java <303:129 303:137>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [MethodResolutionLogic.java <320:109 320:117>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [MethodResolutionLogic.java <326:113 326:121>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <303:152 303:167>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <320:132 320:147>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <326:136 326:151>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [MethodResolutionLogic.java <303:139 303:144>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [MethodResolutionLogic.java <320:119 320:124>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [MethodResolutionLogic.java <326:123 326:128>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [MethodResolutionLogic.java <305:46 305:50>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [MethodResolutionLogic.java <322:46 322:50>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.isExtends() [MethodResolutionLogic.java <306:31 306:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.isExtends() [MethodResolutionLogic.java <323:31 323:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [MethodResolutionLogic.java <308:106 308:112>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [MethodResolutionLogic.java <311:104 311:110>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [MethodResolutionLogic.java <324:86 324:92>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Wildcard.superBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <311:87 311:96>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [MethodResolutionLogic.java <314:31 314:59>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException() [MethodResolutionLogic.java <329:31 329:59>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <314:31 314:59>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <329:31 329:59>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <332:31 332:44>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <333:39 333:52>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <334:51 334:64>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <335:58 335:71>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <342:25 342:41>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <342:77 342:93>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <354:14 354:30>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <373:78 373:94>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <381:78 381:94>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <382:14 382:30>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.List<E> [MethodResolutionLogic.java <342:20 342:23>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.List<E> [MethodResolutionLogic.java <342:72 342:75>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.List<E> [MethodResolutionLogic.java <354:9 354:12>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <342:25 342:41>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <342:77 342:93>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <343:13 343:29>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <343:48 343:64>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <354:14 354:30>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <356:14 356:30>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <343:13 343:29>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <396:17 396:33>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.Set<E> [MethodResolutionLogic.java <343:9 343:11>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.Set<E> [MethodResolutionLogic.java <355:9 355:11>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.TreeSet<E>.TreeSet(java.util.Comparator<? super E>) [MethodResolutionLogic.java <343:40 343:65>]
REFERENCE_TYPE_ARGUMENT: java.util.TreeSet<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <343:48 343:64>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.TreeSet<E> [MethodResolutionLogic.java <343:40 343:46>]
REFERENCE_TYPE_ARGUMENT: java.util.Comparator<T> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <343:82 343:98>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>) -> java.util.Comparator<T> [MethodResolutionLogic.java <343:71 343:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <343:82 343:98>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int java.util.Comparator<T>.compare(java.util.Comparator<T>.T, java.util.Comparator<T>.T) [MethodResolutionLogic.java <345:24 345:30>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> java.lang.Override [MethodResolutionLogic.java <344:14 344:21>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> int [MethodResolutionLogic.java <345:20 345:22>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <345:32 345:48>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <345:54 345:70>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [MethodResolutionLogic.java <346:35 346:61>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [MethodResolutionLogic.java <346:80 346:106>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [MethodResolutionLogic.java <347:27 347:53>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [MethodResolutionLogic.java <347:86 347:112>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> boolean com.github.javaparser.ast.Node.equals(java.lang.Object) [MethodResolutionLogic.java <347:77 347:82>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getWrappedNode() [MethodResolutionLogic.java <347:60 347:73>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) -> com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.getWrappedNode() [MethodResolutionLogic.java <347:119 347:132>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> boolean java.util.Set<E>.addAll(java.util.Collection<? extends E>) [MethodResolutionLogic.java <353:11 353:16>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.ArrayList<E>.ArrayList() [MethodResolutionLogic.java <354:43 354:53>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.ArrayList<E> [MethodResolutionLogic.java <354:43 354:51>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> java.lang.String [MethodResolutionLogic.java <355:13 355:18>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.lang.String [MethodResolutionLogic.java <355:13 355:18>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.lang.String [MethodResolutionLogic.java <357:13 357:18>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.HashSet<E>.HashSet() [MethodResolutionLogic.java <355:42 355:50>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.util.HashSet<E> [MethodResolutionLogic.java <355:42 355:48>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [MethodResolutionLogic.java <357:35 357:55>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> boolean java.util.Set<E>.contains(java.lang.Object) [MethodResolutionLogic.java <358:33 358:40>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> boolean java.util.Set<E>.add(java.util.Set<E>.E) [MethodResolutionLogic.java <359:32 359:34>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [MethodResolutionLogic.java <360:21 360:23>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <373:35 373:51>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <374:25 374:41>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <381:35 381:51>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <570:35 570:51>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <583:35 583:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [MethodResolutionLogic.java <373:19 373:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [MethodResolutionLogic.java <374:9 374:23>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <373:35 373:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <373:78 373:94>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <374:25 374:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <373:73 373:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <373:119 373:122>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [MethodResolutionLogic.java <373:106 373:111>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <373:124 373:127>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <373:146 373:155>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [MethodResolutionLogic.java <374:50 374:67>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [MethodResolutionLogic.java <378:16 378:33>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [MethodResolutionLogic.java <375:17 375:24>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [MethodResolutionLogic.java <381:19 381:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <381:35 381:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <381:78 381:94>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <382:14 382:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <384:45 384:61>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <396:17 396:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <398:20 398:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <412:13 412:29>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <413:13 413:29>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E> [MethodResolutionLogic.java <381:73 381:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E> [MethodResolutionLogic.java <381:119 381:122>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E> [MethodResolutionLogic.java <382:9 382:12>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E> [MethodResolutionLogic.java <388:11 388:14>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String [MethodResolutionLogic.java <381:106 381:111>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <381:124 381:127>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <381:146 381:155>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [MethodResolutionLogic.java <381:169 381:175>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean [MethodResolutionLogic.java <414:13 414:19>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [MethodResolutionLogic.java <382:183 382:189>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [MethodResolutionLogic.java <382:99 382:104>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [MethodResolutionLogic.java <382:90 382:95>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>) [MethodResolutionLogic.java <382:53 382:79>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) [MethodResolutionLogic.java <382:113 382:124>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [MethodResolutionLogic.java <382:202 382:207>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <383:31 383:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <394:33 394:39>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [MethodResolutionLogic.java <384:36 384:43>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <387:31 387:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <389:46 389:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <404:92 404:95>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <409:31 409:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.List<E>.size() [MethodResolutionLogic.java <415:51 415:54>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> java.lang.Integer [MethodResolutionLogic.java <388:16 388:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.Integer [MethodResolutionLogic.java <388:16 388:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.Integer [MethodResolutionLogic.java <397:18 397:24>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.ArrayList<E>.ArrayList() [MethodResolutionLogic.java <388:48 388:58>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.ArrayList<E> [MethodResolutionLogic.java <388:48 388:56>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int [MethodResolutionLogic.java <389:16 389:18>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int [MethodResolutionLogic.java <415:18 415:20>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull() [MethodResolutionLogic.java <390:39 390:44>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <390:32 390:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <410:61 410:63>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <412:68 412:70>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <416:43 416:45>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.List<E>.add(java.util.List<E>.E) [MethodResolutionLogic.java <391:32 391:34>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.Set<E> [MethodResolutionLogic.java <396:13 396:15>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.HashSet<E>.HashSet() [MethodResolutionLogic.java <396:59 396:67>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.util.HashSet<E> [MethodResolutionLogic.java <396:59 396:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <399:76 399:82>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <399:66 399:72>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <399:30 399:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.lang.Integer.intValue() [MethodResolutionLogic.java <399:54 399:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.Set<E>.add(java.util.Set<E>.E) [MethodResolutionLogic.java <400:36 400:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.Set<E>.isEmpty() [MethodResolutionLogic.java <404:35 404:41>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> int java.util.Set<E>.size() [MethodResolutionLogic.java <404:65 404:68>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.util.List<E>.removeAll(java.util.Collection<?>) [MethodResolutionLogic.java <405:33 405:41>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [MethodResolutionLogic.java <410:36 410:41>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [MethodResolutionLogic.java <440:36 440:41>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <417:21 417:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <419:28 419:41>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <423:77 423:82>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [MethodResolutionLogic.java <423:58 423:73>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [MethodResolutionLogic.java <423:106 423:121>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodResolutionLogic.java <423:42 423:54>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodResolutionLogic.java <423:90 423:102>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <432:20 432:31>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <433:21 433:32>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodAmbiguityException.MethodAmbiguityException(java.lang.String) [MethodResolutionLogic.java <436:29 436:52>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodAmbiguityException [MethodResolutionLogic.java <436:29 436:52>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean [MethodResolutionLogic.java <444:22 444:28>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [MethodResolutionLogic.java <444:43 444:63>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [MethodResolutionLogic.java <444:73 444:76>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <444:78 444:81>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [MethodResolutionLogic.java <445:12 445:14>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <445:34 445:50>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.Object.equals(java.lang.Object) [MethodResolutionLogic.java <446:43 446:48>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <446:33 446:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <446:21 446:28>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch(com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <446:65 446:67>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <453:20 453:26>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <454:9 454:15>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <453:43 453:59>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <453:70 453:86>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <453:97 453:100>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <453:102 453:105>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <462:13 462:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <463:13 463:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <453:123 453:132>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <455:21 455:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <455:51 455:67>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <458:21 458:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <458:51 458:67>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodResolutionLogic.java <461:37 461:53>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [MethodResolutionLogic.java <461:14 461:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [MethodResolutionLogic.java <475:13 475:15>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <462:44 462:50>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType() [MethodResolutionLogic.java <463:44 463:50>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <462:32 462:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodResolutionLogic.java <463:32 463:39>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <465:21 465:34>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <465:49 465:62>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <469:21 469:34>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <469:49 469:62>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <475:43 475:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodResolutionLogic.java <477:25 477:44>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodResolutionLogic.java <477:60 477:79>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodResolutionLogic.java <487:26 487:45>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodResolutionLogic.java <487:60 487:79>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <479:50 479:56>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <483:51 483:57>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <490:50 490:56>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [MethodResolutionLogic.java <494:51 494:57>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <479:35 479:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <483:36 483:38>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <490:35 490:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <494:36 494:38>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <503:20 503:26>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <504:9 504:15>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <509:13 509:19>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <510:13 510:19>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <503:43 503:53>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <503:64 503:74>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <503:85 503:94>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [MethodResolutionLogic.java <505:14 505:16>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams() [MethodResolutionLogic.java <505:37 505:47>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <506:13 506:16>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <507:13 507:16>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int) [MethodResolutionLogic.java <506:32 506:43>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamType(int) [MethodResolutionLogic.java <507:32 507:43>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <509:44 509:57>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [MethodResolutionLogic.java <510:44 510:57>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <524:28 524:38>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [MethodResolutionLogic.java <524:19 524:26>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <524:28 524:38>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <524:70 524:80>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <525:14 525:24>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <533:13 533:23>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <535:17 535:27>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <524:70 524:80>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <525:14 525:24>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <524:65 524:68>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <524:105 524:108>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <525:9 525:12>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [MethodResolutionLogic.java <524:92 524:97>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <524:110 524:113>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <524:132 524:141>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [MethodResolutionLogic.java <525:129 525:135>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [MethodResolutionLogic.java <525:64 525:69>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [MethodResolutionLogic.java <525:55 525:60>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable(com.github.javaparser.symbolsolver.model.methods.MethodUsage, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <525:78 525:89>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [MethodResolutionLogic.java <525:148 525:153>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <527:31 527:37>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [MethodResolutionLogic.java <528:29 528:33>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <530:31 530:34>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.util.List<E>.size() [MethodResolutionLogic.java <534:51 534:54>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [MethodResolutionLogic.java <531:29 531:30>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [MethodResolutionLogic.java <551:29 551:30>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <531:50 531:52>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <533:62 533:64>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <535:55 535:57>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int [MethodResolutionLogic.java <534:18 534:20>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <536:21 536:34>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <538:28 538:41>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <541:77 541:82>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [MethodResolutionLogic.java <541:58 541:73>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [MethodResolutionLogic.java <541:106 541:121>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [MethodResolutionLogic.java <543:222 543:237>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.declaringType() [MethodResolutionLogic.java <541:42 541:54>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.declaringType() [MethodResolutionLogic.java <541:90 541:102>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.methods.MethodUsage.declaringType() [MethodResolutionLogic.java <543:206 543:218>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) [MethodResolutionLogic.java <542:30 542:40>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodAmbiguityException.MethodAmbiguityException(java.lang.String) [MethodResolutionLogic.java <543:39 543:62>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodAmbiguityException [MethodResolutionLogic.java <543:39 543:62>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> boolean [MethodResolutionLogic.java <555:20 555:26>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <555:40 555:50>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [MethodResolutionLogic.java <555:70 555:80>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <556:41 556:46>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.lang.String com.github.javaparser.symbolsolver.model.methods.MethodUsage.getName() [MethodResolutionLogic.java <556:31 556:37>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.lang.String com.github.javaparser.symbolsolver.model.methods.MethodUsage.getName() [MethodResolutionLogic.java <556:54 556:60>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams() [MethodResolutionLogic.java <559:30 559:40>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams() [MethodResolutionLogic.java <559:53 559:63>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int com.github.javaparser.symbolsolver.model.methods.MethodUsage.getNoParams() [MethodResolutionLogic.java <562:46 562:56>]
REFERENCE_TYPE_USAGE: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> int [MethodResolutionLogic.java <562:14 562:16>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> boolean java.lang.Object.equals(java.lang.Object) [MethodResolutionLogic.java <563:58 563:63>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <563:51 563:53>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <563:87 563:89>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes() [MethodResolutionLogic.java <563:35 563:47>]
REFERENCE_CALL: static boolean com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride(com.github.javaparser.symbolsolver.model.methods.MethodUsage, com.github.javaparser.symbolsolver.model.methods.MethodUsage) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getParamTypes() [MethodResolutionLogic.java <563:71 563:83>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [MethodResolutionLogic.java <570:19 570:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <570:35 570:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [MethodResolutionLogic.java <570:72 570:86>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [MethodResolutionLogic.java <570:105 570:110>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <570:118 570:121>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <570:123 570:126>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <570:145 570:154>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <571:16 571:32>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [MethodResolutionLogic.java <583:19 583:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [MethodResolutionLogic.java <583:35 583:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [MethodResolutionLogic.java <583:72 583:86>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [MethodResolutionLogic.java <584:72 584:77>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [MethodResolutionLogic.java <584:85 584:88>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <584:90 584:93>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [MethodResolutionLogic.java <584:112 584:118>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [MethodResolutionLogic.java <585:72 585:81>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration [MethodResolutionLogic.java <586:40 586:65>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration [MethodResolutionLogic.java <587:29 587:54>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [MethodResolutionLogic.java <587:13 587:19>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [MethodResolutionLogic.java <591:13 591:19>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context [MethodResolutionLogic.java <598:13 598:19>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration.getContext() [MethodResolutionLogic.java <587:74 587:83>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <588:24 588:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <592:24 592:34>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <599:24 599:34>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [MethodResolutionLogic.java <590:40 590:69>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration [MethodResolutionLogic.java <591:29 591:58>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration.getContext() [MethodResolutionLogic.java <591:78 591:87>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [MethodResolutionLogic.java <594:40 594:64>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [MethodResolutionLogic.java <596:91 596:115>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration [MethodResolutionLogic.java <598:29 598:53>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <595:22 595:27>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.isEmpty() [MethodResolutionLogic.java <595:57 595:63>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [MethodResolutionLogic.java <596:40 596:45>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.ValuesMethod.ValuesMethod(com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [MethodResolutionLogic.java <596:51 596:88>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.ValuesMethod [MethodResolutionLogic.java <596:77 596:88>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.getContext() [MethodResolutionLogic.java <598:73 598:82>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [MethodResolutionLogic.java <601:40 601:65>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [MethodResolutionLogic.java <602:22 602:47>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [MethodResolutionLogic.java <602:67 602:77>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration [MethodResolutionLogic.java <604:40 604:69>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration [MethodResolutionLogic.java <605:20 605:49>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [MethodResolutionLogic.java <605:69 605:79>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration [MethodResolutionLogic.java <607:42 607:66>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration [MethodResolutionLogic.java <608:22 608:46>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [MethodResolutionLogic.java <608:66 608:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration [MethodResolutionLogic.java <610:40 610:68>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration [MethodResolutionLogic.java <611:22 611:50>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [MethodResolutionLogic.java <611:70 611:80>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration [MethodResolutionLogic.java <613:40 613:64>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration [MethodResolutionLogic.java <614:20 614:44>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [MethodResolutionLogic.java <614:64 614:74>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration [MethodResolutionLogic.java <616:42 616:65>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration [MethodResolutionLogic.java <617:22 617:45>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [MethodResolutionLogic.java <617:65 617:75>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [MethodResolutionLogic.java <619:19 619:47>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [MethodResolutionLogic.java <619:19 619:47>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [MethodResolutionLogic.java <619:76 619:91>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> java.lang.Object.getClass() [MethodResolutionLogic.java <619:65 619:72>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> void [MethodResolutionLogic.java <622:20 622:23>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <622:36 622:39>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <622:49 622:52>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [MethodResolutionLogic.java <622:92 622:95>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V> [MethodResolutionLogic.java <622:62 622:64>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodResolutionLogic.java <622:66 622:89>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.Object.equals(java.lang.Object) [MethodResolutionLogic.java <625:20 625:25>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <628:20 628:34>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <628:48 628:62>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <640:20 640:34>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <650:20 650:34>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [MethodResolutionLogic.java <655:43 655:57>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <629:13 629:25>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [MethodResolutionLogic.java <630:13 630:25>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <629:50 629:64>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [MethodResolutionLogic.java <630:50 630:64>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [MethodResolutionLogic.java <631:50 631:55>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [MethodResolutionLogic.java <631:31 631:46>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [MethodResolutionLogic.java <631:71 631:86>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isRawType() [MethodResolutionLogic.java <632:36 632:44>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isRawType() [MethodResolutionLogic.java <632:66 632:74>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [MethodResolutionLogic.java <633:26 633:28>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [MethodResolutionLogic.java <633:78 633:81>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <633:55 633:74>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <634:50 634:69>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeParametersValues() [MethodResolutionLogic.java <634:95 634:114>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <634:25 634:34>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <642:17 642:26>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) [MethodResolutionLogic.java <657:17 657:26>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <634:73 634:75>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [MethodResolutionLogic.java <634:118 634:120>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <640:48 640:57>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <647:20 647:29>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <647:43 647:52>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <655:20 655:29>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [MethodResolutionLogic.java <662:20 662:29>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [MethodResolutionLogic.java <641:37 641:45>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isBounded() [MethodResolutionLogic.java <656:37 656:45>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [MethodResolutionLogic.java <641:24 641:33>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [MethodResolutionLogic.java <642:43 642:52>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [MethodResolutionLogic.java <656:24 656:33>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [MethodResolutionLogic.java <657:35 657:44>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [MethodResolutionLogic.java <642:56 642:69>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [MethodResolutionLogic.java <657:48 657:61>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <650:48 650:61>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <662:43 662:56>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <666:20 666:33>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [MethodResolutionLogic.java <666:47 666:60>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <651:22 651:24>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <663:22 663:24>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Map<K, V>.V java.util.Map<K, V>.put(java.util.Map<K, V>.K, java.util.Map<K, V>.V) [MethodResolutionLogic.java <667:22 667:24>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <651:33 651:47>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <663:33 663:47>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [MethodResolutionLogic.java <667:33 667:47>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [MethodResolutionLogic.java <670:20 670:30>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [MethodResolutionLogic.java <670:44 670:54>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isNull() [MethodResolutionLogic.java <673:20 673:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<104:62> [MethodResolutionLogic.java <104:62 104:62>]
LOCAL_SYMBOL: MethodResolutionLogic.java<104:62> [MethodResolutionLogic.java <139:9 139:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<107:135> [MethodResolutionLogic.java <107:135 107:135>]
LOCAL_SYMBOL: MethodResolutionLogic.java<107:135> [MethodResolutionLogic.java <110:13 110:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<113:117> [MethodResolutionLogic.java <113:117 113:117>]
LOCAL_SYMBOL: MethodResolutionLogic.java<113:117> [MethodResolutionLogic.java <118:13 118:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<119:51> [MethodResolutionLogic.java <119:51 119:51>]
LOCAL_SYMBOL: MethodResolutionLogic.java<119:51> [MethodResolutionLogic.java <138:13 138:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<122:68> [MethodResolutionLogic.java <122:68 122:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<122:68> [MethodResolutionLogic.java <124:17 124:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<126:63> [MethodResolutionLogic.java <126:63 126:63>]
LOCAL_SYMBOL: MethodResolutionLogic.java<126:63> [MethodResolutionLogic.java <137:17 137:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<127:106> [MethodResolutionLogic.java <127:106 127:106>]
LOCAL_SYMBOL: MethodResolutionLogic.java<127:106> [MethodResolutionLogic.java <130:21 130:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<131:95> [MethodResolutionLogic.java <131:95 131:95>]
LOCAL_SYMBOL: MethodResolutionLogic.java<131:95> [MethodResolutionLogic.java <135:21 135:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<132:85> [MethodResolutionLogic.java <132:85 132:85>]
LOCAL_SYMBOL: MethodResolutionLogic.java<132:85> [MethodResolutionLogic.java <134:25 134:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<144:96> [MethodResolutionLogic.java <144:96 144:96>]
LOCAL_SYMBOL: MethodResolutionLogic.java<144:96> [MethodResolutionLogic.java <153:5 153:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<145:69> [MethodResolutionLogic.java <145:69 145:69>]
LOCAL_SYMBOL: MethodResolutionLogic.java<145:69> [MethodResolutionLogic.java <147:9 147:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<147:47> [MethodResolutionLogic.java <147:47 147:47>]
LOCAL_SYMBOL: MethodResolutionLogic.java<147:47> [MethodResolutionLogic.java <150:9 150:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<150:16> [MethodResolutionLogic.java <150:16 150:16>]
LOCAL_SYMBOL: MethodResolutionLogic.java<150:16> [MethodResolutionLogic.java <152:9 152:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<156:96> [MethodResolutionLogic.java <156:96 156:96>]
LOCAL_SYMBOL: MethodResolutionLogic.java<156:96> [MethodResolutionLogic.java <168:5 168:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<157:76> [MethodResolutionLogic.java <157:76 157:76>]
LOCAL_SYMBOL: MethodResolutionLogic.java<157:76> [MethodResolutionLogic.java <159:9 159:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<159:16> [MethodResolutionLogic.java <159:16 159:16>]
LOCAL_SYMBOL: MethodResolutionLogic.java<159:16> [MethodResolutionLogic.java <166:9 166:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<161:54> [MethodResolutionLogic.java <161:54 161:54>]
LOCAL_SYMBOL: MethodResolutionLogic.java<161:54> [MethodResolutionLogic.java <165:13 165:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<162:106> [MethodResolutionLogic.java <162:106 162:106>]
LOCAL_SYMBOL: MethodResolutionLogic.java<162:106> [MethodResolutionLogic.java <164:17 164:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<171:110> [MethodResolutionLogic.java <171:110 171:110>]
LOCAL_SYMBOL: MethodResolutionLogic.java<171:110> [MethodResolutionLogic.java <224:5 224:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<173:77> [MethodResolutionLogic.java <173:77 173:77>]
LOCAL_SYMBOL: MethodResolutionLogic.java<173:77> [MethodResolutionLogic.java <175:9 175:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<176:93> [MethodResolutionLogic.java <176:93 176:93>]
LOCAL_SYMBOL: MethodResolutionLogic.java<176:93> [MethodResolutionLogic.java <179:9 179:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<180:74> [MethodResolutionLogic.java <180:74 180:74>]
LOCAL_SYMBOL: MethodResolutionLogic.java<180:74> [MethodResolutionLogic.java <222:9 222:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<186:82> [MethodResolutionLogic.java <186:82 186:82>]
LOCAL_SYMBOL: MethodResolutionLogic.java<186:82> [MethodResolutionLogic.java <191:13 191:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<193:49> [MethodResolutionLogic.java <193:49 193:49>]
LOCAL_SYMBOL: MethodResolutionLogic.java<193:49> [MethodResolutionLogic.java <209:13 209:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<195:122> [MethodResolutionLogic.java <195:122 195:122>]
LOCAL_SYMBOL: MethodResolutionLogic.java<195:122> [MethodResolutionLogic.java <208:17 208:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<196:75> [MethodResolutionLogic.java <196:75 196:75>]
LOCAL_SYMBOL: MethodResolutionLogic.java<196:75> [MethodResolutionLogic.java <205:21 205:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<198:75> [MethodResolutionLogic.java <198:75 198:75>]
LOCAL_SYMBOL: MethodResolutionLogic.java<198:75> [MethodResolutionLogic.java <200:25 200:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<200:82> [MethodResolutionLogic.java <200:82 200:82>]
LOCAL_SYMBOL: MethodResolutionLogic.java<200:82> [MethodResolutionLogic.java <203:25 203:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<205:28> [MethodResolutionLogic.java <205:28 205:28>]
LOCAL_SYMBOL: MethodResolutionLogic.java<205:28> [MethodResolutionLogic.java <207:21 207:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<209:57> [MethodResolutionLogic.java <209:57 209:57>]
LOCAL_SYMBOL: MethodResolutionLogic.java<209:57> [MethodResolutionLogic.java <213:13 213:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<210:57> [MethodResolutionLogic.java <210:57 210:57>]
LOCAL_SYMBOL: MethodResolutionLogic.java<210:57> [MethodResolutionLogic.java <212:17 212:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<213:52> [MethodResolutionLogic.java <213:52 213:52>]
LOCAL_SYMBOL: MethodResolutionLogic.java<213:52> [MethodResolutionLogic.java <219:13 219:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<214:61> [MethodResolutionLogic.java <214:61 214:61>]
LOCAL_SYMBOL: MethodResolutionLogic.java<214:61> [MethodResolutionLogic.java <216:17 216:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<219:20> [MethodResolutionLogic.java <219:20 219:20>]
LOCAL_SYMBOL: MethodResolutionLogic.java<219:20> [MethodResolutionLogic.java <221:13 221:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<226:104> [MethodResolutionLogic.java <226:104 226:104>]
LOCAL_SYMBOL: MethodResolutionLogic.java<226:104> [MethodResolutionLogic.java <262:5 262:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<227:36> [MethodResolutionLogic.java <227:36 227:36>]
LOCAL_SYMBOL: MethodResolutionLogic.java<227:36> [MethodResolutionLogic.java <239:9 239:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<228:55> [MethodResolutionLogic.java <228:55 228:55>]
LOCAL_SYMBOL: MethodResolutionLogic.java<228:55> [MethodResolutionLogic.java <237:13 237:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<230:40> [MethodResolutionLogic.java <230:40 230:40>]
LOCAL_SYMBOL: MethodResolutionLogic.java<230:40> [MethodResolutionLogic.java <232:17 232:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<232:48> [MethodResolutionLogic.java <232:48 232:48>]
LOCAL_SYMBOL: MethodResolutionLogic.java<232:48> [MethodResolutionLogic.java <234:17 234:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<234:24> [MethodResolutionLogic.java <234:24 234:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<234:24> [MethodResolutionLogic.java <236:17 236:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<239:40> [MethodResolutionLogic.java <239:40 239:40>]
LOCAL_SYMBOL: MethodResolutionLogic.java<239:40> [MethodResolutionLogic.java <241:9 241:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<241:36> [MethodResolutionLogic.java <241:36 241:36>]
LOCAL_SYMBOL: MethodResolutionLogic.java<241:36> [MethodResolutionLogic.java <243:9 243:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<243:44> [MethodResolutionLogic.java <243:44 243:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<243:44> [MethodResolutionLogic.java <247:9 247:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<247:39> [MethodResolutionLogic.java <247:39 247:39>]
LOCAL_SYMBOL: MethodResolutionLogic.java<247:39> [MethodResolutionLogic.java <259:9 259:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<248:55> [MethodResolutionLogic.java <248:55 248:55>]
LOCAL_SYMBOL: MethodResolutionLogic.java<248:55> [MethodResolutionLogic.java <257:13 257:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<250:40> [MethodResolutionLogic.java <250:40 250:40>]
LOCAL_SYMBOL: MethodResolutionLogic.java<250:40> [MethodResolutionLogic.java <252:17 252:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<252:48> [MethodResolutionLogic.java <252:48 252:48>]
LOCAL_SYMBOL: MethodResolutionLogic.java<252:48> [MethodResolutionLogic.java <254:17 254:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<254:24> [MethodResolutionLogic.java <254:24 254:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<254:24> [MethodResolutionLogic.java <256:17 256:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<259:16> [MethodResolutionLogic.java <259:16 259:16>]
LOCAL_SYMBOL: MethodResolutionLogic.java<259:16> [MethodResolutionLogic.java <261:9 261:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<264:123> [MethodResolutionLogic.java <264:123 264:123>]
LOCAL_SYMBOL: MethodResolutionLogic.java<264:123> [MethodResolutionLogic.java <340:5 340:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<265:45> [MethodResolutionLogic.java <265:45 265:45>]
LOCAL_SYMBOL: MethodResolutionLogic.java<265:45> [MethodResolutionLogic.java <267:9 267:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<269:60> [MethodResolutionLogic.java <269:60 269:60>]
LOCAL_SYMBOL: MethodResolutionLogic.java<269:60> [MethodResolutionLogic.java <271:9 271:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<272:56> [MethodResolutionLogic.java <272:56 272:56>]
LOCAL_SYMBOL: MethodResolutionLogic.java<272:56> [MethodResolutionLogic.java <338:9 338:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<281:71> [MethodResolutionLogic.java <281:71 281:71>]
LOCAL_SYMBOL: MethodResolutionLogic.java<281:71> [MethodResolutionLogic.java <283:13 283:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<286:69> [MethodResolutionLogic.java <286:69 286:69>]
LOCAL_SYMBOL: MethodResolutionLogic.java<286:69> [MethodResolutionLogic.java <293:13 293:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<289:45> [MethodResolutionLogic.java <289:45 289:45>]
LOCAL_SYMBOL: MethodResolutionLogic.java<289:45> [MethodResolutionLogic.java <291:17 291:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<295:93> [MethodResolutionLogic.java <295:93 295:93>]
LOCAL_SYMBOL: MethodResolutionLogic.java<295:93> [MethodResolutionLogic.java <298:13 298:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<300:64> [MethodResolutionLogic.java <300:64 300:64>]
LOCAL_SYMBOL: MethodResolutionLogic.java<300:64> [MethodResolutionLogic.java <316:13 316:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<301:57> [MethodResolutionLogic.java <301:57 301:57>]
LOCAL_SYMBOL: MethodResolutionLogic.java<301:57> [MethodResolutionLogic.java <304:17 304:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<304:66> [MethodResolutionLogic.java <304:66 304:66>]
LOCAL_SYMBOL: MethodResolutionLogic.java<304:66> [MethodResolutionLogic.java <313:17 313:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<306:44> [MethodResolutionLogic.java <306:44 306:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<306:44> [MethodResolutionLogic.java <309:21 309:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<309:28> [MethodResolutionLogic.java <309:28 309:28>]
LOCAL_SYMBOL: MethodResolutionLogic.java<309:28> [MethodResolutionLogic.java <312:21 312:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<313:24> [MethodResolutionLogic.java <313:24 313:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<313:24> [MethodResolutionLogic.java <315:17 315:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<318:64> [MethodResolutionLogic.java <318:64 318:64>]
LOCAL_SYMBOL: MethodResolutionLogic.java<318:64> [MethodResolutionLogic.java <331:13 331:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<319:57> [MethodResolutionLogic.java <319:57 319:57>]
LOCAL_SYMBOL: MethodResolutionLogic.java<319:57> [MethodResolutionLogic.java <321:17 321:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<321:66> [MethodResolutionLogic.java <321:66 321:66>]
LOCAL_SYMBOL: MethodResolutionLogic.java<321:66> [MethodResolutionLogic.java <328:17 328:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<323:44> [MethodResolutionLogic.java <323:44 323:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<323:44> [MethodResolutionLogic.java <325:21 325:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<325:28> [MethodResolutionLogic.java <325:28 325:28>]
LOCAL_SYMBOL: MethodResolutionLogic.java<325:28> [MethodResolutionLogic.java <327:21 327:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<328:24> [MethodResolutionLogic.java <328:24 328:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<328:24> [MethodResolutionLogic.java <330:17 330:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<335:86> [MethodResolutionLogic.java <335:86 335:86>]
LOCAL_SYMBOL: MethodResolutionLogic.java<335:86> [MethodResolutionLogic.java <337:13 337:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<342:105> [MethodResolutionLogic.java <342:105 342:105>]
LOCAL_SYMBOL: MethodResolutionLogic.java<342:105> [MethodResolutionLogic.java <364:5 364:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<343:103> [MethodResolutionLogic.java <343:103 343:103>]
LOCAL_SYMBOL: MethodResolutionLogic.java<343:103> [MethodResolutionLogic.java <352:9 352:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<345:76> [MethodResolutionLogic.java <345:76 345:76>]
LOCAL_SYMBOL: MethodResolutionLogic.java<345:76> [MethodResolutionLogic.java <351:13 351:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<347:138> [MethodResolutionLogic.java <347:138 347:138>]
LOCAL_SYMBOL: MethodResolutionLogic.java<347:138> [MethodResolutionLogic.java <349:17 349:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<356:46> [MethodResolutionLogic.java <356:46 356:46>]
LOCAL_SYMBOL: MethodResolutionLogic.java<356:46> [MethodResolutionLogic.java <362:9 362:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<358:54> [MethodResolutionLogic.java <358:54 358:54>]
LOCAL_SYMBOL: MethodResolutionLogic.java<358:54> [MethodResolutionLogic.java <361:13 361:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<373:169> [MethodResolutionLogic.java <373:169 373:169>]
LOCAL_SYMBOL: MethodResolutionLogic.java<373:169> [MethodResolutionLogic.java <379:5 379:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<375:29> [MethodResolutionLogic.java <375:29 375:29>]
LOCAL_SYMBOL: MethodResolutionLogic.java<375:29> [MethodResolutionLogic.java <377:9 377:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<381:196> [MethodResolutionLogic.java <381:196 381:196>]
LOCAL_SYMBOL: MethodResolutionLogic.java<381:196> [MethodResolutionLogic.java <442:5 442:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<383:42> [MethodResolutionLogic.java <383:42 383:42>]
LOCAL_SYMBOL: MethodResolutionLogic.java<383:42> [MethodResolutionLogic.java <385:9 385:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<387:43> [MethodResolutionLogic.java <387:43 387:43>]
LOCAL_SYMBOL: MethodResolutionLogic.java<387:43> [MethodResolutionLogic.java <408:9 408:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<389:59> [MethodResolutionLogic.java <389:59 389:59>]
LOCAL_SYMBOL: MethodResolutionLogic.java<389:59> [MethodResolutionLogic.java <393:11 393:11>]
LOCAL_SYMBOL: MethodResolutionLogic.java<390:49> [MethodResolutionLogic.java <390:49 390:49>]
LOCAL_SYMBOL: MethodResolutionLogic.java<390:49> [MethodResolutionLogic.java <392:13 392:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<394:44> [MethodResolutionLogic.java <394:44 394:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<394:44> [MethodResolutionLogic.java <407:11 407:11>]
LOCAL_SYMBOL: MethodResolutionLogic.java<397:60> [MethodResolutionLogic.java <397:60 397:60>]
LOCAL_SYMBOL: MethodResolutionLogic.java<397:60> [MethodResolutionLogic.java <403:13 403:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<398:67> [MethodResolutionLogic.java <398:67 398:67>]
LOCAL_SYMBOL: MethodResolutionLogic.java<398:67> [MethodResolutionLogic.java <402:15 402:15>]
LOCAL_SYMBOL: MethodResolutionLogic.java<399:87> [MethodResolutionLogic.java <399:87 399:87>]
LOCAL_SYMBOL: MethodResolutionLogic.java<399:87> [MethodResolutionLogic.java <401:17 401:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<404:100> [MethodResolutionLogic.java <404:100 404:100>]
LOCAL_SYMBOL: MethodResolutionLogic.java<404:100> [MethodResolutionLogic.java <406:13 406:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<409:44> [MethodResolutionLogic.java <409:44 409:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<409:44> [MethodResolutionLogic.java <411:9 411:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<411:16> [MethodResolutionLogic.java <411:16 411:16>]
LOCAL_SYMBOL: MethodResolutionLogic.java<411:16> [MethodResolutionLogic.java <441:9 441:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<415:64> [MethodResolutionLogic.java <415:64 415:64>]
LOCAL_SYMBOL: MethodResolutionLogic.java<415:64> [MethodResolutionLogic.java <429:13 429:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<417:90> [MethodResolutionLogic.java <417:90 417:90>]
LOCAL_SYMBOL: MethodResolutionLogic.java<417:90> [MethodResolutionLogic.java <419:17 419:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<419:97> [MethodResolutionLogic.java <419:97 419:97>]
LOCAL_SYMBOL: MethodResolutionLogic.java<419:97> [MethodResolutionLogic.java <422:17 422:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<422:24> [MethodResolutionLogic.java <422:24 422:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<422:24> [MethodResolutionLogic.java <428:17 428:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<423:127> [MethodResolutionLogic.java <423:127 423:127>]
LOCAL_SYMBOL: MethodResolutionLogic.java<423:127> [MethodResolutionLogic.java <425:21 425:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<425:28> [MethodResolutionLogic.java <425:28 425:28>]
LOCAL_SYMBOL: MethodResolutionLogic.java<425:28> [MethodResolutionLogic.java <427:21 427:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<42:36> [MethodResolutionLogic.java <42:36 42:36>]
LOCAL_SYMBOL: MethodResolutionLogic.java<42:36> [MethodResolutionLogic.java <679:1 679:1>]
LOCAL_SYMBOL: MethodResolutionLogic.java<430:36> [MethodResolutionLogic.java <430:36 430:36>]
LOCAL_SYMBOL: MethodResolutionLogic.java<430:36> [MethodResolutionLogic.java <439:13 439:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<432:68> [MethodResolutionLogic.java <432:68 432:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<432:68> [MethodResolutionLogic.java <438:15 438:15>]
LOCAL_SYMBOL: MethodResolutionLogic.java<433:58> [MethodResolutionLogic.java <433:58 433:58>]
LOCAL_SYMBOL: MethodResolutionLogic.java<433:58> [MethodResolutionLogic.java <435:17 435:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<435:24> [MethodResolutionLogic.java <435:24 435:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<435:24> [MethodResolutionLogic.java <437:17 437:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<444:100> [MethodResolutionLogic.java <444:100 444:100>]
LOCAL_SYMBOL: MethodResolutionLogic.java<444:100> [MethodResolutionLogic.java <451:5 451:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<445:60> [MethodResolutionLogic.java <445:60 445:60>]
LOCAL_SYMBOL: MethodResolutionLogic.java<445:60> [MethodResolutionLogic.java <449:7 449:7>]
LOCAL_SYMBOL: MethodResolutionLogic.java<446:74> [MethodResolutionLogic.java <446:74 446:74>]
LOCAL_SYMBOL: MethodResolutionLogic.java<446:74> [MethodResolutionLogic.java <448:9 448:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<44:121> [MethodResolutionLogic.java <44:121 44:121>]
LOCAL_SYMBOL: MethodResolutionLogic.java<44:121> [MethodResolutionLogic.java <55:5 55:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<453:146> [MethodResolutionLogic.java <453:146 453:146>]
LOCAL_SYMBOL: MethodResolutionLogic.java<453:146> [MethodResolutionLogic.java <501:5 501:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<455:72> [MethodResolutionLogic.java <455:72 455:72>]
LOCAL_SYMBOL: MethodResolutionLogic.java<455:72> [MethodResolutionLogic.java <457:9 457:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<458:72> [MethodResolutionLogic.java <458:72 458:72>]
LOCAL_SYMBOL: MethodResolutionLogic.java<458:72> [MethodResolutionLogic.java <460:9 460:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<461:63> [MethodResolutionLogic.java <461:63 461:63>]
LOCAL_SYMBOL: MethodResolutionLogic.java<461:63> [MethodResolutionLogic.java <472:9 472:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<465:70> [MethodResolutionLogic.java <465:70 465:70>]
LOCAL_SYMBOL: MethodResolutionLogic.java<465:70> [MethodResolutionLogic.java <467:13 467:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<469:70> [MethodResolutionLogic.java <469:70 469:70>]
LOCAL_SYMBOL: MethodResolutionLogic.java<469:70> [MethodResolutionLogic.java <471:13 471:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<474:36> [MethodResolutionLogic.java <474:36 474:36>]
LOCAL_SYMBOL: MethodResolutionLogic.java<474:36> [MethodResolutionLogic.java <498:9 498:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<477:84> [MethodResolutionLogic.java <477:84 477:84>]
LOCAL_SYMBOL: MethodResolutionLogic.java<477:84> [MethodResolutionLogic.java <486:13 486:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<479:61> [MethodResolutionLogic.java <479:61 479:61>]
LOCAL_SYMBOL: MethodResolutionLogic.java<479:61> [MethodResolutionLogic.java <481:17 481:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<47:39> [MethodResolutionLogic.java <47:39 47:39>]
LOCAL_SYMBOL: MethodResolutionLogic.java<47:39> [MethodResolutionLogic.java <50:9 50:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<483:62> [MethodResolutionLogic.java <483:62 483:62>]
LOCAL_SYMBOL: MethodResolutionLogic.java<483:62> [MethodResolutionLogic.java <485:17 485:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<487:84> [MethodResolutionLogic.java <487:84 487:84>]
LOCAL_SYMBOL: MethodResolutionLogic.java<487:84> [MethodResolutionLogic.java <497:13 497:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<490:61> [MethodResolutionLogic.java <490:61 490:61>]
LOCAL_SYMBOL: MethodResolutionLogic.java<490:61> [MethodResolutionLogic.java <492:17 492:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<494:62> [MethodResolutionLogic.java <494:62 494:62>]
LOCAL_SYMBOL: MethodResolutionLogic.java<494:62> [MethodResolutionLogic.java <496:17 496:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<503:108> [MethodResolutionLogic.java <503:108 503:108>]
LOCAL_SYMBOL: MethodResolutionLogic.java<503:108> [MethodResolutionLogic.java <522:5 522:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<505:57> [MethodResolutionLogic.java <505:57 505:57>]
LOCAL_SYMBOL: MethodResolutionLogic.java<505:57> [MethodResolutionLogic.java <520:9 520:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<50:16> [MethodResolutionLogic.java <50:16 50:16>]
LOCAL_SYMBOL: MethodResolutionLogic.java<50:16> [MethodResolutionLogic.java <53:9 53:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<513:56> [MethodResolutionLogic.java <513:56 513:56>]
LOCAL_SYMBOL: MethodResolutionLogic.java<513:56> [MethodResolutionLogic.java <515:13 515:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<517:56> [MethodResolutionLogic.java <517:56 517:56>]
LOCAL_SYMBOL: MethodResolutionLogic.java<517:56> [MethodResolutionLogic.java <519:13 519:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<524:155> [MethodResolutionLogic.java <524:155 524:155>]
LOCAL_SYMBOL: MethodResolutionLogic.java<524:155> [MethodResolutionLogic.java <553:5 553:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<527:42> [MethodResolutionLogic.java <527:42 527:42>]
LOCAL_SYMBOL: MethodResolutionLogic.java<527:42> [MethodResolutionLogic.java <529:9 529:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<530:44> [MethodResolutionLogic.java <530:44 530:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<530:44> [MethodResolutionLogic.java <532:9 532:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<532:16> [MethodResolutionLogic.java <532:16 532:16>]
LOCAL_SYMBOL: MethodResolutionLogic.java<532:16> [MethodResolutionLogic.java <552:9 552:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<534:64> [MethodResolutionLogic.java <534:64 534:64>]
LOCAL_SYMBOL: MethodResolutionLogic.java<534:64> [MethodResolutionLogic.java <550:13 550:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<536:74> [MethodResolutionLogic.java <536:74 536:74>]
LOCAL_SYMBOL: MethodResolutionLogic.java<536:74> [MethodResolutionLogic.java <538:17 538:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<538:81> [MethodResolutionLogic.java <538:81 538:81>]
LOCAL_SYMBOL: MethodResolutionLogic.java<538:81> [MethodResolutionLogic.java <540:17 540:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<540:24> [MethodResolutionLogic.java <540:24 540:24>]
LOCAL_SYMBOL: MethodResolutionLogic.java<540:24> [MethodResolutionLogic.java <549:17 549:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<541:127> [MethodResolutionLogic.java <541:127 541:127>]
LOCAL_SYMBOL: MethodResolutionLogic.java<541:127> [MethodResolutionLogic.java <545:21 545:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<542:68> [MethodResolutionLogic.java <542:68 542:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<542:68> [MethodResolutionLogic.java <544:25 544:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<545:28> [MethodResolutionLogic.java <545:28 545:28>]
LOCAL_SYMBOL: MethodResolutionLogic.java<545:28> [MethodResolutionLogic.java <548:21 548:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<555:89> [MethodResolutionLogic.java <555:89 555:89>]
LOCAL_SYMBOL: MethodResolutionLogic.java<555:89> [MethodResolutionLogic.java <568:5 568:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<556:66> [MethodResolutionLogic.java <556:66 556:66>]
LOCAL_SYMBOL: MethodResolutionLogic.java<556:66> [MethodResolutionLogic.java <558:9 558:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<559:68> [MethodResolutionLogic.java <559:68 559:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<559:68> [MethodResolutionLogic.java <561:9 561:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<562:66> [MethodResolutionLogic.java <562:66 562:66>]
LOCAL_SYMBOL: MethodResolutionLogic.java<562:66> [MethodResolutionLogic.java <566:9 566:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<563:96> [MethodResolutionLogic.java <563:96 563:96>]
LOCAL_SYMBOL: MethodResolutionLogic.java<563:96> [MethodResolutionLogic.java <565:13 565:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<570:168> [MethodResolutionLogic.java <570:168 570:168>]
LOCAL_SYMBOL: MethodResolutionLogic.java<570:168> [MethodResolutionLogic.java <572:5 572:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<57:67> [MethodResolutionLogic.java <57:67 57:67>]
LOCAL_SYMBOL: MethodResolutionLogic.java<57:67> [MethodResolutionLogic.java <63:5 63:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<585:95> [MethodResolutionLogic.java <585:95 585:95>]
LOCAL_SYMBOL: MethodResolutionLogic.java<585:95> [MethodResolutionLogic.java <620:5 620:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<586:68> [MethodResolutionLogic.java <586:68 586:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<586:68> [MethodResolutionLogic.java <589:9 589:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<58:39> [MethodResolutionLogic.java <58:39 58:39>]
LOCAL_SYMBOL: MethodResolutionLogic.java<58:39> [MethodResolutionLogic.java <60:9 60:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<590:72> [MethodResolutionLogic.java <590:72 590:72>]
LOCAL_SYMBOL: MethodResolutionLogic.java<590:72> [MethodResolutionLogic.java <593:9 593:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<594:67> [MethodResolutionLogic.java <594:67 594:67>]
LOCAL_SYMBOL: MethodResolutionLogic.java<594:67> [MethodResolutionLogic.java <600:9 600:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<595:68> [MethodResolutionLogic.java <595:68 595:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<595:68> [MethodResolutionLogic.java <597:13 597:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<601:68> [MethodResolutionLogic.java <601:68 601:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<601:68> [MethodResolutionLogic.java <603:9 603:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<604:72> [MethodResolutionLogic.java <604:72 604:72>]
LOCAL_SYMBOL: MethodResolutionLogic.java<604:72> [MethodResolutionLogic.java <606:9 606:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<607:69> [MethodResolutionLogic.java <607:69 607:69>]
LOCAL_SYMBOL: MethodResolutionLogic.java<607:69> [MethodResolutionLogic.java <609:9 609:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<610:71> [MethodResolutionLogic.java <610:71 610:71>]
LOCAL_SYMBOL: MethodResolutionLogic.java<610:71> [MethodResolutionLogic.java <612:9 612:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<613:67> [MethodResolutionLogic.java <613:67 613:67>]
LOCAL_SYMBOL: MethodResolutionLogic.java<613:67> [MethodResolutionLogic.java <615:9 615:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<616:68> [MethodResolutionLogic.java <616:68 616:68>]
LOCAL_SYMBOL: MethodResolutionLogic.java<616:68> [MethodResolutionLogic.java <618:9 618:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<622:108> [MethodResolutionLogic.java <622:108 622:108>]
LOCAL_SYMBOL: MethodResolutionLogic.java<622:108> [MethodResolutionLogic.java <676:5 676:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<625:36> [MethodResolutionLogic.java <625:36 625:36>]
LOCAL_SYMBOL: MethodResolutionLogic.java<625:36> [MethodResolutionLogic.java <627:9 627:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<628:67> [MethodResolutionLogic.java <628:67 628:67>]
LOCAL_SYMBOL: MethodResolutionLogic.java<628:67> [MethodResolutionLogic.java <639:9 639:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<631:92> [MethodResolutionLogic.java <631:92 631:92>]
LOCAL_SYMBOL: MethodResolutionLogic.java<631:92> [MethodResolutionLogic.java <637:13 637:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<632:79> [MethodResolutionLogic.java <632:79 632:79>]
LOCAL_SYMBOL: MethodResolutionLogic.java<632:79> [MethodResolutionLogic.java <636:17 636:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<633:91> [MethodResolutionLogic.java <633:91 633:91>]
LOCAL_SYMBOL: MethodResolutionLogic.java<633:91> [MethodResolutionLogic.java <635:21 635:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<640:62> [MethodResolutionLogic.java <640:62 640:62>]
LOCAL_SYMBOL: MethodResolutionLogic.java<640:62> [MethodResolutionLogic.java <646:9 646:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<641:50> [MethodResolutionLogic.java <641:50 641:50>]
LOCAL_SYMBOL: MethodResolutionLogic.java<641:50> [MethodResolutionLogic.java <644:13 644:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<647:57> [MethodResolutionLogic.java <647:57 647:57>]
LOCAL_SYMBOL: MethodResolutionLogic.java<647:57> [MethodResolutionLogic.java <649:9 649:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<650:66> [MethodResolutionLogic.java <650:66 650:66>]
LOCAL_SYMBOL: MethodResolutionLogic.java<650:66> [MethodResolutionLogic.java <653:9 653:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<655:61> [MethodResolutionLogic.java <655:61 655:61>]
LOCAL_SYMBOL: MethodResolutionLogic.java<655:61> [MethodResolutionLogic.java <660:9 660:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<656:49> [MethodResolutionLogic.java <656:49 656:49>]
LOCAL_SYMBOL: MethodResolutionLogic.java<656:49> [MethodResolutionLogic.java <658:13 658:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<65:129> [MethodResolutionLogic.java <65:129 65:129>]
LOCAL_SYMBOL: MethodResolutionLogic.java<65:129> [MethodResolutionLogic.java <67:5 67:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<662:61> [MethodResolutionLogic.java <662:61 662:61>]
LOCAL_SYMBOL: MethodResolutionLogic.java<662:61> [MethodResolutionLogic.java <665:9 665:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<666:65> [MethodResolutionLogic.java <666:65 666:65>]
LOCAL_SYMBOL: MethodResolutionLogic.java<666:65> [MethodResolutionLogic.java <669:9 669:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<670:59> [MethodResolutionLogic.java <670:59 670:59>]
LOCAL_SYMBOL: MethodResolutionLogic.java<670:59> [MethodResolutionLogic.java <672:9 672:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<673:30> [MethodResolutionLogic.java <673:30 673:30>]
LOCAL_SYMBOL: MethodResolutionLogic.java<673:30> [MethodResolutionLogic.java <675:9 675:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<69:161> [MethodResolutionLogic.java <69:161 69:161>]
LOCAL_SYMBOL: MethodResolutionLogic.java<69:161> [MethodResolutionLogic.java <141:5 141:5>]
LOCAL_SYMBOL: MethodResolutionLogic.java<70:45> [MethodResolutionLogic.java <70:45 70:45>]
LOCAL_SYMBOL: MethodResolutionLogic.java<70:45> [MethodResolutionLogic.java <72:9 72:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<73:44> [MethodResolutionLogic.java <73:44 73:44>]
LOCAL_SYMBOL: MethodResolutionLogic.java<73:44> [MethodResolutionLogic.java <97:9 97:9>]
LOCAL_SYMBOL: MethodResolutionLogic.java<75:70> [MethodResolutionLogic.java <75:70 75:70>]
LOCAL_SYMBOL: MethodResolutionLogic.java<75:70> [MethodResolutionLogic.java <91:13 91:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<79:63> [MethodResolutionLogic.java <79:63 79:63>]
LOCAL_SYMBOL: MethodResolutionLogic.java<79:63> [MethodResolutionLogic.java <90:17 90:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<80:84> [MethodResolutionLogic.java <80:84 80:84>]
LOCAL_SYMBOL: MethodResolutionLogic.java<80:84> [MethodResolutionLogic.java <82:21 82:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<83:67> [MethodResolutionLogic.java <83:67 83:67>]
LOCAL_SYMBOL: MethodResolutionLogic.java<83:67> [MethodResolutionLogic.java <89:21 89:21>]
LOCAL_SYMBOL: MethodResolutionLogic.java<84:127> [MethodResolutionLogic.java <84:127 84:127>]
LOCAL_SYMBOL: MethodResolutionLogic.java<84:127> [MethodResolutionLogic.java <86:25 86:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<86:32> [MethodResolutionLogic.java <86:32 86:32>]
LOCAL_SYMBOL: MethodResolutionLogic.java<86:32> [MethodResolutionLogic.java <88:25 88:25>]
LOCAL_SYMBOL: MethodResolutionLogic.java<91:20> [MethodResolutionLogic.java <91:20 91:20>]
LOCAL_SYMBOL: MethodResolutionLogic.java<91:20> [MethodResolutionLogic.java <96:13 96:13>]
LOCAL_SYMBOL: MethodResolutionLogic.java<92:50> [MethodResolutionLogic.java <92:50 92:50>]
LOCAL_SYMBOL: MethodResolutionLogic.java<92:50> [MethodResolutionLogic.java <94:17 94:17>]
LOCAL_SYMBOL: MethodResolutionLogic.java<99:66> [MethodResolutionLogic.java <99:66 99:66>]
LOCAL_SYMBOL: MethodResolutionLogic.java<99:66> [MethodResolutionLogic.java <101:9 101:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeTransformer.transform<5> [MethodResolutionLogic.java <245:53 245:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.TypeTransformer.transform<5> [MethodResolutionLogic.java <245:83 245:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<0> [MethodResolutionLogic.java <555:52 555:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<0> [MethodResolutionLogic.java <556:14 556:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<0> [MethodResolutionLogic.java <559:13 559:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<0> [MethodResolutionLogic.java <562:29 562:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<0> [MethodResolutionLogic.java <563:18 563:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<1> [MethodResolutionLogic.java <555:82 555:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<1> [MethodResolutionLogic.java <556:48 556:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<1> [MethodResolutionLogic.java <559:47 559:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<1> [MethodResolutionLogic.java <563:65 563:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<2> [MethodResolutionLogic.java <562:18 562:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<2> [MethodResolutionLogic.java <562:25 562:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<2> [MethodResolutionLogic.java <562:61 562:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<2> [MethodResolutionLogic.java <563:55 563:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.areOverride<2> [MethodResolutionLogic.java <563:91 563:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType<0> [MethodResolutionLogic.java <57:51 57:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType<0> [MethodResolutionLogic.java <58:13 58:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findCommonType<0> [MethodResolutionLogic.java <62:16 62:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<0> [MethodResolutionLogic.java <373:97 373:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<0> [MethodResolutionLogic.java <374:69 374:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<0> [MethodResolutionLogic.java <378:35 378:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<0> [MethodResolutionLogic.java <381:97 381:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<0> [MethodResolutionLogic.java <382:81 382:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<10> [MethodResolutionLogic.java <396:36 396:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<10> [MethodResolutionLogic.java <400:19 400:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<10> [MethodResolutionLogic.java <404:18 404:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<10> [MethodResolutionLogic.java <404:48 404:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<10> [MethodResolutionLogic.java <405:43 405:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<11> [MethodResolutionLogic.java <397:26 397:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<11> [MethodResolutionLogic.java <399:39 399:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<13> [MethodResolutionLogic.java <398:38 398:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<13> [MethodResolutionLogic.java <399:21 399:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<13> [MethodResolutionLogic.java <400:40 400:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <412:31 412:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <417:36 417:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <419:50 419:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <421:21 421:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <423:25 423:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <432:33 432:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <434:19 434:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <436:120 436:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<15> [MethodResolutionLogic.java <440:43 440:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <413:31 413:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <416:17 416:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <417:54 417:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <419:43 419:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <421:40 421:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <423:84 423:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <433:34 433:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <434:38 434:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<16> [MethodResolutionLogic.java <436:146 436:150>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<17> [MethodResolutionLogic.java <414:21 414:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<17> [MethodResolutionLogic.java <418:21 418:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<17> [MethodResolutionLogic.java <420:21 420:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<17> [MethodResolutionLogic.java <424:25 424:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<17> [MethodResolutionLogic.java <430:17 430:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<18> [MethodResolutionLogic.java <415:22 415:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<18> [MethodResolutionLogic.java <415:29 415:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<18> [MethodResolutionLogic.java <415:59 415:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<18> [MethodResolutionLogic.java <416:47 416:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<1> [MethodResolutionLogic.java <373:113 373:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<1> [MethodResolutionLogic.java <374:78 374:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<1> [MethodResolutionLogic.java <378:44 378:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<1> [MethodResolutionLogic.java <381:113 381:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<1> [MethodResolutionLogic.java <382:129 382:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <373:130 373:143>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <374:84 374:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <378:50 378:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <381:130 381:143>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <382:135 382:148>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <389:31 389:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <390:17 390:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <417:61 417:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <419:68 419:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <432:51 432:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<2> [MethodResolutionLogic.java <433:41 433:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <373:157 373:166>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <374:100 374:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <378:66 378:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <381:157 381:166>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <382:151 382:160>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <417:77 417:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<3> [MethodResolutionLogic.java <419:84 419:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<4> [MethodResolutionLogic.java <374:44 374:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<4> [MethodResolutionLogic.java <375:13 375:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<4> [MethodResolutionLogic.java <376:20 376:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<4> [MethodResolutionLogic.java <381:177 381:193>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<4> [MethodResolutionLogic.java <382:163 382:179>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <382:33 382:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <383:13 383:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <387:13 387:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <398:48 398:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <404:74 404:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <405:15 405:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <409:13 409:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <410:43 410:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <412:50 412:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <415:33 415:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<5> [MethodResolutionLogic.java <416:25 416:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<8> [MethodResolutionLogic.java <388:25 388:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<8> [MethodResolutionLogic.java <391:15 391:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<8> [MethodResolutionLogic.java <394:16 394:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<8> [MethodResolutionLogic.java <397:42 397:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<9> [MethodResolutionLogic.java <389:20 389:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<9> [MethodResolutionLogic.java <389:27 389:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<9> [MethodResolutionLogic.java <389:54 389:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<9> [MethodResolutionLogic.java <390:36 390:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable<9> [MethodResolutionLogic.java <391:36 391:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<0> [MethodResolutionLogic.java <524:83 524:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<0> [MethodResolutionLogic.java <525:47 525:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<1> [MethodResolutionLogic.java <524:99 524:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<1> [MethodResolutionLogic.java <525:94 525:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<2> [MethodResolutionLogic.java <524:116 524:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<2> [MethodResolutionLogic.java <525:100 525:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<3> [MethodResolutionLogic.java <524:143 524:152>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<3> [MethodResolutionLogic.java <525:116 525:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<3> [MethodResolutionLogic.java <536:61 536:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<3> [MethodResolutionLogic.java <538:68 538:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <525:27 525:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <527:13 527:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <530:13 530:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <531:32 531:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <533:44 533:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <534:33 534:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<4> [MethodResolutionLogic.java <535:37 535:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <533:25 533:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <536:36 536:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <538:50 538:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <539:21 539:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <541:25 541:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <542:42 542:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <543:130 543:145>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <543:189 543:204>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<7> [MethodResolutionLogic.java <551:32 551:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<8> [MethodResolutionLogic.java <534:22 534:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<8> [MethodResolutionLogic.java <534:29 534:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<8> [MethodResolutionLogic.java <534:59 534:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<8> [MethodResolutionLogic.java <535:59 535:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <535:29 535:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <536:54 536:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <538:43 538:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <539:40 539:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <541:84 541:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <542:60 542:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage<9> [MethodResolutionLogic.java <543:156 543:160>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare<2> [MethodResolutionLogic.java <345:50 345:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare<2> [MethodResolutionLogic.java <346:21 346:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare<2> [MethodResolutionLogic.java <347:56 347:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare<3> [MethodResolutionLogic.java <345:72 345:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare<3> [MethodResolutionLogic.java <346:66 346:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates.anonymous class (MethodResolutionLogic.java<343:103>).compare<3> [MethodResolutionLogic.java <347:115 347:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<0> [MethodResolutionLogic.java <342:96 342:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<0> [MethodResolutionLogic.java <353:18 353:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<0> [MethodResolutionLogic.java <356:37 356:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<1> [MethodResolutionLogic.java <343:32 343:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<1> [MethodResolutionLogic.java <353:9 353:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<4> [MethodResolutionLogic.java <354:33 354:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<4> [MethodResolutionLogic.java <360:17 360:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<4> [MethodResolutionLogic.java <363:16 363:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<5> [MethodResolutionLogic.java <355:21 355:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<5> [MethodResolutionLogic.java <358:18 358:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<5> [MethodResolutionLogic.java <359:17 359:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<6> [MethodResolutionLogic.java <356:32 356:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<6> [MethodResolutionLogic.java <357:32 357:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<6> [MethodResolutionLogic.java <360:25 360:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<8> [MethodResolutionLogic.java <357:20 357:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<8> [MethodResolutionLogic.java <358:42 358:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.getMethodsWithoutDuplicates<8> [MethodResolutionLogic.java <359:36 359:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<0> [MethodResolutionLogic.java <44:67 44:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<0> [MethodResolutionLogic.java <45:42 45:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<0> [MethodResolutionLogic.java <46:37 46:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<0> [MethodResolutionLogic.java <46:75 46:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<1> [MethodResolutionLogic.java <44:87 44:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<1> [MethodResolutionLogic.java <45:68 45:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<1> [MethodResolutionLogic.java <46:60 46:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<2> [MethodResolutionLogic.java <44:107 44:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<2> [MethodResolutionLogic.java <49:21 49:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<3> [MethodResolutionLogic.java <45:20 45:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<3> [MethodResolutionLogic.java <49:13 49:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<3> [MethodResolutionLogic.java <52:13 52:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<3> [MethodResolutionLogic.java <54:16 54:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<4> [MethodResolutionLogic.java <46:20 46:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<4> [MethodResolutionLogic.java <47:13 47:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<4> [MethodResolutionLogic.java <51:49 51:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<5> [MethodResolutionLogic.java <51:18 51:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.groupVariadicParamValues<5> [MethodResolutionLogic.java <52:35 52:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <622:41 622:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <625:13 625:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <628:13 628:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <629:43 629:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <640:13 640:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <642:28 642:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <647:13 647:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <650:13 650:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <651:52 651:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <655:13 655:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <656:17 656:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <657:28 657:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <662:13 662:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <663:52 663:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <666:13 666:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <667:52 667:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <670:13 670:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<0> [MethodResolutionLogic.java <673:13 673:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <622:54 622:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <625:27 625:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <628:41 628:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <630:43 630:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <640:41 640:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <641:17 641:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <642:36 642:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <647:36 647:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <650:41 650:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <651:26 651:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <655:36 655:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <657:66 657:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <662:36 662:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <663:26 663:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <666:40 666:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <667:26 667:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<1> [MethodResolutionLogic.java <670:37 670:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <622:98 622:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <634:126 634:133>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <642:74 642:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <651:13 651:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <657:74 657:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <663:13 663:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<2> [MethodResolutionLogic.java <667:13 667:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<3> [MethodResolutionLogic.java <629:27 629:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<3> [MethodResolutionLogic.java <631:17 631:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<3> [MethodResolutionLogic.java <632:22 632:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<3> [MethodResolutionLogic.java <633:41 633:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<3> [MethodResolutionLogic.java <634:36 634:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<4> [MethodResolutionLogic.java <630:27 630:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<4> [MethodResolutionLogic.java <631:57 631:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<4> [MethodResolutionLogic.java <632:52 632:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<4> [MethodResolutionLogic.java <634:81 634:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<5> [MethodResolutionLogic.java <633:30 633:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<5> [MethodResolutionLogic.java <633:37 633:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<5> [MethodResolutionLogic.java <633:86 633:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<5> [MethodResolutionLogic.java <634:77 634:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.inferTypes<5> [MethodResolutionLogic.java <634:122 634:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <65:58 65:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <66:29 66:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <69:59 69:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <70:14 70:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <73:13 73:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <74:23 74:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <75:17 75:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <77:37 77:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <80:56 80:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <87:92 87:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <95:80 95:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <99:13 99:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <104:29 104:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <105:33 105:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <112:22 112:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <120:65 120:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <121:39 121:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <131:25 131:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <131:63 131:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <264:52 264:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <265:14 265:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <269:13 269:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <272:29 272:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <273:33 273:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <275:46 275:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <278:61 278:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <279:35 279:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <286:33 286:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<0> [MethodResolutionLogic.java <287:50 287:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<10> [MethodResolutionLogic.java <102:27 102:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<10> [MethodResolutionLogic.java <108:17 108:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<10> [MethodResolutionLogic.java <117:25 117:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<10> [MethodResolutionLogic.java <285:49 285:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<10> [MethodResolutionLogic.java <292:66 292:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<10> [MethodResolutionLogic.java <295:68 295:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <103:17 103:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <128:25 128:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <140:42 140:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <286:22 286:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <286:29 286:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <286:64 286:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<11> [MethodResolutionLogic.java <292:47 292:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <104:18 104:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <104:25 104:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <104:57 104:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <105:49 105:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <106:50 106:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <112:38 112:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <131:58 131:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <287:38 287:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <288:38 288:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<12> [MethodResolutionLogic.java <289:21 289:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <105:18 105:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <107:18 107:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <107:53 107:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <107:84 107:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <108:39 108:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <111:55 111:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <112:71 112:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <113:53 113:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <115:25 115:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <123:21 123:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <123:53 123:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <126:22 126:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <127:78 127:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <132:43 132:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <288:22 288:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <290:21 290:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <290:37 290:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<13> [MethodResolutionLogic.java <292:51 292:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <106:18 106:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <108:81 108:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <111:83 111:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <112:100 112:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <113:87 113:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <116:25 116:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <126:50 126:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <127:25 127:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <132:72 132:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <295:60 295:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <296:47 296:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<14> [MethodResolutionLogic.java <297:96 297:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<15> [MethodResolutionLogic.java <111:21 111:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<15> [MethodResolutionLogic.java <113:18 113:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<15> [MethodResolutionLogic.java <114:17 114:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<15> [MethodResolutionLogic.java <119:18 119:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<16> [MethodResolutionLogic.java <120:48 120:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<16> [MethodResolutionLogic.java <121:17 121:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<16> [MethodResolutionLogic.java <122:52 122:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<16> [MethodResolutionLogic.java <296:42 296:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<16> [MethodResolutionLogic.java <297:92 297:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <122:47 122:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <123:67 123:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <300:43 300:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <301:21 301:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <303:70 303:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <304:28 304:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <305:60 305:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <308:74 308:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<17> [MethodResolutionLogic.java <311:74 311:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<19> [MethodResolutionLogic.java <305:52 305:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<19> [MethodResolutionLogic.java <306:25 306:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<19> [MethodResolutionLogic.java <308:100 308:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<19> [MethodResolutionLogic.java <311:98 311:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<1> [MethodResolutionLogic.java <65:73 65:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<1> [MethodResolutionLogic.java <66:37 66:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<1> [MethodResolutionLogic.java <69:74 69:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<1> [MethodResolutionLogic.java <70:38 70:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<1> [MethodResolutionLogic.java <264:67 264:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<1> [MethodResolutionLogic.java <265:38 265:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <317:18 317:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <320:21 320:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <320:37 320:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <324:25 324:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <324:41 324:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <326:25 326:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <326:41 326:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<20> [MethodResolutionLogic.java <333:25 333:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <318:43 318:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <319:21 319:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <320:72 320:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <321:28 321:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <322:60 322:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <324:76 324:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<21> [MethodResolutionLogic.java <326:76 326:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<23> [MethodResolutionLogic.java <322:52 322:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<23> [MethodResolutionLogic.java <323:25 323:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<23> [MethodResolutionLogic.java <324:80 324:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <65:90 65:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <66:43 66:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <69:91 69:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <75:47 75:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <78:35 78:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <85:29 85:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <87:29 87:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <87:71 87:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <92:27 92:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <95:17 95:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <95:59 95:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <99:43 99:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <106:31 106:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <264:84 264:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <269:37 269:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <276:31 276:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<2> [MethodResolutionLogic.java <292:28 292:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <65:117 65:126>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <66:59 66:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <69:118 69:127>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <81:75 81:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <123:71 123:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <264:111 264:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <301:34 301:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <303:118 303:127>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <303:173 303:182>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <304:41 304:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <305:73 305:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <319:34 319:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <320:98 320:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <320:153 320:162>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <321:41 321:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <322:73 322:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <326:102 326:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<3> [MethodResolutionLogic.java <326:157 326:166>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <69:138 69:158>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <127:52 127:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <140:17 140:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <272:18 272:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <272:25 272:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <272:51 272:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <273:53 273:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <275:66 275:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <276:50 276:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<4> [MethodResolutionLogic.java <287:83 287:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <74:17 74:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <78:54 78:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <85:48 85:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <87:87 87:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <92:21 92:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <95:75 95:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <273:18 273:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <274:53 274:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <281:17 281:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <303:21 303:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <303:36 303:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <308:25 308:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <308:40 308:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <311:25 311:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <311:40 311:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<5> [MethodResolutionLogic.java <332:18 332:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <77:22 77:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <79:22 79:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <81:25 81:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <81:57 81:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <83:26 83:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <84:53 84:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <274:18 274:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <317:34 317:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<6> [MethodResolutionLogic.java <335:25 335:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <78:22 78:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <79:50 79:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <83:54 83:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <84:29 84:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <84:81 84:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <85:53 85:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <275:18 275:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <297:17 297:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <297:45 297:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<7> [MethodResolutionLogic.java <334:25 334:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <80:51 80:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <81:71 81:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <276:18 276:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <281:48 281:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <332:46 332:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <333:54 333:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <334:66 334:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<8> [MethodResolutionLogic.java <335:73 335:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<9> [MethodResolutionLogic.java <278:44 278:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<9> [MethodResolutionLogic.java <279:13 279:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<9> [MethodResolutionLogic.java <300:48 300:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isApplicable<9> [MethodResolutionLogic.java <318:48 318:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <143:64 143:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <145:13 145:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <146:52 146:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <147:20 147:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <148:35 148:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <151:53 151:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <155:73 155:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <157:46 157:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <158:65 158:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<0> [MethodResolutionLogic.java <162:66 162:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <143:79 143:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <145:43 145:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <146:80 146:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <148:73 148:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <151:100 151:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <155:97 155:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <157:13 157:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <158:75 158:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<1> [MethodResolutionLogic.java <160:45 160:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<2> [MethodResolutionLogic.java <144:77 144:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<2> [MethodResolutionLogic.java <146:106 146:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<2> [MethodResolutionLogic.java <148:13 148:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<2> [MethodResolutionLogic.java <156:77 156:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<2> [MethodResolutionLogic.java <158:83 158:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<2> [MethodResolutionLogic.java <162:86 162:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<3> [MethodResolutionLogic.java <160:33 160:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<3> [MethodResolutionLogic.java <161:43 161:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<4> [MethodResolutionLogic.java <161:32 161:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParameters<4> [MethodResolutionLogic.java <162:76 162:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<0> [MethodResolutionLogic.java <170:87 170:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<0> [MethodResolutionLogic.java <173:14 173:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<0> [MethodResolutionLogic.java <176:13 176:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<0> [MethodResolutionLogic.java <180:29 180:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<0> [MethodResolutionLogic.java <181:34 181:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<1> [MethodResolutionLogic.java <170:111 170:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<1> [MethodResolutionLogic.java <173:49 173:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<1> [MethodResolutionLogic.java <176:55 176:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<1> [MethodResolutionLogic.java <182:32 182:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<1> [MethodResolutionLogic.java <215:105 215:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <171:91 171:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <190:77 190:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <196:25 196:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <197:49 197:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <201:29 201:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <206:25 206:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<2> [MethodResolutionLogic.java <215:113 215:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<3> [MethodResolutionLogic.java <180:18 180:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<3> [MethodResolutionLogic.java <180:25 180:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<3> [MethodResolutionLogic.java <180:69 180:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<3> [MethodResolutionLogic.java <181:70 181:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<3> [MethodResolutionLogic.java <182:66 182:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <181:18 181:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <186:17 186:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <187:36 187:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <193:17 193:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <194:44 194:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <209:24 209:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <210:22 210:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <213:24 213:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <214:21 214:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <215:60 215:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<4> [MethodResolutionLogic.java <220:57 220:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <182:18 182:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <186:52 186:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <188:36 188:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <195:22 195:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <195:55 195:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <198:61 198:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <200:36 200:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <201:70 201:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <206:66 206:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<5> [MethodResolutionLogic.java <210:43 210:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<6> [MethodResolutionLogic.java <187:31 187:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<6> [MethodResolutionLogic.java <190:69 190:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<7> [MethodResolutionLogic.java <188:31 188:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<7> [MethodResolutionLogic.java <190:73 190:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<8> [MethodResolutionLogic.java <194:24 194:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<8> [MethodResolutionLogic.java <195:102 195:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<8> [MethodResolutionLogic.java <196:55 196:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<8> [MethodResolutionLogic.java <197:71 197:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<8> [MethodResolutionLogic.java <201:51 201:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<8> [MethodResolutionLogic.java <206:47 206:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<9> [MethodResolutionLogic.java <197:30 197:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<9> [MethodResolutionLogic.java <198:29 198:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isAssignableMatchTypeParametersMatchingQName<9> [MethodResolutionLogic.java <200:63 200:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<0> [MethodResolutionLogic.java <444:65 444:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<0> [MethodResolutionLogic.java <445:27 445:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<0> [MethodResolutionLogic.java <446:14 446:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<1> [MethodResolutionLogic.java <444:84 444:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<1> [MethodResolutionLogic.java <446:50 446:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<2> [MethodResolutionLogic.java <445:16 445:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<2> [MethodResolutionLogic.java <445:23 445:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<2> [MethodResolutionLogic.java <445:55 445:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<2> [MethodResolutionLogic.java <446:30 446:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isExactMatch<2> [MethodResolutionLogic.java <446:69 446:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <453:61 453:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <455:13 455:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <458:13 458:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <461:29 461:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <462:24 462:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <477:17 477:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <487:18 487:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <503:55 503:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <505:29 505:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<0> [MethodResolutionLogic.java <506:24 506:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <453:88 453:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <455:43 455:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <458:43 458:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <463:24 463:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <477:52 477:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <487:52 487:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <503:76 503:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<1> [MethodResolutionLogic.java <507:24 507:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <453:108 453:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <475:29 475:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <479:21 479:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <483:22 483:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <490:21 490:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <494:22 494:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<2> [MethodResolutionLogic.java <503:96 503:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<3> [MethodResolutionLogic.java <453:134 453:143>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<3> [MethodResolutionLogic.java <504:17 504:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<3> [MethodResolutionLogic.java <514:17 514:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<3> [MethodResolutionLogic.java <521:16 521:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <454:17 454:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <466:17 466:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <474:14 474:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <500:16 500:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <505:18 505:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <505:25 505:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <505:52 505:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <506:45 506:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<4> [MethodResolutionLogic.java <507:45 507:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <461:18 461:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <461:25 461:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <461:58 461:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <462:41 462:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <463:41 463:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <506:18 506:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <509:40 509:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<5> [MethodResolutionLogic.java <510:59 510:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <462:18 462:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <465:36 465:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <465:45 465:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <469:17 469:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <469:64 469:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <507:18 507:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <509:59 509:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<6> [MethodResolutionLogic.java <510:40 510:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <463:18 463:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <465:17 465:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <465:64 465:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <469:36 469:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <469:45 469:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <509:21 509:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <513:38 513:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<7> [MethodResolutionLogic.java <517:17 517:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <475:17 475:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <479:39 479:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <483:40 483:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <490:39 490:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <494:40 494:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <510:21 510:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <513:17 513:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.isMoreSpecific<8> [MethodResolutionLogic.java <517:38 517:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <226:46 226:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <227:13 227:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <228:17 228:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <238:20 238:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <239:20 239:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <240:20 240:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <241:20 241:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <242:51 242:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <243:20 243:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <244:36 244:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <247:20 247:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <248:17 248:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <258:20 258:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <260:68 260:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<0> [MethodResolutionLogic.java <260:104 260:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <226:77 226:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <228:40 228:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <229:63 229:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <242:90 242:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <245:94 245:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <248:40 248:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <249:63 249:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<1> [MethodResolutionLogic.java <260:88 260:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <226:92 226:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <229:76 229:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <235:50 235:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <235:105 235:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <242:94 242:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <245:98 245:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <249:76 249:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <255:50 255:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<2> [MethodResolutionLogic.java <255:105 255:114>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<3> [MethodResolutionLogic.java <229:54 229:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<3> [MethodResolutionLogic.java <230:21 230:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<3> [MethodResolutionLogic.java <232:28 232:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<3> [MethodResolutionLogic.java <233:28 233:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<4> [MethodResolutionLogic.java <244:27 244:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<4> [MethodResolutionLogic.java <245:13 245:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<4> [MethodResolutionLogic.java <245:22 245:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<4> [MethodResolutionLogic.java <246:20 246:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<7> [MethodResolutionLogic.java <249:54 249:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<7> [MethodResolutionLogic.java <250:21 250:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<7> [MethodResolutionLogic.java <252:28 252:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam<7> [MethodResolutionLogic.java <253:28 253:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <570:88 570:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <571:34 571:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <583:88 583:102>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <586:13 586:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <587:57 587:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <590:13 590:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <591:61 591:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <594:13 594:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <596:118 596:132>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <598:56 598:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <601:13 601:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <602:50 602:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <604:13 604:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <605:52 605:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <607:15 607:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <608:49 608:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <610:13 610:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <611:53 611:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <613:13 613:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <614:47 614:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <616:15 616:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <617:48 617:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<0> [MethodResolutionLogic.java <619:49 619:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <570:112 570:115>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <571:51 571:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <584:79 584:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <588:36 588:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <592:36 592:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <595:17 595:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <599:36 599:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <602:79 602:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <605:81 605:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <608:78 608:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <611:82 611:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <614:76 614:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<1> [MethodResolutionLogic.java <617:77 617:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <570:129 570:142>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <571:57 571:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <584:96 584:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <588:42 588:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <592:42 592:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <595:42 595:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <599:42 599:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <602:85 602:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <605:87 605:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <608:84 608:97>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <611:88 611:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <614:82 614:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<2> [MethodResolutionLogic.java <617:83 617:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <570:156 570:165>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <571:80 571:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <584:120 584:129>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <588:58 588:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <592:58 592:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <599:58 599:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <602:101 602:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <605:103 605:112>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <608:100 608:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <611:104 611:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <614:98 614:107>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<3> [MethodResolutionLogic.java <617:99 617:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<4> [MethodResolutionLogic.java <585:83 585:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<4> [MethodResolutionLogic.java <588:70 588:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<4> [MethodResolutionLogic.java <592:70 592:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<4> [MethodResolutionLogic.java <596:135 596:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<4> [MethodResolutionLogic.java <599:70 599:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<5> [MethodResolutionLogic.java <587:21 587:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<5> [MethodResolutionLogic.java <588:20 588:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<6> [MethodResolutionLogic.java <591:21 591:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<6> [MethodResolutionLogic.java <592:20 592:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<7> [MethodResolutionLogic.java <598:21 598:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType<7> [MethodResolutionLogic.java <599:20 599:22>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [MethodResolutionLogic.java <525:72 525:72>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [MethodResolutionLogic.java <525:91 525:91>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<6> [MethodResolutionLogic.java <382:107 382:107>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<6> [MethodResolutionLogic.java <382:126 382:126>]
COMMENT: comment [MethodResolutionLogic.java <1:1 15:3>]
COMMENT: comment [MethodResolutionLogic.java <39:1 41:3>]
COMMENT: comment [MethodResolutionLogic.java <48:13 48:101>]
COMMENT: comment [MethodResolutionLogic.java <61:9 61:39>]
COMMENT: comment [MethodResolutionLogic.java <76:17 76:77>]
COMMENT: comment [MethodResolutionLogic.java <90:19 90:65>]
COMMENT: comment [MethodResolutionLogic.java <178:13 178:26>]
COMMENT: comment [MethodResolutionLogic.java <184:13 184:84>]
COMMENT: comment [MethodResolutionLogic.java <185:13 185:68>]
COMMENT: comment [MethodResolutionLogic.java <217:17 217:42>]
COMMENT: comment [MethodResolutionLogic.java <268:9 268:32>]
COMMENT: comment [MethodResolutionLogic.java <302:21 302:180>]
COMMENT: comment [MethodResolutionLogic.java <307:25 307:106>]
COMMENT: comment [MethodResolutionLogic.java <310:25 310:184>]
COMMENT: comment [MethodResolutionLogic.java <366:5 372:7>]
COMMENT: comment [MethodResolutionLogic.java <395:13 395:83>]
COMMENT: comment [MethodResolutionLogic.java <426:25 426:112>]
COMMENT: comment [MethodResolutionLogic.java <431:15 431:56>]
COMMENT: comment [MethodResolutionLogic.java <464:13 464:33>]
COMMENT: comment [MethodResolutionLogic.java <468:13 468:33>]
COMMENT: comment [MethodResolutionLogic.java <478:17 478:76>]
COMMENT: comment [MethodResolutionLogic.java <488:17 488:79>]
COMMENT: comment [MethodResolutionLogic.java <489:17 489:42>]
COMMENT: comment [MethodResolutionLogic.java <512:13 512:33>]
COMMENT: comment [MethodResolutionLogic.java <516:13 516:33>]
COMMENT: comment [MethodResolutionLogic.java <537:21 537:36>]
COMMENT: comment [MethodResolutionLogic.java <546:25 546:112>]
COMMENT: comment [MethodResolutionLogic.java <547:25 547:68>]
COMMENT: comment [MethodResolutionLogic.java <574:9 582:11>]
