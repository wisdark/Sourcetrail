FILE: JavaParserAnonymousClassDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations [JavaParserAnonymousClassDeclaration.java <1:60 1:71>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [JavaParserAnonymousClassDeclaration.java <1:44 1:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [JavaParserAnonymousClassDeclaration.java <6:43 6:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [JavaParserAnonymousClassDeclaration.java <7:43 7:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <1:31 1:42>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <3:37 3:48>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <6:30 6:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <7:30 7:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <8:30 8:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <9:30 9:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <10:30 10:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <11:30 11:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <12:30 12:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <13:30 13:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <14:30 14:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <15:30 15:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <16:30 16:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <17:30 17:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <18:30 18:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserAnonymousClassDeclaration.java <19:30 19:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <1:20 1:29>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <3:26 3:35>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <4:19 4:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <5:19 5:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <6:19 6:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <7:19 7:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <8:19 8:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <9:19 9:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <10:19 10:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <11:19 11:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <12:19 12:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <13:19 13:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <14:19 14:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <15:19 15:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <16:19 16:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <17:19 17:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <18:19 18:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <86:38 86:47>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <111:38 111:47>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <139:38 139:47>]
QUALIFIER: com.github.javaparser [JavaParserAnonymousClassDeclaration.java <183:38 183:47>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <1:13 1:18>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <3:19 3:24>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <4:12 4:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <5:12 5:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <6:12 6:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <7:12 7:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <8:12 8:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <9:12 9:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <10:12 10:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <11:12 11:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <12:12 12:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <13:12 13:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <14:12 14:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <15:12 15:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <16:12 16:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <17:12 17:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <18:12 18:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <19:12 19:17>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <86:31 86:36>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <111:31 111:36>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <139:31 139:36>]
QUALIFIER: com.github [JavaParserAnonymousClassDeclaration.java <183:31 183:36>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <1:9 1:11>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <3:15 3:17>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <4:8 4:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <5:8 5:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <6:8 6:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <7:8 7:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <8:8 8:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <9:8 9:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <10:8 10:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <11:8 11:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <12:8 12:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <13:8 13:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <14:8 14:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <15:8 15:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <16:8 16:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <17:8 17:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <18:8 18:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <19:8 19:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <20:8 20:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <21:8 21:10>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <86:27 86:29>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <111:27 111:29>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <139:27 139:29>]
QUALIFIER: com [JavaParserAnonymousClassDeclaration.java <183:27 183:29>]
SYMBOL_PACKAGE: com
SYMBOL_METHOD: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparser.Navigator [JavaParserAnonymousClassDeclaration.java <3:61 3:69>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparser [JavaParserAnonymousClassDeclaration.java <3:50 3:59>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser
QUALIFIER: com.github.javaparser.ast [JavaParserAnonymousClassDeclaration.java <4:30 4:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserAnonymousClassDeclaration.java <5:30 5:32>]
QUALIFIER: com.github.javaparser.ast [JavaParserAnonymousClassDeclaration.java <86:49 86:51>]
QUALIFIER: com.github.javaparser.ast [JavaParserAnonymousClassDeclaration.java <111:49 111:51>]
QUALIFIER: com.github.javaparser.ast [JavaParserAnonymousClassDeclaration.java <139:49 139:51>]
QUALIFIER: com.github.javaparser.ast [JavaParserAnonymousClassDeclaration.java <183:49 183:51>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.expr [JavaParserAnonymousClassDeclaration.java <5:34 5:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserAnonymousClassDeclaration.java <185:32 185:47>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserAnonymousClassDeclaration.java <44:9 44:25>]
QUALIFIER: com.github.javaparser.symbolsolver.logic [JavaParserAnonymousClassDeclaration.java <8:43 8:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.AccessLevel [JavaParserAnonymousClassDeclaration.java <94:12 94:22>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <9:49 9:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <10:49 10:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <11:49 11:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <12:49 12:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <13:49 13:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <14:49 14:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [JavaParserAnonymousClassDeclaration.java <15:49 15:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <9:43 9:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <10:43 10:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <11:43 11:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <12:43 12:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <13:43 13:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <14:43 14:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <15:43 15:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <16:43 16:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <17:43 17:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <18:43 18:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserAnonymousClassDeclaration.java <19:43 19:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [JavaParserAnonymousClassDeclaration.java <16:49 16:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [JavaParserAnonymousClassDeclaration.java <17:49 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [JavaParserAnonymousClassDeclaration.java <18:49 18:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [JavaParserAnonymousClassDeclaration.java <19:49 19:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.google.common.collect [JavaParserAnonymousClassDeclaration.java <20:26 20:32>]
QUALIFIER: com.google.common.collect [JavaParserAnonymousClassDeclaration.java <21:26 21:32>]
SYMBOL_PACKAGE: com.google.common.collect
QUALIFIER: com.google.common [JavaParserAnonymousClassDeclaration.java <20:19 20:24>]
QUALIFIER: com.google.common [JavaParserAnonymousClassDeclaration.java <21:19 21:24>]
SYMBOL_PACKAGE: com.google.common
QUALIFIER: com.google [JavaParserAnonymousClassDeclaration.java <20:12 20:17>]
QUALIFIER: com.google [JavaParserAnonymousClassDeclaration.java <21:12 21:17>]
SYMBOL_PACKAGE: com.google
QUALIFIER: com.google.common.collect.Lists [JavaParserAnonymousClassDeclaration.java <196:12 196:16>]
QUALIFIER: java.util [JavaParserAnonymousClassDeclaration.java <23:13 23:16>]
QUALIFIER: java.util [JavaParserAnonymousClassDeclaration.java <24:13 24:16>]
QUALIFIER: java.util [JavaParserAnonymousClassDeclaration.java <25:13 25:16>]
QUALIFIER: java.util [JavaParserAnonymousClassDeclaration.java <26:13 26:16>]
QUALIFIER: java.util [JavaParserAnonymousClassDeclaration.java <27:13 27:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [JavaParserAnonymousClassDeclaration.java <23:8 23:11>]
QUALIFIER: java [JavaParserAnonymousClassDeclaration.java <24:8 24:11>]
QUALIFIER: java [JavaParserAnonymousClassDeclaration.java <25:8 25:11>]
QUALIFIER: java [JavaParserAnonymousClassDeclaration.java <26:8 26:11>]
QUALIFIER: java [JavaParserAnonymousClassDeclaration.java <27:8 27:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.UUID [JavaParserAnonymousClassDeclaration.java <37:46 37:49>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <60:18 60:27>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <80:22 80:31>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <89:22 89:31>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <117:22 117:31>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <125:33 125:42>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <142:22 142:31>]
QUALIFIER: java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <186:22 186:31>]
QUALIFIER: java.util.stream [JavaParserAnonymousClassDeclaration.java <27:18 27:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [JavaParserAnonymousClassDeclaration.java <41:5 41:8>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [JavaParserAnonymousClassDeclaration.java <42:5 42:8>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [JavaParserAnonymousClassDeclaration.java <201:85 201:88>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [JavaParserAnonymousClassDeclaration.java <32:1 <32:14 32:48> 203:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <34:28 34:37>]
SYMBOL_FIELD: private com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode [JavaParserAnonymousClassDeclaration.java <35:36 35:46>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration [JavaParserAnonymousClassDeclaration.java <36:33 36:52>]
SYMBOL_FIELD: private java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.name [JavaParserAnonymousClassDeclaration.java <37:24 37:27>]
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: static java.util.UUID java.util.UUID.randomUUID()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <39:3 <39:3 <39:10 39:44> 40:67> 47:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
SYMBOL_METHOD: com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.expr.ObjectCreationExpr.getType()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperTypeDeclaration() [JavaParserAnonymousClassDeclaration.java <49:3 <49:3 <49:26 49:48> 49:50> 51:3>]
SYMBOL_METHOD: public java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) [JavaParserAnonymousClassDeclaration.java <53:3 <53:3 <53:35 53:51> 53:79> 61:3>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T [JavaParserAnonymousClassDeclaration.java <53:11 53:11>]
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>>> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody()
SYMBOL_METHOD: boolean java.lang.Class<T>.isAssignableFrom(java.lang.Class<?>)
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() [JavaParserAnonymousClassDeclaration.java <63:3 <63:3 <64:27 64:32> 64:34> 66:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() [JavaParserAnonymousClassDeclaration.java <68:3 <68:3 <69:24 69:36> 69:38> 71:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() [JavaParserAnonymousClassDeclaration.java <73:3 <73:3 <74:30 74:42> 74:44> 81:3>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getInterfaces()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() [JavaParserAnonymousClassDeclaration.java <83:3 <83:3 <84:39 84:53> 84:55> 90:3>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors()
QUALIFIER: com.github.javaparser.ast.body [JavaParserAnonymousClassDeclaration.java <86:53 86:56>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserAnonymousClassDeclaration.java <111:53 111:56>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserAnonymousClassDeclaration.java <139:53 139:56>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserAnonymousClassDeclaration.java <183:53 183:56>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.accessLevel() [JavaParserAnonymousClassDeclaration.java <92:3 <92:3 <93:22 93:32> 93:34> 95:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel.PRIVATE
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() [JavaParserAnonymousClassDeclaration.java <97:3 <97:3 <98:30 98:41> 98:43> 105:3>]
SYMBOL_METHOD: com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.build()
SYMBOL_METHOD: com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.addAll(java.lang.Iterable<? extends E>)
SYMBOL_METHOD: com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.add(com.google.common.collect.ImmutableList<E>.Builder<E>.E)
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E>.Builder<E> com.google.common.collect.ImmutableList<E>.builder<E>()
QUALIFIER: com.google.common.collect.ImmutableList [JavaParserAnonymousClassDeclaration.java <100:9 100:21>]
QUALIFIER: com.google.common.collect.ImmutableList [JavaParserAnonymousClassDeclaration.java <128:9 128:21>]
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() [JavaParserAnonymousClassDeclaration.java <107:3 <107:3 <108:33 108:44> 108:46> 134:3>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields()
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.flatMap<R>(java.util.function.Function<? super T, ? extends Stream<? extends R>>)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration.JavaParserFieldDeclaration(com.github.javaparser.ast.body.VariableDeclarator, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() [JavaParserAnonymousClassDeclaration.java <136:3 <136:3 <137:33 137:50> 137:52> 143:3>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserAnonymousClassDeclaration.java <145:3 <145:3 <146:18 146:31> 146:42> 148:3>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [JavaParserAnonymousClassDeclaration.java <150:3 <150:3 <151:18 151:31> 151:63> 153:3>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.hasDirectlyAnnotation(java.lang.String) [JavaParserAnonymousClassDeclaration.java <155:3 <155:3 <156:18 156:38> 156:60> 158:3>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getPackageName() [JavaParserAnonymousClassDeclaration.java <160:3 <160:3 <161:17 161:30> 161:32> 163:3>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName()
SYMBOL_METHOD: static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getPackageName(com.github.javaparser.ast.Node)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [JavaParserAnonymousClassDeclaration.java <162:12 162:17>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [JavaParserAnonymousClassDeclaration.java <167:12 167:17>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [JavaParserAnonymousClassDeclaration.java <172:28 172:33>]
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getClassName() [JavaParserAnonymousClassDeclaration.java <165:3 <165:3 <166:17 166:28> 166:30> 168:3>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName()
SYMBOL_METHOD: static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getClassName(java.lang.String, com.github.javaparser.ast.Node)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() [JavaParserAnonymousClassDeclaration.java <170:3 <170:3 <171:17 171:32> 171:34> 178:3>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.containerName(com.github.javaparser.ast.Node)
SYMBOL_METHOD: boolean java.lang.String.isEmpty()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() [JavaParserAnonymousClassDeclaration.java <189:3 <189:3 <190:17 190:23> 190:25> 192:3>]
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() [JavaParserAnonymousClassDeclaration.java <180:3 <180:3 <181:40 181:52> 181:54> 187:3>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getTypeParameters() [JavaParserAnonymousClassDeclaration.java <194:3 <194:3 <195:41 195:57> 195:59> 197:3>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: static java.util.ArrayList<E> com.google.common.collect.Lists.newArrayList<E>()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() [JavaParserAnonymousClassDeclaration.java <199:3 <199:3 <200:45 200:57> 200:59> 202:3>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserAnonymousClassDeclaration.java <3:71 3:83>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.ast.Node [JavaParserAnonymousClassDeclaration.java <4:34 4:37>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.ast.expr.ObjectCreationExpr [JavaParserAnonymousClassDeclaration.java <5:39 5:56>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [JavaParserAnonymousClassDeclaration.java <6:59 6:74>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [JavaParserAnonymousClassDeclaration.java <7:59 7:75>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration [JavaParserAnonymousClassDeclaration.java <8:49 8:72>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [JavaParserAnonymousClassDeclaration.java <9:62 9:72>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserAnonymousClassDeclaration.java <10:62 10:83>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <11:62 11:77>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserAnonymousClassDeclaration.java <12:62 12:78>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserAnonymousClassDeclaration.java <13:62 13:85>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserAnonymousClassDeclaration.java <14:62 14:76>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserAnonymousClassDeclaration.java <15:62 15:85>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserAnonymousClassDeclaration.java <16:60 16:69>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <17:60 17:72>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [JavaParserAnonymousClassDeclaration.java <18:60 18:76>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserAnonymousClassDeclaration.java <19:60 19:63>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.google.common.collect.ImmutableList<E> [JavaParserAnonymousClassDeclaration.java <20:34 20:46>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> com.google.common.collect.Lists [JavaParserAnonymousClassDeclaration.java <21:34 21:38>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <23:18 23:21>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> java.util.Optional<T> [JavaParserAnonymousClassDeclaration.java <24:18 24:25>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> java.util.Set<E> [JavaParserAnonymousClassDeclaration.java <25:18 25:20>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> java.util.UUID [JavaParserAnonymousClassDeclaration.java <26:18 26:21>]
REFERENCE_IMPORT: JavaParserAnonymousClassDeclaration.java -> java.util.stream.Collectors [JavaParserAnonymousClassDeclaration.java <27:25 27:34>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration -> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration [JavaParserAnonymousClassDeclaration.java <32:58 32:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserAnonymousClassDeclaration.java <34:17 34:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode -> com.github.javaparser.ast.expr.ObjectCreationExpr [JavaParserAnonymousClassDeclaration.java <35:17 35:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserAnonymousClassDeclaration.java <36:17 36:31>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.name -> java.lang.String [JavaParserAnonymousClassDeclaration.java <37:17 37:22>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.name -> static java.util.UUID java.util.UUID.randomUUID() [JavaParserAnonymousClassDeclaration.java <37:51 37:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [JavaParserAnonymousClassDeclaration.java <39:46 39:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserAnonymousClassDeclaration.java <40:46 40:55>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <41:10 41:19>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode [JavaParserAnonymousClassDeclaration.java <42:10 42:20>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration [JavaParserAnonymousClassDeclaration.java <43:5 43:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [JavaParserAnonymousClassDeclaration.java <46:27 46:53>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <45:27 45:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <44:27 44:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserAnonymousClassDeclaration.java <44:66 44:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [JavaParserAnonymousClassDeclaration.java <44:50 44:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [JavaParserAnonymousClassDeclaration.java <45:69 45:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.ClassOrInterfaceType.getName() [JavaParserAnonymousClassDeclaration.java <45:59 45:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.ClassOrInterfaceType com.github.javaparser.ast.expr.ObjectCreationExpr.getType() [JavaParserAnonymousClassDeclaration.java <45:49 45:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperTypeDeclaration() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [JavaParserAnonymousClassDeclaration.java <49:10 49:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperTypeDeclaration() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration [JavaParserAnonymousClassDeclaration.java <50:12 50:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T -> com.github.javaparser.ast.Node [JavaParserAnonymousClassDeclaration.java <53:21 53:24>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T [JavaParserAnonymousClassDeclaration.java <53:32 53:32>]
REFERENCE_TYPE_USAGE: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <53:27 53:30>]
REFERENCE_TYPE_USAGE: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T [JavaParserAnonymousClassDeclaration.java <53:32 53:32>]
REFERENCE_TYPE_USAGE: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T [JavaParserAnonymousClassDeclaration.java <53:65 53:65>]
REFERENCE_TYPE_USAGE: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T [JavaParserAnonymousClassDeclaration.java <59:23 59:23>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>.T [JavaParserAnonymousClassDeclaration.java <53:65 53:65>]
REFERENCE_TYPE_USAGE: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.lang.Class<T> [JavaParserAnonymousClassDeclaration.java <53:59 53:63>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <60:10 60:16>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserAnonymousClassDeclaration.java <59:10 59:12>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [JavaParserAnonymousClassDeclaration.java <58:10 58:15>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <57:10 57:15>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [JavaParserAnonymousClassDeclaration.java <56:10 56:12>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>>> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody() [JavaParserAnonymousClassDeclaration.java <55:10 55:30>]
REFERENCE_USAGE: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode [JavaParserAnonymousClassDeclaration.java <54:12 54:22>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> boolean java.lang.Class<T>.isAssignableFrom(java.lang.Class<?>) [JavaParserAnonymousClassDeclaration.java <58:37 58:52>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> java.lang.Class<?> java.lang.Object.getClass() [JavaParserAnonymousClassDeclaration.java <58:59 58:66>]
REFERENCE_CALL: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserAnonymousClassDeclaration.java <60:29 60:34>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object() [JavaParserAnonymousClassDeclaration.java <64:27 64:32>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <63:4 63:11>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <64:13 64:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <65:16 65:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [JavaParserAnonymousClassDeclaration.java <65:16 65:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [JavaParserAnonymousClassDeclaration.java <65:45 65:53>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <65:34 65:43>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <65:89 65:98>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> java.lang.String java.lang.Class<T>.getCanonicalName() [JavaParserAnonymousClassDeclaration.java <65:68 65:83>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.object() -> java.lang.Object [JavaParserAnonymousClassDeclaration.java <65:55 65:60>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass() [JavaParserAnonymousClassDeclaration.java <69:24 69:36>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <68:4 68:11>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <69:10 69:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <70:16 70:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [JavaParserAnonymousClassDeclaration.java <70:16 70:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType() [JavaParserAnonymousClassDeclaration.java <70:55 70:69>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration [JavaParserAnonymousClassDeclaration.java <70:34 70:53>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <70:74 70:83>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getInterfaces() [JavaParserAnonymousClassDeclaration.java <74:30 74:42>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <73:4 73:11>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <74:15 74:27>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <98:15 98:27>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <74:10 74:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <74:15 74:27>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <80:14 80:20>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [JavaParserAnonymousClassDeclaration.java <79:14 79:19>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <78:14 78:19>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [JavaParserAnonymousClassDeclaration.java <77:32 77:43>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType() [JavaParserAnonymousClassDeclaration.java <77:14 77:28>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration [JavaParserAnonymousClassDeclaration.java <76:9 76:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface() [JavaParserAnonymousClassDeclaration.java <79:55 79:65>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [JavaParserAnonymousClassDeclaration.java <79:34 79:51>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserAnonymousClassDeclaration.java <80:33 80:38>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors() [JavaParserAnonymousClassDeclaration.java <84:39 84:53>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <83:4 83:11>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserAnonymousClassDeclaration.java <84:15 84:36>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <84:10 84:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserAnonymousClassDeclaration.java <84:15 84:36>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <89:14 89:20>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserAnonymousClassDeclaration.java <88:14 88:16>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <87:14 87:19>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) [JavaParserAnonymousClassDeclaration.java <86:9 86:25>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> com.github.javaparser.ast.body.ConstructorDeclaration [JavaParserAnonymousClassDeclaration.java <86:58 86:79>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <88:30 88:61>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserAnonymousClassDeclaration.java <88:30 88:61>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <88:75 88:84>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getConstructors() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserAnonymousClassDeclaration.java <89:33 89:38>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel() [JavaParserAnonymousClassDeclaration.java <93:22 93:32>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.accessLevel() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <92:4 92:11>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [JavaParserAnonymousClassDeclaration.java <93:10 93:20>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel.PRIVATE [JavaParserAnonymousClassDeclaration.java <94:24 94:30>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [JavaParserAnonymousClassDeclaration.java <98:30 98:41>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <97:4 97:11>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <98:10 98:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <98:15 98:27>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <101:14 101:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.build() [JavaParserAnonymousClassDeclaration.java <104:14 104:18>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.addAll(java.lang.Iterable<? extends E>) [JavaParserAnonymousClassDeclaration.java <103:14 103:19>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.add(com.google.common.collect.ImmutableList<E>.Builder<E>.E) [JavaParserAnonymousClassDeclaration.java <102:14 102:16>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> static com.google.common.collect.ImmutableList<E>.Builder<E> com.google.common.collect.ImmutableList<E>.builder<E>() [JavaParserAnonymousClassDeclaration.java <101:28 101:34>]
REFERENCE_TYPE_ARGUMENT: static com.google.common.collect.ImmutableList<E>.Builder<E> com.google.common.collect.ImmutableList<E>.builder<E>() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [JavaParserAnonymousClassDeclaration.java <101:14 101:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() [JavaParserAnonymousClassDeclaration.java <102:18 102:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [JavaParserAnonymousClassDeclaration.java <103:60 103:71>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asReferenceType() [JavaParserAnonymousClassDeclaration.java <103:42 103:56>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.superTypeDeclaration [JavaParserAnonymousClassDeclaration.java <103:21 103:40>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [JavaParserAnonymousClassDeclaration.java <108:33 108:44>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <107:4 107:11>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <108:15 108:30>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <119:10 119:25>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <122:10 122:25>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <108:10 108:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <110:5 110:8>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <119:5 119:8>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <122:5 122:8>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <108:15 108:30>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <119:10 119:25>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <122:10 122:25>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <129:11 129:26>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration [JavaParserAnonymousClassDeclaration.java <110:10 110:35>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration [JavaParserAnonymousClassDeclaration.java <110:10 110:35>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration [JavaParserAnonymousClassDeclaration.java <115:52 115:77>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <117:14 117:20>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <125:25 125:31>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.flatMap<R>(java.util.function.Function<? super T, ? extends Stream<? extends R>>) [JavaParserAnonymousClassDeclaration.java <113:14 113:20>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.flatMap<R>(java.util.function.Function<? super T, ? extends Stream<? extends R>>) [JavaParserAnonymousClassDeclaration.java <124:25 124:31>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <112:14 112:19>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <114:47 114:52>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <123:25 123:30>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <124:90 124:95>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) [JavaParserAnonymousClassDeclaration.java <111:9 111:25>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.ast.body.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <111:58 111:73>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserAnonymousClassDeclaration.java <115:32 115:34>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.body.FieldDeclaration.getVariables() [JavaParserAnonymousClassDeclaration.java <114:32 114:43>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclaration.JavaParserFieldDeclaration(com.github.javaparser.ast.body.VariableDeclarator, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <115:52 115:77>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <116:79 116:88>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserAnonymousClassDeclaration.java <117:33 117:38>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserAnonymousClassDeclaration.java <125:44 125:49>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [JavaParserAnonymousClassDeclaration.java <120:46 120:57>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [JavaParserAnonymousClassDeclaration.java <124:75 124:86>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [JavaParserAnonymousClassDeclaration.java <120:25 120:42>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [JavaParserAnonymousClassDeclaration.java <124:54 124:71>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperClass() [JavaParserAnonymousClassDeclaration.java <120:9 120:21>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getInterfaces() [JavaParserAnonymousClassDeclaration.java <123:9 123:21>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.build() [JavaParserAnonymousClassDeclaration.java <133:10 133:14>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.addAll(java.lang.Iterable<? extends E>) [JavaParserAnonymousClassDeclaration.java <130:10 130:15>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.addAll(java.lang.Iterable<? extends E>) [JavaParserAnonymousClassDeclaration.java <131:10 131:15>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> com.google.common.collect.ImmutableList<E>.Builder<com.google.common.collect.ImmutableList<E>.Builder<E>.E> com.google.common.collect.ImmutableList<E>.Builder<E>.addAll(java.lang.Iterable<? extends E>) [JavaParserAnonymousClassDeclaration.java <132:10 132:15>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields() -> static com.google.common.collect.ImmutableList<E>.Builder<E> com.google.common.collect.ImmutableList<E>.builder<E>() [JavaParserAnonymousClassDeclaration.java <129:28 129:34>]
REFERENCE_TYPE_ARGUMENT: static com.google.common.collect.ImmutableList<E>.Builder<E> com.google.common.collect.ImmutableList<E>.builder<E>() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [JavaParserAnonymousClassDeclaration.java <129:11 129:26>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods() [JavaParserAnonymousClassDeclaration.java <137:33 137:50>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <136:4 136:11>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserAnonymousClassDeclaration.java <137:14 137:30>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> java.util.Set<E> [JavaParserAnonymousClassDeclaration.java <137:10 137:12>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [JavaParserAnonymousClassDeclaration.java <137:14 137:30>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <142:14 142:20>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserAnonymousClassDeclaration.java <141:14 141:16>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <140:14 140:19>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) [JavaParserAnonymousClassDeclaration.java <139:9 139:25>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> com.github.javaparser.ast.body.MethodDeclaration [JavaParserAnonymousClassDeclaration.java <139:58 139:74>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration.JavaParserMethodDeclaration(com.github.javaparser.ast.body.MethodDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <141:32 141:58>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclaration [JavaParserAnonymousClassDeclaration.java <141:32 141:58>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <141:68 141:77>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() -> static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>() [JavaParserAnonymousClassDeclaration.java <142:33 142:37>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [JavaParserAnonymousClassDeclaration.java <146:18 146:31>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <145:4 145:11>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [JavaParserAnonymousClassDeclaration.java <146:10 146:16>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [JavaParserAnonymousClassDeclaration.java <146:33 146:36>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [JavaParserAnonymousClassDeclaration.java <151:18 151:31>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <150:4 150:11>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [JavaParserAnonymousClassDeclaration.java <151:10 151:16>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserAnonymousClassDeclaration.java <151:33 151:56>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String) [JavaParserAnonymousClassDeclaration.java <156:18 156:38>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <155:4 155:11>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean [JavaParserAnonymousClassDeclaration.java <156:10 156:16>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.String [JavaParserAnonymousClassDeclaration.java <156:40 156:45>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getPackageName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName() [JavaParserAnonymousClassDeclaration.java <161:17 161:30>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getPackageName() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <160:4 160:11>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getPackageName() -> java.lang.String [JavaParserAnonymousClassDeclaration.java <161:10 161:15>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getPackageName() -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getPackageName(com.github.javaparser.ast.Node) [JavaParserAnonymousClassDeclaration.java <162:19 162:32>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getPackageName() -> com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode [JavaParserAnonymousClassDeclaration.java <162:34 162:44>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName() [JavaParserAnonymousClassDeclaration.java <166:17 166:28>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getClassName() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <165:4 165:11>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getClassName() -> java.lang.String [JavaParserAnonymousClassDeclaration.java <166:10 166:15>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getClassName() -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.getClassName(java.lang.String, com.github.javaparser.ast.Node) [JavaParserAnonymousClassDeclaration.java <167:19 167:30>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getClassName() -> com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode [JavaParserAnonymousClassDeclaration.java <167:36 167:46>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [JavaParserAnonymousClassDeclaration.java <171:17 171:32>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <170:4 170:11>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> java.lang.String [JavaParserAnonymousClassDeclaration.java <171:10 171:15>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> java.lang.String [JavaParserAnonymousClassDeclaration.java <172:5 172:10>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> static java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.containerName(com.github.javaparser.ast.Node) [JavaParserAnonymousClassDeclaration.java <172:35 172:47>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [JavaParserAnonymousClassDeclaration.java <172:49 172:61>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> com.github.javaparser.ast.expr.ObjectCreationExpr com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.wrappedNode [JavaParserAnonymousClassDeclaration.java <172:63 172:73>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> boolean java.lang.String.isEmpty() [JavaParserAnonymousClassDeclaration.java <173:23 173:29>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() [JavaParserAnonymousClassDeclaration.java <174:14 174:20>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() [JavaParserAnonymousClassDeclaration.java <176:36 176:42>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes() [JavaParserAnonymousClassDeclaration.java <181:40 181:52>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <180:4 180:11>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserAnonymousClassDeclaration.java <181:14 181:37>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> java.util.Set<E> [JavaParserAnonymousClassDeclaration.java <181:10 181:12>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserAnonymousClassDeclaration.java <181:14 181:37>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserAnonymousClassDeclaration.java <186:14 186:20>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserAnonymousClassDeclaration.java <185:14 185:16>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserAnonymousClassDeclaration.java <184:14 184:19>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) [JavaParserAnonymousClassDeclaration.java <183:9 183:25>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> com.github.javaparser.ast.body.TypeDeclaration<T> [JavaParserAnonymousClassDeclaration.java <183:58 183:72>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [JavaParserAnonymousClassDeclaration.java <185:65 185:82>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserAnonymousClassDeclaration.java <185:49 185:51>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.typeSolver [JavaParserAnonymousClassDeclaration.java <185:53 185:62>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.internalTypes() -> static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>() [JavaParserAnonymousClassDeclaration.java <186:33 186:37>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [JavaParserAnonymousClassDeclaration.java <190:17 190:23>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <189:4 189:11>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() -> java.lang.String [JavaParserAnonymousClassDeclaration.java <190:10 190:15>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.name [JavaParserAnonymousClassDeclaration.java <191:12 191:15>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [JavaParserAnonymousClassDeclaration.java <195:41 195:57>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getTypeParameters() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <194:4 194:11>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserAnonymousClassDeclaration.java <195:15 195:38>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getTypeParameters() -> java.util.List<E> [JavaParserAnonymousClassDeclaration.java <195:10 195:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserAnonymousClassDeclaration.java <195:15 195:38>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getTypeParameters() -> static java.util.ArrayList<E> com.google.common.collect.Lists.newArrayList<E>() [JavaParserAnonymousClassDeclaration.java <196:18 196:29>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [JavaParserAnonymousClassDeclaration.java <200:45 200:57>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.lang.Override [JavaParserAnonymousClassDeclaration.java <199:4 199:11>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserAnonymousClassDeclaration.java <200:19 200:42>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.util.Optional<T> [JavaParserAnonymousClassDeclaration.java <200:10 200:17>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [JavaParserAnonymousClassDeclaration.java <200:19 200:42>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [JavaParserAnonymousClassDeclaration.java <201:15 201:43>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.lang.UnsupportedOperationException [JavaParserAnonymousClassDeclaration.java <201:15 201:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.lang.String java.lang.Class<T>.getCanonicalName() [JavaParserAnonymousClassDeclaration.java <201:101 201:116>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.containerType() -> java.lang.Class<?> java.lang.Object.getClass() [JavaParserAnonymousClassDeclaration.java <201:90 201:97>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<108:48> [JavaParserAnonymousClassDeclaration.java <108:48 108:48>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<108:48> [JavaParserAnonymousClassDeclaration.java <134:3 134:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<137:54> [JavaParserAnonymousClassDeclaration.java <137:54 137:54>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<137:54> [JavaParserAnonymousClassDeclaration.java <143:3 143:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<146:44> [JavaParserAnonymousClassDeclaration.java <146:44 146:44>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<146:44> [JavaParserAnonymousClassDeclaration.java <148:3 148:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<151:65> [JavaParserAnonymousClassDeclaration.java <151:65 151:65>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<151:65> [JavaParserAnonymousClassDeclaration.java <153:3 153:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<156:62> [JavaParserAnonymousClassDeclaration.java <156:62 156:62>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<156:62> [JavaParserAnonymousClassDeclaration.java <158:3 158:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<161:34> [JavaParserAnonymousClassDeclaration.java <161:34 161:34>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<161:34> [JavaParserAnonymousClassDeclaration.java <163:3 163:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<166:32> [JavaParserAnonymousClassDeclaration.java <166:32 166:32>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<166:32> [JavaParserAnonymousClassDeclaration.java <168:3 168:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<171:36> [JavaParserAnonymousClassDeclaration.java <171:36 171:36>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<171:36> [JavaParserAnonymousClassDeclaration.java <178:3 178:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<173:34> [JavaParserAnonymousClassDeclaration.java <173:34 173:34>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<173:34> [JavaParserAnonymousClassDeclaration.java <175:5 175:5>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<175:12> [JavaParserAnonymousClassDeclaration.java <175:12 175:12>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<175:12> [JavaParserAnonymousClassDeclaration.java <177:5 177:5>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<181:56> [JavaParserAnonymousClassDeclaration.java <181:56 181:56>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<181:56> [JavaParserAnonymousClassDeclaration.java <187:3 187:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<190:27> [JavaParserAnonymousClassDeclaration.java <190:27 190:27>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<190:27> [JavaParserAnonymousClassDeclaration.java <192:3 192:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<195:61> [JavaParserAnonymousClassDeclaration.java <195:61 195:61>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<195:61> [JavaParserAnonymousClassDeclaration.java <197:3 197:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<200:61> [JavaParserAnonymousClassDeclaration.java <200:61 200:61>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<200:61> [JavaParserAnonymousClassDeclaration.java <202:3 202:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<32:83> [JavaParserAnonymousClassDeclaration.java <32:83 32:83>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<32:83> [JavaParserAnonymousClassDeclaration.java <203:1 203:1>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<40:69> [JavaParserAnonymousClassDeclaration.java <40:69 40:69>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<40:69> [JavaParserAnonymousClassDeclaration.java <47:3 47:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<49:52> [JavaParserAnonymousClassDeclaration.java <49:52 49:52>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<49:52> [JavaParserAnonymousClassDeclaration.java <51:3 51:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<53:81> [JavaParserAnonymousClassDeclaration.java <53:81 53:81>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<53:81> [JavaParserAnonymousClassDeclaration.java <61:3 61:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<64:36> [JavaParserAnonymousClassDeclaration.java <64:36 64:36>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<64:36> [JavaParserAnonymousClassDeclaration.java <66:3 66:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<69:40> [JavaParserAnonymousClassDeclaration.java <69:40 69:40>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<69:40> [JavaParserAnonymousClassDeclaration.java <71:3 71:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<74:46> [JavaParserAnonymousClassDeclaration.java <74:46 74:46>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<74:46> [JavaParserAnonymousClassDeclaration.java <81:3 81:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<84:57> [JavaParserAnonymousClassDeclaration.java <84:57 84:57>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<84:57> [JavaParserAnonymousClassDeclaration.java <90:3 90:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<93:36> [JavaParserAnonymousClassDeclaration.java <93:36 93:36>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<93:36> [JavaParserAnonymousClassDeclaration.java <95:3 95:3>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<98:45> [JavaParserAnonymousClassDeclaration.java <98:45 98:45>]
LOCAL_SYMBOL: JavaParserAnonymousClassDeclaration.java<98:45> [JavaParserAnonymousClassDeclaration.java <105:3 105:3>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<0> [JavaParserAnonymousClassDeclaration.java <39:65 39:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<0> [JavaParserAnonymousClassDeclaration.java <42:24 42:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<0> [JavaParserAnonymousClassDeclaration.java <44:38 44:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<0> [JavaParserAnonymousClassDeclaration.java <45:37 45:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<1> [JavaParserAnonymousClassDeclaration.java <40:57 40:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<1> [JavaParserAnonymousClassDeclaration.java <41:23 41:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<1> [JavaParserAnonymousClassDeclaration.java <44:73 44:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration<1> [JavaParserAnonymousClassDeclaration.java <45:78 45:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T><0> [JavaParserAnonymousClassDeclaration.java <53:68 53:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T><0> [JavaParserAnonymousClassDeclaration.java <58:25 58:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields<0> [JavaParserAnonymousClassDeclaration.java <110:38 110:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields<0> [JavaParserAnonymousClassDeclaration.java <130:17 130:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields<6> [JavaParserAnonymousClassDeclaration.java <119:28 119:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields<6> [JavaParserAnonymousClassDeclaration.java <131:17 131:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields<7> [JavaParserAnonymousClassDeclaration.java <122:28 122:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAllFields<7> [JavaParserAnonymousClassDeclaration.java <132:17 132:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName<0> [JavaParserAnonymousClassDeclaration.java <172:12 172:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName<0> [JavaParserAnonymousClassDeclaration.java <173:9 173:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName<0> [JavaParserAnonymousClassDeclaration.java <176:14 176:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.hasDirectlyAnnotation<0> [JavaParserAnonymousClassDeclaration.java <156:47 156:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy<0> [JavaParserAnonymousClassDeclaration.java <146:38 146:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.isAssignableBy<0> [JavaParserAnonymousClassDeclaration.java <151:58 151:62>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserAnonymousClassDeclaration.java <88:18 88:21>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserAnonymousClassDeclaration.java <88:69 88:72>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserAnonymousClassDeclaration.java <141:18 141:23>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserAnonymousClassDeclaration.java <141:60 141:65>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserAnonymousClassDeclaration.java <185:18 185:27>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserAnonymousClassDeclaration.java <185:84 185:93>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<3> [JavaParserAnonymousClassDeclaration.java <113:22 113:26>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<3> [JavaParserAnonymousClassDeclaration.java <114:26 114:30>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<4> [JavaParserAnonymousClassDeclaration.java <59:14 59:17>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<4> [JavaParserAnonymousClassDeclaration.java <59:26 59:29>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<5> [JavaParserAnonymousClassDeclaration.java <115:36 115:43>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<5> [JavaParserAnonymousClassDeclaration.java <115:79 115:86>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<9> [JavaParserAnonymousClassDeclaration.java <124:33 124:40>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<9> [JavaParserAnonymousClassDeclaration.java <124:45 124:52>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<0> [JavaParserAnonymousClassDeclaration.java <79:21 79:24>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<0> [JavaParserAnonymousClassDeclaration.java <79:29 79:32>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<1> [JavaParserAnonymousClassDeclaration.java <58:17 58:20>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<1> [JavaParserAnonymousClassDeclaration.java <58:54 58:57>]
COMMENT: comment [JavaParserAnonymousClassDeclaration.java <29:1 31:3>]
