FILE: ReflectionClassDeclaration.java
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [ReflectionClassDeclaration.java <31:43 31:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel [ReflectionClassDeclaration.java <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <27:30 27:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <28:30 28:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <29:30 29:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <30:30 30:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <31:30 31:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionClassDeclaration.java <32:30 32:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <26:19 26:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <27:19 27:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <28:19 28:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <29:19 29:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <30:19 30:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <31:19 31:28>]
QUALIFIER: com.github.javaparser [ReflectionClassDeclaration.java <32:19 32:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ReflectionClassDeclaration.java <17:13 17:18>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <19:12 19:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <20:12 20:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <21:12 21:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <22:12 22:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <23:12 23:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <24:12 24:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <25:12 25:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <26:12 26:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <27:12 27:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <28:12 28:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <29:12 29:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <30:12 30:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <31:12 31:17>]
QUALIFIER: com.github [ReflectionClassDeclaration.java <32:12 32:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ReflectionClassDeclaration.java <17:9 17:11>]
QUALIFIER: com [ReflectionClassDeclaration.java <19:8 19:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <20:8 20:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <21:8 21:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <22:8 22:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <23:8 23:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <24:8 24:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <25:8 25:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <26:8 26:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <27:8 27:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <28:8 28:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <29:8 29:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <30:8 30:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <31:8 31:10>]
QUALIFIER: com [ReflectionClassDeclaration.java <32:8 32:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [ReflectionClassDeclaration.java <19:30 19:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.symbolsolver.core.resolution [ReflectionClassDeclaration.java <20:48 20:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core.resolution
QUALIFIER: com.github.javaparser.symbolsolver.core [ReflectionClassDeclaration.java <20:43 20:46>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.core
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ReflectionClassDeclaration.java <21:43 21:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ReflectionClassDeclaration.java <22:43 22:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper [ReflectionClassDeclaration.java <186:41 186:53>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper [ReflectionClassDeclaration.java <192:41 192:53>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ReflectionClassDeclaration.java <22:59 22:66>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts
QUALIFIER: com.github.javaparser.symbolsolver.logic [ReflectionClassDeclaration.java <23:43 23:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <27:43 27:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <28:43 28:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <29:43 29:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionClassDeclaration.java <30:43 30:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [ReflectionClassDeclaration.java <25:49 25:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReflectionClassDeclaration.java <26:49 26:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReflectionClassDeclaration.java <27:49 27:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionClassDeclaration.java <28:49 28:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionClassDeclaration.java <29:49 29:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ReflectionClassDeclaration.java <30:49 30:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.comparators [ReflectionClassDeclaration.java <31:59 31:69>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel.comparators
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionClassDeclaration.java <145:54 145:74>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionClassDeclaration.java <151:54 151:74>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionClassDeclaration.java <156:16 156:36>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionClassDeclaration.java <197:37 197:57>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [ReflectionClassDeclaration.java <32:43 32:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: java.lang [ReflectionClassDeclaration.java <34:13 34:16>]
QUALIFIER: java.lang [ReflectionClassDeclaration.java <35:13 35:16>]
QUALIFIER: java.lang [ReflectionClassDeclaration.java <36:13 36:16>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [ReflectionClassDeclaration.java <34:8 34:11>]
QUALIFIER: java [ReflectionClassDeclaration.java <35:8 35:11>]
QUALIFIER: java [ReflectionClassDeclaration.java <36:8 36:11>]
QUALIFIER: java [ReflectionClassDeclaration.java <37:8 37:11>]
QUALIFIER: java [ReflectionClassDeclaration.java <38:8 38:11>]
QUALIFIER: java [ReflectionClassDeclaration.java <39:8 39:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.lang.reflect [ReflectionClassDeclaration.java <34:18 34:24>]
QUALIFIER: java.lang.reflect [ReflectionClassDeclaration.java <35:18 35:24>]
QUALIFIER: java.lang.reflect [ReflectionClassDeclaration.java <36:18 36:24>]
SYMBOL_PACKAGE: java.lang.reflect
QUALIFIER: java.lang.reflect.Modifier [ReflectionClassDeclaration.java <136:77 136:84>]
QUALIFIER: java.util [ReflectionClassDeclaration.java <38:13 38:16>]
QUALIFIER: java.util [ReflectionClassDeclaration.java <39:13 39:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java.util.function [ReflectionClassDeclaration.java <38:18 38:25>]
SYMBOL_PACKAGE: java.util.function
QUALIFIER: java.util.stream.Collectors [ReflectionClassDeclaration.java <138:77 138:86>]
QUALIFIER: java.util.stream.Collectors [ReflectionClassDeclaration.java <173:151 173:160>]
QUALIFIER: java.util.stream.Collectors [ReflectionClassDeclaration.java <331:26 331:35>]
QUALIFIER: java.util.stream [ReflectionClassDeclaration.java <39:18 39:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <74:9 74:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <75:9 75:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <76:9 76:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <209:13 209:16>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <314:57 314:60>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <329:30 329:33>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <44:1 <44:14 44:39> 343:1>]
SYMBOL_FIELD: private java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <50:22 50:26>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <51:24 51:33>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <52:36 52:57>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <58:5 <58:5 <58:12 58:37> 58:76> 77:5>]
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)
SYMBOL_METHOD: boolean java.lang.Class<T>.isInterface()
SYMBOL_METHOD: boolean java.lang.Class<T>.isPrimitive()
SYMBOL_METHOD: boolean java.lang.Class<T>.isArray()
SYMBOL_METHOD: boolean java.lang.Class<T>.isEnum()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() [ReflectionClassDeclaration.java <83:5 <83:5 <84:35 84:52> 84:54> 86:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods()
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() [ReflectionClassDeclaration.java <88:5 <88:5 <89:32 89:43> 89:45> 91:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) [ReflectionClassDeclaration.java <93:5 <93:5 <94:20 94:25> 94:35> 103:5>]
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hashCode() [ReflectionClassDeclaration.java <105:5 <105:5 <106:16 106:23> 106:25> 108:5>]
SYMBOL_METHOD: int java.lang.Object.hashCode()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() [ReflectionClassDeclaration.java <111:5 <111:5 <112:19 112:32> 112:34> 117:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName()
SYMBOL_METHOD: java.lang.Package java.lang.Class<T>.getPackage()
SYMBOL_METHOD: java.lang.String java.lang.Package.getName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() [ReflectionClassDeclaration.java <119:5 <119:5 <120:19 120:30> 120:32> 126:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName()
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int, int)
SYMBOL_METHOD: int java.lang.String.length()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() [ReflectionClassDeclaration.java <128:5 <128:5 <129:19 129:34> 129:36> 131:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) [ReflectionClassDeclaration.java <133:5 <133:5 <134:47 134:57> 134:117> 157:5>]
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: static boolean java.lang.reflect.Modifier.isStatic(int)
SYMBOL_METHOD: int java.lang.reflect.Method.getModifiers()
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.sorted(java.util.Comparator<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T)
QUALIFIER: java.util.Arrays [ReflectionClassDeclaration.java <137:30 137:35>]
QUALIFIER: java.util.Arrays [ReflectionClassDeclaration.java <173:30 173:35>]
QUALIFIER: java.util.Arrays [ReflectionClassDeclaration.java <329:16 329:21>]
SYMBOL_METHOD: java.lang.reflect.Method java.lang.Class<T>.getDeclaredMethods()
SYMBOL_METHOD: java.lang.String java.lang.reflect.Method.getName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.MethodComparator()
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: boolean java.lang.reflect.Method.isBridge()
SYMBOL_METHOD: boolean java.lang.reflect.Method.isSynthetic()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() [ReflectionClassDeclaration.java <292:5 <292:5 <293:30 293:42> 293:44> 295:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() [ReflectionClassDeclaration.java <297:5 <297:5 <298:32 298:44> 298:46> 300:5>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.toString() [ReflectionClassDeclaration.java <159:5 <159:5 <160:19 160:26> 160:28> 164:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage(com.github.javaparser.ast.Node) [ReflectionClassDeclaration.java <166:5 <166:5 <166:17 166:24> 166:35> 169:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ReflectionClassDeclaration.java <171:5 <171:5 <171:34 171:51> 171:173> 199:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration)
SYMBOL_METHOD: int java.util.List<E>.size()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() [ReflectionClassDeclaration.java <307:5 <307:5 <308:43 308:59> 308:61> 310:5>]
SYMBOL_METHOD: java.util.List<E>.E java.util.List<E>.get(int)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <201:5 <201:5 <202:20 202:34> 202:66> 220:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration.isFunctionalInterface()
SYMBOL_METHOD: java.lang.Class<? super T> java.lang.Class<T>.getSuperclass()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Class<T>.getInterfaces()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.ReflectionInterfaceDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionClassDeclaration.java <222:5 <222:5 <223:20 223:33> 223:44> 225:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isTypeParameter() [ReflectionClassDeclaration.java <227:5 <227:5 <228:20 228:34> 228:36> 230:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) [ReflectionClassDeclaration.java <232:5 <232:5 <233:29 233:36> 233:49> 235:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String)
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() [ReflectionClassDeclaration.java <237:5 <237:5 <238:35 238:46> 238:48> 240:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <242:5 <242:5 <243:56 243:66> 243:102> 250:5>]
SYMBOL_METHOD: java.lang.reflect.Field java.lang.Class<T>.getFields()
SYMBOL_METHOD: java.lang.String java.lang.reflect.Field.getName()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ReflectionClassDeclaration.java <246:24 246:38>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ReflectionClassDeclaration.java <249:16 249:30>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) [ReflectionClassDeclaration.java <252:5 <252:5 <253:20 253:40> 253:62> 255:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) [ReflectionClassDeclaration.java <257:5 <257:5 <258:20 258:27> 258:40> 260:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <262:5 <262:5 <263:20 263:33> 263:65> 265:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getName() [ReflectionClassDeclaration.java <267:5 <267:5 <268:19 268:25> 268:27> 270:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getSimpleName()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isField() [ReflectionClassDeclaration.java <272:5 <272:5 <273:20 273:26> 273:28> 275:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isParameter() [ReflectionClassDeclaration.java <277:5 <277:5 <278:20 278:30> 278:32> 280:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isType() [ReflectionClassDeclaration.java <282:5 <282:5 <283:20 283:25> 283:27> 285:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isType()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isClass() [ReflectionClassDeclaration.java <287:5 <287:5 <288:20 288:26> 288:28> 290:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.isClass()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getInterfaces()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isInterface() [ReflectionClassDeclaration.java <302:5 <302:5 <303:20 303:30> 303:32> 305:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() [ReflectionClassDeclaration.java <312:5 <312:5 <313:24 313:34> 313:36> 315:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.modifiersToAccessLevel(int)
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ReflectionClassDeclaration.java <314:16 314:32>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ReflectionClassDeclaration.java <330:28 330:44>]
SYMBOL_METHOD: int java.lang.Class<T>.getModifiers()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() [ReflectionClassDeclaration.java <317:5 <317:5 <318:41 318:55> 318:57> 320:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() [ReflectionClassDeclaration.java <322:5 <322:5 <323:47 323:59> 323:61> 325:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType()
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() [ReflectionClassDeclaration.java <327:5 <327:5 <328:42 328:54> 328:56> 332:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes()
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.lang.Class<?> java.lang.Class<T>.getDeclaredClasses()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>()
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() [ReflectionClassDeclaration.java <338:5 <338:5 <339:29 339:34> 339:36> 341:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.ast.Node [ReflectionClassDeclaration.java <19:34 19:37>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.core.resolution.Context [ReflectionClassDeclaration.java <20:59 20:65>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [ReflectionClassDeclaration.java <21:59 21:87>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper [ReflectionClassDeclaration.java <22:68 22:80>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration [ReflectionClassDeclaration.java <23:49 23:72>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations [ReflectionClassDeclaration.java <24:49 24:60>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <25:57 25:67>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionClassDeclaration.java <26:60 26:74>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionClassDeclaration.java <27:60 27:69>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <28:60 28:72>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionClassDeclaration.java <29:60 29:76>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <30:60 30:63>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator [ReflectionClassDeclaration.java <31:71 31:86>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [ReflectionClassDeclaration.java <32:54 32:74>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> java.lang.reflect.Field [ReflectionClassDeclaration.java <34:26 34:30>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> java.lang.reflect.Method [ReflectionClassDeclaration.java <35:26 35:31>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> java.lang.reflect.Modifier [ReflectionClassDeclaration.java <36:26 36:33>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> java.util [ReflectionClassDeclaration.java <37:13 37:16>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> java.util.function.Predicate<T> [ReflectionClassDeclaration.java <38:27 38:35>]
REFERENCE_IMPORT: ReflectionClassDeclaration.java -> java.util.stream.Collectors [ReflectionClassDeclaration.java <39:25 39:34>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration -> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration [ReflectionClassDeclaration.java <44:49 44:72>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ReflectionClassDeclaration.java <50:19 50:19>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ReflectionClassDeclaration.java <58:45 58:45>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> ? [ReflectionClassDeclaration.java <213:20 213:20>]
REFERENCE_TYPE_USAGE: java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz -> java.lang.Class<T> [ReflectionClassDeclaration.java <50:13 50:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionClassDeclaration.java <51:13 51:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ReflectionClassDeclaration.java <52:13 52:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<T> [ReflectionClassDeclaration.java <58:39 58:43>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionClassDeclaration.java <58:55 58:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ReflectionClassDeclaration.java <60:23 60:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ReflectionClassDeclaration.java <63:23 63:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ReflectionClassDeclaration.java <66:23 66:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ReflectionClassDeclaration.java <69:23 69:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [ReflectionClassDeclaration.java <72:23 72:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ReflectionClassDeclaration.java <60:23 60:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ReflectionClassDeclaration.java <63:23 63:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ReflectionClassDeclaration.java <66:23 66:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ReflectionClassDeclaration.java <69:23 69:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ReflectionClassDeclaration.java <72:23 72:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.Class<T>.isInterface() [ReflectionClassDeclaration.java <62:19 62:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.Class<T>.isPrimitive() [ReflectionClassDeclaration.java <65:19 65:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.Class<T>.isArray() [ReflectionClassDeclaration.java <68:19 68:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.Class<T>.isEnum() [ReflectionClassDeclaration.java <71:19 71:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <74:14 74:18>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <75:14 75:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <76:14 76:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.ReflectionClassAdapter(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <76:43 76:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter [ReflectionClassDeclaration.java <76:43 76:64>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods() [ReflectionClassDeclaration.java <84:35 84:52>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() -> java.lang.Override [ReflectionClassDeclaration.java <83:6 83:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <84:16 84:32>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() -> java.util.Set<E> [ReflectionClassDeclaration.java <84:12 84:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <84:16 84:32>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getDeclaredMethods() [ReflectionClassDeclaration.java <85:39 85:56>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getDeclaredMethods() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <85:16 85:37>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAncestors() [ReflectionClassDeclaration.java <89:32 89:43>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() -> java.lang.Override [ReflectionClassDeclaration.java <88:6 88:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <89:17 89:29>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <298:17 298:29>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() -> java.util.List<E> [ReflectionClassDeclaration.java <89:12 89:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <89:17 89:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAncestors() [ReflectionClassDeclaration.java <90:39 90:50>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAncestors() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <90:16 90:37>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> boolean java.lang.Object.equals(java.lang.Object) [ReflectionClassDeclaration.java <94:20 94:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.Override [ReflectionClassDeclaration.java <93:6 93:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> boolean [ReflectionClassDeclaration.java <94:12 94:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.Object [ReflectionClassDeclaration.java <94:27 94:32>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.Class<?> java.lang.Object.getClass() [ReflectionClassDeclaration.java <96:26 96:33>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.Class<?> java.lang.Object.getClass() [ReflectionClassDeclaration.java <96:42 96:49>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <98:9 98:34>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <98:44 98:69>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionClassDeclaration.java <100:39 100:44>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReflectionClassDeclaration.java <100:20 100:35>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReflectionClassDeclaration.java <100:57 100:72>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <100:14 100:18>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals(java.lang.Object) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <100:51 100:55>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hashCode() -> int java.lang.Object.hashCode() [ReflectionClassDeclaration.java <106:16 106:23>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hashCode() -> java.lang.Override [ReflectionClassDeclaration.java <105:6 105:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hashCode() -> int [ReflectionClassDeclaration.java <106:12 106:14>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hashCode() -> int java.lang.Object.hashCode() [ReflectionClassDeclaration.java <107:22 107:29>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hashCode() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <107:16 107:20>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName() [ReflectionClassDeclaration.java <112:19 112:32>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.Override [ReflectionClassDeclaration.java <111:6 111:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.String [ReflectionClassDeclaration.java <112:12 112:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.Package java.lang.Class<T>.getPackage() [ReflectionClassDeclaration.java <113:19 113:28>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.Package java.lang.Class<T>.getPackage() [ReflectionClassDeclaration.java <114:26 114:35>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <113:13 113:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <114:20 114:24>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() -> java.lang.String java.lang.Package.getName() [ReflectionClassDeclaration.java <114:39 114:45>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName() [ReflectionClassDeclaration.java <120:19 120:30>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.Override [ReflectionClassDeclaration.java <119:6 119:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String [ReflectionClassDeclaration.java <120:12 120:17>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String [ReflectionClassDeclaration.java <121:9 121:14>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReflectionClassDeclaration.java <121:38 121:53>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <121:32 121:36>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() [ReflectionClassDeclaration.java <122:38 122:51>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getPackageName() [ReflectionClassDeclaration.java <123:44 123:57>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> java.lang.String java.lang.String.substring(int, int) [ReflectionClassDeclaration.java <123:34 123:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> int java.lang.String.length() [ReflectionClassDeclaration.java <123:61 123:66>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName() -> int java.lang.String.length() [ReflectionClassDeclaration.java <123:89 123:94>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ReflectionClassDeclaration.java <129:19 129:34>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() -> java.lang.Override [ReflectionClassDeclaration.java <128:6 128:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() -> java.lang.String [ReflectionClassDeclaration.java <129:12 129:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReflectionClassDeclaration.java <130:22 130:37>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <130:16 130:20>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.Deprecated [ReflectionClassDeclaration.java <133:6 133:15>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <134:28 134:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <145:29 145:45>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <151:29 151:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionClassDeclaration.java <134:12 134:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionClassDeclaration.java <145:13 145:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionClassDeclaration.java <151:13 151:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <134:28 134:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <135:14 135:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <140:13 140:29>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <145:29 145:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <151:29 151:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.String [ReflectionClassDeclaration.java <134:59 134:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <134:77 134:80>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <171:71 171:74>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <171:148 171:151>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.List<E> [ReflectionClassDeclaration.java <134:72 134:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.List<E> [ReflectionClassDeclaration.java <135:9 135:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <134:77 134:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean [ReflectionClassDeclaration.java <134:99 134:105>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <135:14 135:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.ArrayList<E>.ArrayList() [ReflectionClassDeclaration.java <135:47 135:57>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.ArrayList<E> [ReflectionClassDeclaration.java <135:47 135:55>]
REFERENCE_TYPE_ARGUMENT: java.util.function.Predicate<T> -> java.lang.reflect.Method [ReflectionClassDeclaration.java <136:19 136:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.function.Predicate<T> [ReflectionClassDeclaration.java <136:9 136:17>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.reflect.Method [ReflectionClassDeclaration.java <136:19 136:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.reflect.Method [ReflectionClassDeclaration.java <137:14 137:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> static boolean java.lang.reflect.Modifier.isStatic(int) [ReflectionClassDeclaration.java <136:86 136:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> int java.lang.reflect.Method.getModifiers() [ReflectionClassDeclaration.java <136:97 136:108>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ReflectionClassDeclaration.java <138:69 138:75>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.sorted(java.util.Comparator<? super T>) [ReflectionClassDeclaration.java <138:38 138:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [ReflectionClassDeclaration.java <137:72 137:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [ReflectionClassDeclaration.java <137:112 137:117>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ReflectionClassDeclaration.java <137:37 137:42>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.reflect.Method java.lang.Class<T>.getDeclaredMethods() [ReflectionClassDeclaration.java <137:50 137:67>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <137:44 137:48>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionClassDeclaration.java <137:98 137:103>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.lang.String java.lang.reflect.Method.getName() [ReflectionClassDeclaration.java <137:88 137:94>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.MethodComparator() [ReflectionClassDeclaration.java <138:49 138:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator [ReflectionClassDeclaration.java <138:49 138:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ReflectionClassDeclaration.java <138:88 138:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean java.lang.reflect.Method.isBridge() [ReflectionClassDeclaration.java <139:24 139:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean java.lang.reflect.Method.isSynthetic() [ReflectionClassDeclaration.java <139:45 139:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <140:55 140:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ReflectionClassDeclaration.java <140:55 140:81>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <140:91 140:100>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <145:140 145:149>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <151:171 151:180>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <156:88 156:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionClassDeclaration.java <141:21 141:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionClassDeclaration.java <147:25 147:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionClassDeclaration.java <153:25 153:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() [ReflectionClassDeclaration.java <143:13 143:25>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() [ReflectionClassDeclaration.java <144:62 144:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [ReflectionClassDeclaration.java <144:13 144:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [ReflectionClassDeclaration.java <144:44 144:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionClassDeclaration.java <144:78 144:95>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionClassDeclaration.java <151:115 151:132>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <145:76 145:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <151:76 151:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ReflectionClassDeclaration.java <146:21 146:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [ReflectionClassDeclaration.java <152:21 152:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReflectionClassDeclaration.java <147:33 147:59>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReflectionClassDeclaration.java <153:33 153:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <150:14 150:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() [ReflectionClassDeclaration.java <150:51 150:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <156:38 156:55>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.toString() -> java.lang.String java.lang.Object.toString() [ReflectionClassDeclaration.java <160:19 160:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.toString() -> java.lang.Override [ReflectionClassDeclaration.java <159:6 159:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.toString() -> java.lang.String [ReflectionClassDeclaration.java <160:12 160:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.toString() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId() [ReflectionClassDeclaration.java <162:28 162:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <166:12 166:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [ReflectionClassDeclaration.java <166:26 166:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <168:20 168:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionClassDeclaration.java <168:20 168:36>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage(com.github.javaparser.ast.Node) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <168:44 168:53>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <171:21 171:31>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <186:22 186:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <192:22 192:32>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <197:18 197:28>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T> [ReflectionClassDeclaration.java <171:12 171:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T> [ReflectionClassDeclaration.java <186:13 186:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T> [ReflectionClassDeclaration.java <192:13 192:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T> [ReflectionClassDeclaration.java <197:9 197:16>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <171:21 171:31>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <172:14 172:24>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <176:13 176:23>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <176:43 176:53>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <186:22 186:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <192:22 192:32>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <197:18 197:28>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String [ReflectionClassDeclaration.java <171:53 171:58>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ReflectionClassDeclaration.java <171:66 171:69>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ReflectionClassDeclaration.java <171:143 171:146>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E> [ReflectionClassDeclaration.java <172:9 172:12>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <171:71 171:74>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <171:148 171:151>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <179:17 179:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionClassDeclaration.java <171:93 171:102>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.core.resolution.Context [ReflectionClassDeclaration.java <171:116 171:122>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReflectionClassDeclaration.java <172:14 172:24>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.ArrayList<E>.ArrayList() [ReflectionClassDeclaration.java <172:41 172:51>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.ArrayList<E> [ReflectionClassDeclaration.java <172:41 172:49>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.reflect.Method [ReflectionClassDeclaration.java <173:14 173:19>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ReflectionClassDeclaration.java <173:143 173:149>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.sorted(java.util.Comparator<? super T>) [ReflectionClassDeclaration.java <173:112 173:117>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [ReflectionClassDeclaration.java <173:72 173:77>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ReflectionClassDeclaration.java <173:37 173:42>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.reflect.Method java.lang.Class<T>.getDeclaredMethods() [ReflectionClassDeclaration.java <173:50 173:67>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <173:44 173:48>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionClassDeclaration.java <173:98 173:103>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.lang.String java.lang.reflect.Method.getName() [ReflectionClassDeclaration.java <173:88 173:94>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.MethodComparator() [ReflectionClassDeclaration.java <173:123 173:138>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator [ReflectionClassDeclaration.java <173:123 173:138>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ReflectionClassDeclaration.java <173:162 173:167>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.reflect.Method.isBridge() [ReflectionClassDeclaration.java <174:24 174:31>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.lang.reflect.Method.isSynthetic() [ReflectionClassDeclaration.java <174:45 174:55>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReflectionClassDeclaration.java <175:13 175:29>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <175:55 175:81>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ReflectionClassDeclaration.java <175:55 175:81>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReflectionClassDeclaration.java <176:43 176:53>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int [ReflectionClassDeclaration.java <177:18 177:20>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ReflectionClassDeclaration.java <177:53 177:56>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> int java.util.List<E>.size() [ReflectionClassDeclaration.java <177:87 177:90>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() [ReflectionClassDeclaration.java <177:33 177:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() [ReflectionClassDeclaration.java <178:56 178:72>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionClassDeclaration.java <178:17 178:40>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ReflectionClassDeclaration.java <178:76 178:78>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<E>.E java.util.List<E>.get(int) [ReflectionClassDeclaration.java <179:53 179:55>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.methods.MethodUsage com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceTypeParameter(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionClassDeclaration.java <180:43 180:62>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionClassDeclaration.java <182:21 182:23>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionClassDeclaration.java <188:25 188:27>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [ReflectionClassDeclaration.java <194:25 194:27>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() [ReflectionClassDeclaration.java <184:13 184:25>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() [ReflectionClassDeclaration.java <185:62 185:74>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [ReflectionClassDeclaration.java <185:13 185:28>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [ReflectionClassDeclaration.java <185:44 185:59>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionClassDeclaration.java <185:78 185:95>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReflectionClassDeclaration.java <192:95 192:112>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ReflectionClassDeclaration.java <186:55 186:72>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ContextHelper.solveMethodAsUsage(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) [ReflectionClassDeclaration.java <192:55 192:72>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.Optional<T>.isPresent() [ReflectionClassDeclaration.java <187:21 187:29>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> boolean java.util.Optional<T>.isPresent() [ReflectionClassDeclaration.java <193:21 193:29>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ReflectionClassDeclaration.java <188:33 188:35>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [ReflectionClassDeclaration.java <194:33 194:35>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <191:14 191:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() [ReflectionClassDeclaration.java <191:51 191:63>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>) -> static java.util.Optional<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicableUsage(java.util.List<com.github.javaparser.symbolsolver.model.methods.MethodUsage>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <197:59 197:81>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <202:20 202:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [ReflectionClassDeclaration.java <201:6 201:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [ReflectionClassDeclaration.java <202:12 202:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionClassDeclaration.java <202:36 202:59>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [ReflectionClassDeclaration.java <203:30 203:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration.isFunctionalInterface() [ReflectionClassDeclaration.java <204:20 204:40>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionClassDeclaration.java <206:38 206:43>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ReflectionClassDeclaration.java <206:19 206:34>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getQualifiedName() [ReflectionClassDeclaration.java <206:45 206:60>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<? super T> java.lang.Class<T>.getSuperclass() [ReflectionClassDeclaration.java <209:24 209:36>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<? super T> java.lang.Class<T>.getSuperclass() [ReflectionClassDeclaration.java <210:57 210:69>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <209:18 209:22>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <210:51 210:55>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <213:35 213:39>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <210:86 210:100>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <210:24 210:49>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [ReflectionClassDeclaration.java <210:24 210:49>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <210:74 210:83>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <214:63 214:72>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<T> [ReflectionClassDeclaration.java <213:14 213:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Class<?> java.lang.Class<T>.getInterfaces() [ReflectionClassDeclaration.java <213:41 213:53>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <214:75 214:89>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration.ReflectionInterfaceDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <214:21 214:50>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration [ReflectionClassDeclaration.java <214:21 214:50>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionClassDeclaration.java <223:20 223:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [ReflectionClassDeclaration.java <222:6 222:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ReflectionClassDeclaration.java <223:12 223:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReflectionClassDeclaration.java <223:35 223:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionClassDeclaration.java <224:39 224:52>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <224:16 224:37>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isTypeParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isTypeParameter() [ReflectionClassDeclaration.java <228:20 228:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isTypeParameter() -> java.lang.Override [ReflectionClassDeclaration.java <227:6 227:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isTypeParameter() -> boolean [ReflectionClassDeclaration.java <228:12 228:18>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String) [ReflectionClassDeclaration.java <233:29 233:36>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) -> java.lang.Override [ReflectionClassDeclaration.java <232:6 232:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ReflectionClassDeclaration.java <233:12 233:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) -> java.lang.String [ReflectionClassDeclaration.java <233:38 233:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getField(java.lang.String) [ReflectionClassDeclaration.java <234:39 234:46>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <234:16 234:37>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getAllFields() [ReflectionClassDeclaration.java <238:35 238:46>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() -> java.lang.Override [ReflectionClassDeclaration.java <237:6 237:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ReflectionClassDeclaration.java <238:17 238:32>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() -> java.util.List<E> [ReflectionClassDeclaration.java <238:12 238:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration [ReflectionClassDeclaration.java <238:17 238:32>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getAllFields() [ReflectionClassDeclaration.java <239:39 239:50>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getAllFields() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <239:16 239:37>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Deprecated [ReflectionClassDeclaration.java <242:6 242:15>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ReflectionClassDeclaration.java <243:28 243:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReflectionClassDeclaration.java <243:12 243:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ReflectionClassDeclaration.java <243:38 243:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ReflectionClassDeclaration.java <249:41 249:56>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ReflectionClassDeclaration.java <243:68 243:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionClassDeclaration.java <243:81 243:90>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Field [ReflectionClassDeclaration.java <244:14 244:18>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Field java.lang.Class<T>.getFields() [ReflectionClassDeclaration.java <244:34 244:42>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <244:28 244:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionClassDeclaration.java <245:33 245:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.reflect.Field.getName() [ReflectionClassDeclaration.java <245:23 245:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ReflectionClassDeclaration.java <246:40 246:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration.ReflectionFieldDeclaration(java.lang.reflect.Field, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <246:51 246:76>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFieldDeclaration [ReflectionClassDeclaration.java <246:51 246:76>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [ReflectionClassDeclaration.java <249:32 249:39>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasDirectlyAnnotation(java.lang.String) [ReflectionClassDeclaration.java <253:20 253:40>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.Override [ReflectionClassDeclaration.java <252:6 252:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean [ReflectionClassDeclaration.java <253:12 253:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> java.lang.String [ReflectionClassDeclaration.java <253:42 253:47>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasDirectlyAnnotation(java.lang.String) [ReflectionClassDeclaration.java <254:39 254:59>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <254:16 254:37>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String) [ReflectionClassDeclaration.java <258:20 258:27>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) -> java.lang.Override [ReflectionClassDeclaration.java <257:6 257:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) -> boolean [ReflectionClassDeclaration.java <258:12 258:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) -> java.lang.String [ReflectionClassDeclaration.java <258:29 258:34>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.hasField(java.lang.String) [ReflectionClassDeclaration.java <259:39 259:46>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField(java.lang.String) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <259:16 259:37>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReflectionClassDeclaration.java <263:20 263:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> java.lang.Override [ReflectionClassDeclaration.java <262:6 262:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean [ReflectionClassDeclaration.java <263:12 263:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionClassDeclaration.java <263:35 263:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionClassDeclaration.java <264:16 264:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <264:35 264:51>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionClassDeclaration.java <264:35 264:51>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <264:60 264:69>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [ReflectionClassDeclaration.java <268:19 268:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getName() -> java.lang.Override [ReflectionClassDeclaration.java <267:6 267:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getName() -> java.lang.String [ReflectionClassDeclaration.java <268:12 268:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getName() -> java.lang.String java.lang.Class<T>.getSimpleName() [ReflectionClassDeclaration.java <269:22 269:34>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getName() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <269:16 269:20>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isField() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isField() [ReflectionClassDeclaration.java <273:20 273:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isField() -> java.lang.Override [ReflectionClassDeclaration.java <272:6 272:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isField() -> boolean [ReflectionClassDeclaration.java <273:12 273:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.isParameter() [ReflectionClassDeclaration.java <278:20 278:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isParameter() -> java.lang.Override [ReflectionClassDeclaration.java <277:6 277:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isParameter() -> boolean [ReflectionClassDeclaration.java <278:12 278:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isType() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isType() [ReflectionClassDeclaration.java <283:20 283:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isType() -> java.lang.Override [ReflectionClassDeclaration.java <282:6 282:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isType() -> boolean [ReflectionClassDeclaration.java <283:12 283:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isClass() -> boolean com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.isClass() [ReflectionClassDeclaration.java <288:20 288:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isClass() -> java.lang.Override [ReflectionClassDeclaration.java <287:6 287:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isClass() -> boolean [ReflectionClassDeclaration.java <288:12 288:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isClass() -> boolean java.lang.Class<T>.isInterface() [ReflectionClassDeclaration.java <289:23 289:33>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isClass() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <289:17 289:21>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass() [ReflectionClassDeclaration.java <293:30 293:42>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() -> java.lang.Override [ReflectionClassDeclaration.java <292:6 292:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionClassDeclaration.java <293:12 293:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getSuperClass() [ReflectionClassDeclaration.java <294:39 294:51>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getSuperClass() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <294:16 294:37>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getInterfaces() [ReflectionClassDeclaration.java <298:32 298:44>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() -> java.lang.Override [ReflectionClassDeclaration.java <297:6 297:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() -> java.util.List<E> [ReflectionClassDeclaration.java <298:12 298:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <298:17 298:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getInterfaces() [ReflectionClassDeclaration.java <299:39 299:51>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getInterfaces() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <299:16 299:37>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isInterface() -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface() [ReflectionClassDeclaration.java <303:20 303:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isInterface() -> java.lang.Override [ReflectionClassDeclaration.java <302:6 302:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isInterface() -> boolean [ReflectionClassDeclaration.java <303:12 303:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isInterface() -> boolean java.lang.Class<T>.isInterface() [ReflectionClassDeclaration.java <304:22 304:32>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isInterface() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <304:16 304:20>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReflectionClassDeclaration.java <308:43 308:59>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() -> java.lang.Override [ReflectionClassDeclaration.java <307:6 307:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionClassDeclaration.java <308:17 308:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() -> java.util.List<E> [ReflectionClassDeclaration.java <308:12 308:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionClassDeclaration.java <308:17 308:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getTypeParameters() [ReflectionClassDeclaration.java <309:39 309:55>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <309:16 309:37>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel() [ReflectionClassDeclaration.java <313:24 313:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() -> java.lang.Override [ReflectionClassDeclaration.java <312:6 312:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [ReflectionClassDeclaration.java <313:12 313:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() -> static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.modifiersToAccessLevel(int) [ReflectionClassDeclaration.java <314:34 314:55>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() -> int java.lang.Class<T>.getModifiers() [ReflectionClassDeclaration.java <314:68 314:79>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.accessLevel() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <314:62 314:66>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getConstructors() [ReflectionClassDeclaration.java <318:41 318:55>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() -> java.lang.Override [ReflectionClassDeclaration.java <317:6 317:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [ReflectionClassDeclaration.java <318:17 318:38>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() -> java.util.List<E> [ReflectionClassDeclaration.java <318:12 318:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [ReflectionClassDeclaration.java <318:17 318:38>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.getConstructors() [ReflectionClassDeclaration.java <319:39 319:53>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getConstructors() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <319:16 319:37>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [ReflectionClassDeclaration.java <323:47 323:59>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() -> java.lang.Override [ReflectionClassDeclaration.java <322:6 322:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionClassDeclaration.java <323:21 323:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() -> java.util.Optional<T> [ReflectionClassDeclaration.java <323:12 323:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionClassDeclaration.java <323:21 323:44>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter.containerType() [ReflectionClassDeclaration.java <324:39 324:51>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.containerType() -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassAdapter com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.reflectionClassAdapter [ReflectionClassDeclaration.java <324:16 324:37>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes() [ReflectionClassDeclaration.java <328:42 328:54>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> java.lang.Override [ReflectionClassDeclaration.java <327:6 327:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionClassDeclaration.java <328:16 328:39>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> java.util.Set<E> [ReflectionClassDeclaration.java <328:12 328:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionClassDeclaration.java <328:16 328:39>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ReflectionClassDeclaration.java <331:18 331:24>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ReflectionClassDeclaration.java <330:18 330:20>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ReflectionClassDeclaration.java <329:23 329:28>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> java.lang.Class<?> java.lang.Class<T>.getDeclaredClasses() [ReflectionClassDeclaration.java <329:41 329:58>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> java.lang.Class<?> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.clazz [ReflectionClassDeclaration.java <329:35 329:39>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <330:46 330:63>]
REFERENCE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <330:69 330:78>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.internalTypes() -> static java.util.stream.Collector<T, ?, java.util.Set<T>> java.util.stream.Collectors.toSet<T>() [ReflectionClassDeclaration.java <331:37 331:41>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object() [ReflectionClassDeclaration.java <339:29 339:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> java.lang.Override [ReflectionClassDeclaration.java <338:6 338:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReflectionClassDeclaration.java <339:15 339:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionClassDeclaration.java <340:20 340:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReflectionClassDeclaration.java <340:20 340:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [ReflectionClassDeclaration.java <340:49 340:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <340:38 340:47>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.typeSolver [ReflectionClassDeclaration.java <340:93 340:102>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReflectionClassDeclaration.java <340:72 340:87>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.object() -> java.lang.Object [ReflectionClassDeclaration.java <340:59 340:64>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<106:27> [ReflectionClassDeclaration.java <106:27 106:27>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<106:27> [ReflectionClassDeclaration.java <108:5 108:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<112:36> [ReflectionClassDeclaration.java <112:36 112:36>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<112:36> [ReflectionClassDeclaration.java <117:5 117:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<113:41> [ReflectionClassDeclaration.java <113:41 113:41>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<113:41> [ReflectionClassDeclaration.java <115:9 115:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<120:34> [ReflectionClassDeclaration.java <120:34 120:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<120:34> [ReflectionClassDeclaration.java <126:5 126:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<122:64> [ReflectionClassDeclaration.java <122:64 122:64>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<122:64> [ReflectionClassDeclaration.java <124:9 124:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<129:38> [ReflectionClassDeclaration.java <129:38 129:38>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<129:38> [ReflectionClassDeclaration.java <131:5 131:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<134:119> [ReflectionClassDeclaration.java <134:119 134:119>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<134:119> [ReflectionClassDeclaration.java <157:5 157:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<138:99> [ReflectionClassDeclaration.java <138:99 138:99>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<138:99> [ReflectionClassDeclaration.java <142:9 142:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<143:38> [ReflectionClassDeclaration.java <143:38 143:38>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<143:38> [ReflectionClassDeclaration.java <149:9 149:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<146:33> [ReflectionClassDeclaration.java <146:33 146:33>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<146:33> [ReflectionClassDeclaration.java <148:13 148:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<150:68> [ReflectionClassDeclaration.java <150:68 150:68>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<150:68> [ReflectionClassDeclaration.java <155:9 155:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<152:33> [ReflectionClassDeclaration.java <152:33 152:33>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<152:33> [ReflectionClassDeclaration.java <154:13 154:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<160:30> [ReflectionClassDeclaration.java <160:30 160:30>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<160:30> [ReflectionClassDeclaration.java <164:5 164:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<166:37> [ReflectionClassDeclaration.java <166:37 166:37>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<166:37> [ReflectionClassDeclaration.java <169:5 169:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<171:175> [ReflectionClassDeclaration.java <171:175 171:175>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<171:175> [ReflectionClassDeclaration.java <199:5 199:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<173:173> [ReflectionClassDeclaration.java <173:173 173:173>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<173:173> [ReflectionClassDeclaration.java <183:9 183:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<177:100> [ReflectionClassDeclaration.java <177:100 177:100>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<177:100> [ReflectionClassDeclaration.java <181:13 181:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<184:38> [ReflectionClassDeclaration.java <184:38 184:38>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<184:38> [ReflectionClassDeclaration.java <190:9 190:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<187:34> [ReflectionClassDeclaration.java <187:34 187:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<187:34> [ReflectionClassDeclaration.java <189:13 189:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<191:68> [ReflectionClassDeclaration.java <191:68 191:68>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<191:68> [ReflectionClassDeclaration.java <196:9 196:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<193:34> [ReflectionClassDeclaration.java <193:34 193:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<193:34> [ReflectionClassDeclaration.java <195:13 195:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<202:68> [ReflectionClassDeclaration.java <202:68 202:68>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<202:68> [ReflectionClassDeclaration.java <220:5 220:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<203:61> [ReflectionClassDeclaration.java <203:61 203:61>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<203:61> [ReflectionClassDeclaration.java <205:9 205:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<206:66> [ReflectionClassDeclaration.java <206:66 206:66>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<206:66> [ReflectionClassDeclaration.java <208:9 208:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<210:110> [ReflectionClassDeclaration.java <210:110 210:110>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<210:110> [ReflectionClassDeclaration.java <212:9 212:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<213:58> [ReflectionClassDeclaration.java <213:58 213:58>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<213:58> [ReflectionClassDeclaration.java <217:9 217:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<214:99> [ReflectionClassDeclaration.java <214:99 214:99>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<214:99> [ReflectionClassDeclaration.java <216:13 216:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<223:46> [ReflectionClassDeclaration.java <223:46 223:46>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<223:46> [ReflectionClassDeclaration.java <225:5 225:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<228:38> [ReflectionClassDeclaration.java <228:38 228:38>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<228:38> [ReflectionClassDeclaration.java <230:5 230:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<233:51> [ReflectionClassDeclaration.java <233:51 233:51>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<233:51> [ReflectionClassDeclaration.java <235:5 235:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<238:50> [ReflectionClassDeclaration.java <238:50 238:50>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<238:50> [ReflectionClassDeclaration.java <240:5 240:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<243:104> [ReflectionClassDeclaration.java <243:104 243:104>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<243:104> [ReflectionClassDeclaration.java <250:5 250:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<244:47> [ReflectionClassDeclaration.java <244:47 244:47>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<244:47> [ReflectionClassDeclaration.java <248:9 248:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<245:47> [ReflectionClassDeclaration.java <245:47 245:47>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<245:47> [ReflectionClassDeclaration.java <247:13 247:13>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<253:64> [ReflectionClassDeclaration.java <253:64 253:64>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<253:64> [ReflectionClassDeclaration.java <255:5 255:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<258:42> [ReflectionClassDeclaration.java <258:42 258:42>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<258:42> [ReflectionClassDeclaration.java <260:5 260:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<263:67> [ReflectionClassDeclaration.java <263:67 263:67>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<263:67> [ReflectionClassDeclaration.java <265:5 265:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<268:29> [ReflectionClassDeclaration.java <268:29 268:29>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<268:29> [ReflectionClassDeclaration.java <270:5 270:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<273:30> [ReflectionClassDeclaration.java <273:30 273:30>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<273:30> [ReflectionClassDeclaration.java <275:5 275:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<278:34> [ReflectionClassDeclaration.java <278:34 278:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<278:34> [ReflectionClassDeclaration.java <280:5 280:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<283:29> [ReflectionClassDeclaration.java <283:29 283:29>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<283:29> [ReflectionClassDeclaration.java <285:5 285:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<288:30> [ReflectionClassDeclaration.java <288:30 288:30>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<288:30> [ReflectionClassDeclaration.java <290:5 290:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<293:46> [ReflectionClassDeclaration.java <293:46 293:46>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<293:46> [ReflectionClassDeclaration.java <295:5 295:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<298:48> [ReflectionClassDeclaration.java <298:48 298:48>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<298:48> [ReflectionClassDeclaration.java <300:5 300:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<303:34> [ReflectionClassDeclaration.java <303:34 303:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<303:34> [ReflectionClassDeclaration.java <305:5 305:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<308:63> [ReflectionClassDeclaration.java <308:63 308:63>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<308:63> [ReflectionClassDeclaration.java <310:5 310:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<313:38> [ReflectionClassDeclaration.java <313:38 313:38>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<313:38> [ReflectionClassDeclaration.java <315:5 315:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<318:59> [ReflectionClassDeclaration.java <318:59 318:59>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<318:59> [ReflectionClassDeclaration.java <320:5 320:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<323:63> [ReflectionClassDeclaration.java <323:63 323:63>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<323:63> [ReflectionClassDeclaration.java <325:5 325:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<328:58> [ReflectionClassDeclaration.java <328:58 328:58>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<328:58> [ReflectionClassDeclaration.java <332:5 332:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<339:38> [ReflectionClassDeclaration.java <339:38 339:38>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<339:38> [ReflectionClassDeclaration.java <341:5 341:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<44:74> [ReflectionClassDeclaration.java <44:74 44:74>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<44:74> [ReflectionClassDeclaration.java <343:1 343:1>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<58:78> [ReflectionClassDeclaration.java <58:78 58:78>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<58:78> [ReflectionClassDeclaration.java <77:5 77:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<59:28> [ReflectionClassDeclaration.java <59:28 59:28>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<59:28> [ReflectionClassDeclaration.java <61:9 61:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<62:34> [ReflectionClassDeclaration.java <62:34 62:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<62:34> [ReflectionClassDeclaration.java <64:9 64:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<65:34> [ReflectionClassDeclaration.java <65:34 65:34>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<65:34> [ReflectionClassDeclaration.java <67:9 67:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<68:30> [ReflectionClassDeclaration.java <68:30 68:30>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<68:30> [ReflectionClassDeclaration.java <70:9 70:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<71:29> [ReflectionClassDeclaration.java <71:29 71:29>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<71:29> [ReflectionClassDeclaration.java <73:9 73:9>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<84:56> [ReflectionClassDeclaration.java <84:56 84:56>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<84:56> [ReflectionClassDeclaration.java <86:5 86:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<89:47> [ReflectionClassDeclaration.java <89:47 89:47>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<89:47> [ReflectionClassDeclaration.java <91:5 91:5>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<94:37> [ReflectionClassDeclaration.java <94:37 94:37>]
LOCAL_SYMBOL: ReflectionClassDeclaration.java<94:37> [ReflectionClassDeclaration.java <103:5 103:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <58:48 58:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <59:13 59:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <62:13 62:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <65:13 65:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <68:13 68:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <71:13 71:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <74:22 74:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<0> [ReflectionClassDeclaration.java <76:66 76:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<1> [ReflectionClassDeclaration.java <58:66 58:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<1> [ReflectionClassDeclaration.java <75:27 75:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration<1> [ReflectionClassDeclaration.java <76:73 76:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<0> [ReflectionClassDeclaration.java <202:61 202:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<0> [ReflectionClassDeclaration.java <203:13 203:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<0> [ReflectionClassDeclaration.java <206:13 206:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<0> [ReflectionClassDeclaration.java <210:102 210:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<0> [ReflectionClassDeclaration.java <214:91 214:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<1> [ReflectionClassDeclaration.java <213:23 213:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.canBeAssignedTo<1> [ReflectionClassDeclaration.java <214:52 214:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<0> [ReflectionClassDeclaration.java <94:34 94:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<0> [ReflectionClassDeclaration.java <95:21 95:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<0> [ReflectionClassDeclaration.java <96:13 96:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<0> [ReflectionClassDeclaration.java <96:40 96:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<0> [ReflectionClassDeclaration.java <98:72 98:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<1> [ReflectionClassDeclaration.java <98:36 98:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.equals<1> [ReflectionClassDeclaration.java <100:46 100:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName<0> [ReflectionClassDeclaration.java <121:16 121:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName<0> [ReflectionClassDeclaration.java <122:13 122:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName<0> [ReflectionClassDeclaration.java <123:20 123:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getClassName<0> [ReflectionClassDeclaration.java <123:75 123:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField<0> [ReflectionClassDeclaration.java <233:45 233:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getField<0> [ReflectionClassDeclaration.java <234:48 234:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.getUsage<0> [ReflectionClassDeclaration.java <166:31 166:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation<0> [ReflectionClassDeclaration.java <253:49 253:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasDirectlyAnnotation<0> [ReflectionClassDeclaration.java <254:61 254:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField<0> [ReflectionClassDeclaration.java <258:36 258:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.hasField<0> [ReflectionClassDeclaration.java <259:48 259:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy<0> [ReflectionClassDeclaration.java <223:40 223:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy<0> [ReflectionClassDeclaration.java <224:54 224:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy<0> [ReflectionClassDeclaration.java <263:60 263:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.isAssignableBy<0> [ReflectionClassDeclaration.java <264:53 264:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<0> [ReflectionClassDeclaration.java <134:66 134:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<0> [ReflectionClassDeclaration.java <137:105 137:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<0> [ReflectionClassDeclaration.java <145:106 145:109>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<0> [ReflectionClassDeclaration.java <151:137 151:140>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<0> [ReflectionClassDeclaration.java <156:66 156:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<10> [ReflectionClassDeclaration.java <140:31 140:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<10> [ReflectionClassDeclaration.java <141:25 141:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<11> [ReflectionClassDeclaration.java <144:30 144:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<11> [ReflectionClassDeclaration.java <145:94 145:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<12> [ReflectionClassDeclaration.java <145:48 145:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<12> [ReflectionClassDeclaration.java <146:17 146:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<12> [ReflectionClassDeclaration.java <147:29 147:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<13> [ReflectionClassDeclaration.java <150:28 150:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<13> [ReflectionClassDeclaration.java <151:94 151:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<15> [ReflectionClassDeclaration.java <151:48 151:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<15> [ReflectionClassDeclaration.java <152:17 152:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<15> [ReflectionClassDeclaration.java <153:29 153:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<1> [ReflectionClassDeclaration.java <134:83 134:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<1> [ReflectionClassDeclaration.java <145:112 145:125>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<1> [ReflectionClassDeclaration.java <151:143 151:156>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<1> [ReflectionClassDeclaration.java <156:72 156:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<2> [ReflectionClassDeclaration.java <134:107 134:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<2> [ReflectionClassDeclaration.java <136:48 136:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<2> [ReflectionClassDeclaration.java <136:63 136:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<2> [ReflectionClassDeclaration.java <145:128 145:137>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<2> [ReflectionClassDeclaration.java <151:159 151:168>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<3> [ReflectionClassDeclaration.java <135:33 135:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<3> [ReflectionClassDeclaration.java <141:13 141:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<3> [ReflectionClassDeclaration.java <147:17 147:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<3> [ReflectionClassDeclaration.java <153:17 153:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<3> [ReflectionClassDeclaration.java <156:57 156:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<4> [ReflectionClassDeclaration.java <136:27 136:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<4> [ReflectionClassDeclaration.java <137:119 137:130>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<6> [ReflectionClassDeclaration.java <137:21 137:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<6> [ReflectionClassDeclaration.java <139:17 139:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<6> [ReflectionClassDeclaration.java <139:38 139:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethod<6> [ReflectionClassDeclaration.java <140:83 140:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<0> [ReflectionClassDeclaration.java <171:60 171:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<0> [ReflectionClassDeclaration.java <173:105 173:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<0> [ReflectionClassDeclaration.java <186:86 186:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<0> [ReflectionClassDeclaration.java <192:117 192:120>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<0> [ReflectionClassDeclaration.java <197:92 197:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<10> [ReflectionClassDeclaration.java <175:31 175:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<10> [ReflectionClassDeclaration.java <176:55 176:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<11> [ReflectionClassDeclaration.java <176:25 176:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<11> [ReflectionClassDeclaration.java <180:17 180:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<11> [ReflectionClassDeclaration.java <180:31 180:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<11> [ReflectionClassDeclaration.java <182:25 182:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<12> [ReflectionClassDeclaration.java <177:22 177:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<12> [ReflectionClassDeclaration.java <177:29 177:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<12> [ReflectionClassDeclaration.java <177:63 177:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<12> [ReflectionClassDeclaration.java <177:95 177:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<12> [ReflectionClassDeclaration.java <178:80 178:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<12> [ReflectionClassDeclaration.java <179:57 179:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<13> [ReflectionClassDeclaration.java <178:42 178:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<13> [ReflectionClassDeclaration.java <180:64 180:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<14> [ReflectionClassDeclaration.java <179:22 179:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<14> [ReflectionClassDeclaration.java <180:77 180:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<15> [ReflectionClassDeclaration.java <185:30 185:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<15> [ReflectionClassDeclaration.java <186:74 186:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<16> [ReflectionClassDeclaration.java <186:35 186:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<16> [ReflectionClassDeclaration.java <187:17 187:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<16> [ReflectionClassDeclaration.java <188:29 188:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<17> [ReflectionClassDeclaration.java <191:28 191:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<17> [ReflectionClassDeclaration.java <192:74 192:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<19> [ReflectionClassDeclaration.java <192:35 192:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<19> [ReflectionClassDeclaration.java <193:17 193:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<19> [ReflectionClassDeclaration.java <194:29 194:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<1> [ReflectionClassDeclaration.java <171:77 171:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<1> [ReflectionClassDeclaration.java <186:92 186:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<1> [ReflectionClassDeclaration.java <192:123 192:136>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<1> [ReflectionClassDeclaration.java <197:98 197:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<20> [ReflectionClassDeclaration.java <197:31 197:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<20> [ReflectionClassDeclaration.java <198:16 198:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<2> [ReflectionClassDeclaration.java <171:104 171:113>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<2> [ReflectionClassDeclaration.java <175:91 175:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<2> [ReflectionClassDeclaration.java <186:108 186:117>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<2> [ReflectionClassDeclaration.java <192:139 192:148>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<2> [ReflectionClassDeclaration.java <197:114 197:123>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<3> [ReflectionClassDeclaration.java <171:124 171:140>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<3> [ReflectionClassDeclaration.java <186:120 186:136>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<3> [ReflectionClassDeclaration.java <192:151 192:167>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<4> [ReflectionClassDeclaration.java <171:154 171:172>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<4> [ReflectionClassDeclaration.java <177:67 177:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<4> [ReflectionClassDeclaration.java <179:33 179:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<4> [ReflectionClassDeclaration.java <186:139 186:157>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<4> [ReflectionClassDeclaration.java <192:170 192:188>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<5> [ReflectionClassDeclaration.java <172:27 172:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<5> [ReflectionClassDeclaration.java <182:13 182:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<5> [ReflectionClassDeclaration.java <188:17 188:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<5> [ReflectionClassDeclaration.java <194:17 194:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<5> [ReflectionClassDeclaration.java <197:83 197:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<6> [ReflectionClassDeclaration.java <173:21 173:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<6> [ReflectionClassDeclaration.java <174:17 174:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<6> [ReflectionClassDeclaration.java <174:38 174:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveMethodAsUsage<6> [ReflectionClassDeclaration.java <175:83 175:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<0> [ReflectionClassDeclaration.java <243:75 243:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<0> [ReflectionClassDeclaration.java <245:40 245:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<1> [ReflectionClassDeclaration.java <243:92 243:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<1> [ReflectionClassDeclaration.java <246:85 246:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<2> [ReflectionClassDeclaration.java <244:20 244:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<2> [ReflectionClassDeclaration.java <245:17 245:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.solveSymbol<2> [ReflectionClassDeclaration.java <246:78 246:82>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ReflectionClassDeclaration.java <330:22 330:23>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [ReflectionClassDeclaration.java <330:65 330:66>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [ReflectionClassDeclaration.java <136:42 136:42>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [ReflectionClassDeclaration.java <136:95 136:95>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<7> [ReflectionClassDeclaration.java <137:80 137:80>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<7> [ReflectionClassDeclaration.java <137:86 137:86>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<7> [ReflectionClassDeclaration.java <173:80 173:80>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<7> [ReflectionClassDeclaration.java <173:86 173:86>]
COMMENT: comment [ReflectionClassDeclaration.java <1:1 15:3>]
COMMENT: comment [ReflectionClassDeclaration.java <41:1 43:3>]
COMMENT: comment [ReflectionClassDeclaration.java <46:5 46:7>]
COMMENT: comment [ReflectionClassDeclaration.java <47:5 47:14>]
COMMENT: comment [ReflectionClassDeclaration.java <48:5 48:7>]
COMMENT: comment [ReflectionClassDeclaration.java <54:5 54:7>]
COMMENT: comment [ReflectionClassDeclaration.java <55:5 55:20>]
COMMENT: comment [ReflectionClassDeclaration.java <56:5 56:7>]
COMMENT: comment [ReflectionClassDeclaration.java <79:5 79:7>]
COMMENT: comment [ReflectionClassDeclaration.java <80:5 80:22>]
COMMENT: comment [ReflectionClassDeclaration.java <81:5 81:7>]
COMMENT: comment [ReflectionClassDeclaration.java <334:5 334:7>]
COMMENT: comment [ReflectionClassDeclaration.java <335:5 335:25>]
COMMENT: comment [ReflectionClassDeclaration.java <336:5 336:7>]
