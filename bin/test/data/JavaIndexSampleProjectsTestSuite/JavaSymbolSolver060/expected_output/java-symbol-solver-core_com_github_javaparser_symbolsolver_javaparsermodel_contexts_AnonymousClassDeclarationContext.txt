FILE: AnonymousClassDeclarationContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [AnonymousClassDeclarationContext.java <1:60 1:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [AnonymousClassDeclarationContext.java <1:44 1:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [AnonymousClassDeclarationContext.java <7:43 7:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [AnonymousClassDeclarationContext.java <8:43 8:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [AnonymousClassDeclarationContext.java <9:43 9:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [AnonymousClassDeclarationContext.java <11:43 11:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <1:31 1:42>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <7:30 7:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <8:30 8:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <9:30 9:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <11:30 11:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <12:30 12:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <13:30 13:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <14:30 14:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <15:30 15:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <16:30 16:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <17:30 17:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <18:30 18:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AnonymousClassDeclarationContext.java <20:30 20:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <1:20 1:29>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <3:19 3:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <4:19 4:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <5:19 5:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <6:19 6:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <7:19 7:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <8:19 8:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <9:19 9:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <11:19 11:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <12:19 12:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <13:19 13:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <14:19 14:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <15:19 15:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <16:19 16:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <17:19 17:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <18:19 18:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <102:21 102:30>]
QUALIFIER: com.github.javaparser [AnonymousClassDeclarationContext.java <104:43 104:52>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <1:13 1:18>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <3:12 3:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <4:12 4:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <5:12 5:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <6:12 6:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <7:12 7:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <8:12 8:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <9:12 9:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <11:12 11:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <12:12 12:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <13:12 13:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <14:12 14:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <15:12 15:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <16:12 16:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <17:12 17:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <18:12 18:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <19:12 19:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <20:12 20:17>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <102:14 102:19>]
QUALIFIER: com.github [AnonymousClassDeclarationContext.java <104:36 104:41>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [AnonymousClassDeclarationContext.java <1:9 1:11>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <3:8 3:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <4:8 4:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <5:8 5:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <6:8 6:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <7:8 7:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <8:8 8:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <9:8 9:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <11:8 11:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <12:8 12:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <13:8 13:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <14:8 14:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <15:8 15:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <16:8 16:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <17:8 17:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <18:8 18:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <19:8 19:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <20:8 20:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <21:8 21:10>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <102:10 102:12>]
QUALIFIER: com [AnonymousClassDeclarationContext.java <104:32 104:34>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [AnonymousClassDeclarationContext.java <3:30 3:32>]
QUALIFIER: com.github.javaparser.ast [AnonymousClassDeclarationContext.java <4:30 4:32>]
QUALIFIER: com.github.javaparser.ast [AnonymousClassDeclarationContext.java <5:30 5:32>]
QUALIFIER: com.github.javaparser.ast [AnonymousClassDeclarationContext.java <6:30 6:32>]
QUALIFIER: com.github.javaparser.ast [AnonymousClassDeclarationContext.java <102:32 102:34>]
QUALIFIER: com.github.javaparser.ast [AnonymousClassDeclarationContext.java <104:54 104:56>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.ast.expr [AnonymousClassDeclarationContext.java <4:34 4:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast.nodeTypes [AnonymousClassDeclarationContext.java <5:34 5:42>]
SYMBOL_PACKAGE: com.github.javaparser.ast.nodeTypes
QUALIFIER: com.github.javaparser.ast.type [AnonymousClassDeclarationContext.java <6:34 6:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.type
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [AnonymousClassDeclarationContext.java <113:26 113:41>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [AnonymousClassDeclarationContext.java <125:22 125:38>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [AnonymousClassDeclarationContext.java <9:59 9:70>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [AnonymousClassDeclarationContext.java <11:59 11:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [AnonymousClassDeclarationContext.java <12:49 12:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [AnonymousClassDeclarationContext.java <13:49 13:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [AnonymousClassDeclarationContext.java <14:49 14:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <12:43 12:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <13:43 13:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <14:43 14:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <15:43 15:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <16:43 16:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <17:43 17:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AnonymousClassDeclarationContext.java <18:43 18:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [AnonymousClassDeclarationContext.java <15:49 15:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [AnonymousClassDeclarationContext.java <16:49 16:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [AnonymousClassDeclarationContext.java <17:49 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [AnonymousClassDeclarationContext.java <18:49 18:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [AnonymousClassDeclarationContext.java <19:43 19:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [AnonymousClassDeclarationContext.java <56:13 56:33>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [AnonymousClassDeclarationContext.java <83:11 83:31>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [AnonymousClassDeclarationContext.java <94:12 94:32>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [AnonymousClassDeclarationContext.java <20:43 20:52>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: com.google.common.base.Preconditions [AnonymousClassDeclarationContext.java <37:5 37:17>]
QUALIFIER: com.google.common.base.Preconditions [AnonymousClassDeclarationContext.java <177:5 177:17>]
QUALIFIER: com.google.common.base [AnonymousClassDeclarationContext.java <21:26 21:29>]
SYMBOL_PACKAGE: com.google.common.base
QUALIFIER: com.google.common [AnonymousClassDeclarationContext.java <21:19 21:24>]
SYMBOL_PACKAGE: com.google.common
QUALIFIER: com.google [AnonymousClassDeclarationContext.java <21:12 21:17>]
SYMBOL_PACKAGE: com.google
QUALIFIER: java.util [AnonymousClassDeclarationContext.java <23:13 23:16>]
QUALIFIER: java.util [AnonymousClassDeclarationContext.java <24:13 24:16>]
QUALIFIER: java.util [AnonymousClassDeclarationContext.java <25:13 25:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [AnonymousClassDeclarationContext.java <23:8 23:11>]
QUALIFIER: java [AnonymousClassDeclarationContext.java <24:8 24:11>]
QUALIFIER: java [AnonymousClassDeclarationContext.java <25:8 25:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.stream.Collectors [AnonymousClassDeclarationContext.java <51:22 51:31>]
QUALIFIER: java.util.stream [AnonymousClassDeclarationContext.java <25:18 25:23>]
SYMBOL_PACKAGE: java.util.stream
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext [AnonymousClassDeclarationContext.java <30:1 <30:14 30:45> 186:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <32:53 32:65>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_FIELD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.typeSolver
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <35:3 <35:3 <35:10 35:41> 35:89> 39:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static void com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object)
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>>> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <41:3 <41:3 <42:45 42:55> 45:78> 98:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_PACKAGE: java.lang
QUALIFIER: java.lang.String [AnonymousClassDeclarationContext.java <122:53 122:58>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isStatic()
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: boolean java.util.List<E>.isEmpty()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperTypeDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <100:3 <100:3 <101:43 101:51> 101:87> 172:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.ast.body [AnonymousClassDeclarationContext.java <102:36 102:39>]
QUALIFIER: com.github.javaparser.ast.body [AnonymousClassDeclarationContext.java <104:58 104:61>]
SYMBOL_METHOD: java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>)
SYMBOL_METHOD: java.util.Optional<U> java.util.Optional<T>.map<U>(java.util.function.Function<? super T, ? extends U>)
SYMBOL_METHOD: java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [AnonymousClassDeclarationContext.java <112:22 112:36>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [AnonymousClassDeclarationContext.java <145:22 145:36>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [AnonymousClassDeclarationContext.java <157:16 157:30>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [AnonymousClassDeclarationContext.java <163:20 163:34>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [AnonymousClassDeclarationContext.java <180:14 180:28>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: boolean java.lang.String.startsWith(java.lang.String)
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.lang.String java.lang.String.substring(int)
SYMBOL_METHOD: int java.lang.String.length()
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.orElse(java.util.Optional<T>.T)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.expr.ObjectCreationExpr.getTypeArguments()
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<N>.getTypeArguments()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<N>.NodeList()
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.Node.toString()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.type.TypeParameter.TypeParameter(java.lang.String)
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <174:3 <174:3 <175:54 175:64> 176:87> 184:3>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static void com.google.common.base.Preconditions.checkArgument(boolean)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasVisibleField(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getVisibleField(java.lang.String)
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.ast.NodeList<N> [AnonymousClassDeclarationContext.java <3:34 3:41>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.ast.expr.ObjectCreationExpr [AnonymousClassDeclarationContext.java <4:39 4:56>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<N> [AnonymousClassDeclarationContext.java <5:44 5:64>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.ast.type.TypeParameter [AnonymousClassDeclarationContext.java <6:39 6:51>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [AnonymousClassDeclarationContext.java <7:59 7:74>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory [AnonymousClassDeclarationContext.java <8:59 8:75>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [AnonymousClassDeclarationContext.java <10:6 10:40>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [AnonymousClassDeclarationContext.java <11:72 11:94>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <12:62 12:78>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <13:62 13:76>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [AnonymousClassDeclarationContext.java <14:62 14:77>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <15:60 15:74>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AnonymousClassDeclarationContext.java <16:60 16:69>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AnonymousClassDeclarationContext.java <17:60 17:72>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [AnonymousClassDeclarationContext.java <18:60 18:63>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [AnonymousClassDeclarationContext.java <19:59 19:84>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic [AnonymousClassDeclarationContext.java <20:54 20:74>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> com.google.common.base.Preconditions [AnonymousClassDeclarationContext.java <21:31 21:43>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> java.util.List<E> [AnonymousClassDeclarationContext.java <23:18 23:21>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> java.util.Optional<T> [AnonymousClassDeclarationContext.java <24:18 24:25>]
REFERENCE_IMPORT: AnonymousClassDeclarationContext.java -> java.util.stream.Collectors [AnonymousClassDeclarationContext.java <25:25 25:34>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.ast.expr.ObjectCreationExpr [AnonymousClassDeclarationContext.java <30:81 30:98>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [AnonymousClassDeclarationContext.java <30:55 30:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext -> com.github.javaparser.ast.expr.ObjectCreationExpr [AnonymousClassDeclarationContext.java <30:81 30:98>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [AnonymousClassDeclarationContext.java <32:17 32:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration [AnonymousClassDeclarationContext.java <33:11 33:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.JavaParserAnonymousClassDeclaration(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <33:11 33:45>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AnonymousClassDeclarationContext.java <33:47 33:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.typeSolver [AnonymousClassDeclarationContext.java <33:60 33:69>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <35:10 35:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.ObjectCreationExpr [AnonymousClassDeclarationContext.java <35:43 35:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AnonymousClassDeclarationContext.java <35:68 35:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <36:5 36:9>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static void com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object) [AnonymousClassDeclarationContext.java <37:19 37:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [AnonymousClassDeclarationContext.java <37:62 37:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext(com.github.javaparser.ast.expr.ObjectCreationExpr, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>>> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody() [AnonymousClassDeclarationContext.java <37:38 37:58>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <42:45 42:55>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [AnonymousClassDeclarationContext.java <41:4 41:11>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <42:26 42:42>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <55:25 55:41>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <73:23 73:39>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <82:23 82:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <42:10 42:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <55:9 55:23>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <73:7 73:21>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <82:7 82:21>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <42:26 42:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <46:10 46:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <55:25 55:41>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <73:23 73:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <82:23 82:39>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AnonymousClassDeclarationContext.java <42:57 42:62>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [AnonymousClassDeclarationContext.java <43:62 43:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [AnonymousClassDeclarationContext.java <43:57 43:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [AnonymousClassDeclarationContext.java <46:5 46:8>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [AnonymousClassDeclarationContext.java <43:62 43:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [AnonymousClassDeclarationContext.java <44:57 44:63>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AnonymousClassDeclarationContext.java <45:57 45:66>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [AnonymousClassDeclarationContext.java <46:10 46:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [AnonymousClassDeclarationContext.java <51:14 51:20>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [AnonymousClassDeclarationContext.java <50:14 50:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [AnonymousClassDeclarationContext.java <49:14 49:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getDeclaredMethods() [AnonymousClassDeclarationContext.java <48:14 48:31>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <47:9 47:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <53:49 53:61>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <54:37 54:49>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <81:39 81:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AnonymousClassDeclarationContext.java <50:38 50:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AnonymousClassDeclarationContext.java <53:42 53:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [AnonymousClassDeclarationContext.java <50:28 50:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.isStatic() [AnonymousClassDeclarationContext.java <50:72 50:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [AnonymousClassDeclarationContext.java <51:33 51:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.Class<T>.getCanonicalName() [AnonymousClassDeclarationContext.java <53:23 53:38>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [AnonymousClassDeclarationContext.java <53:10 53:15>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Object [AnonymousClassDeclarationContext.java <83:82 83:87>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getQualifiedName() [AnonymousClassDeclarationContext.java <53:63 53:78>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AnonymousClassDeclarationContext.java <54:12 54:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() [AnonymousClassDeclarationContext.java <54:51 54:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <56:35 56:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.solveMethodInType(com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <83:33 83:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [AnonymousClassDeclarationContext.java <56:62 56:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [AnonymousClassDeclarationContext.java <64:17 64:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [AnonymousClassDeclarationContext.java <75:26 75:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [AnonymousClassDeclarationContext.java <89:15 89:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.add(java.util.List<E>.E) [AnonymousClassDeclarationContext.java <65:28 65:30>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.add(java.util.List<E>.E) [AnonymousClassDeclarationContext.java <76:26 76:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.add(java.util.List<E>.E) [AnonymousClassDeclarationContext.java <90:26 90:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [AnonymousClassDeclarationContext.java <65:36 65:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [AnonymousClassDeclarationContext.java <76:45 76:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [AnonymousClassDeclarationContext.java <90:34 90:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.isEmpty() [AnonymousClassDeclarationContext.java <72:26 72:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.isEmpty() [AnonymousClassDeclarationContext.java <81:26 81:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <74:23 74:33>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AnonymousClassDeclarationContext.java <74:11 74:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.isInterface() [AnonymousClassDeclarationContext.java <81:79 81:89>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getSuperTypeDeclaration() [AnonymousClassDeclarationContext.java <81:53 81:75>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration.ReflectionClassDeclaration(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <83:55 83:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration [AnonymousClassDeclarationContext.java <83:55 83:80>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.findMostApplicable(java.util.List<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration>, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <94:34 94:51>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <101:43 101:51>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [AnonymousClassDeclarationContext.java <100:4 100:11>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <101:26 101:40>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <106:30 106:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <119:30 119:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <134:30 134:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <101:10 101:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <106:14 106:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <119:14 119:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <134:14 134:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <101:26 101:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <106:30 106:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <119:30 119:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <134:30 134:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AnonymousClassDeclarationContext.java <161:14 161:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AnonymousClassDeclarationContext.java <101:53 101:58>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AnonymousClassDeclarationContext.java <101:66 101:75>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.ast.body.TypeDeclaration [AnonymousClassDeclarationContext.java <102:10 102:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [AnonymousClassDeclarationContext.java <102:5 102:8>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [AnonymousClassDeclarationContext.java <102:41 102:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.TypeDeclaration<T> [AnonymousClassDeclarationContext.java <104:63 104:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<T> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.findMembersOfKind<T>(java.lang.Class<T>) [AnonymousClassDeclarationContext.java <104:14 104:30>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <103:9 103:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <154:35 154:47>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <106:14 106:45>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <119:14 119:45>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <134:14 134:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [AnonymousClassDeclarationContext.java <106:5 106:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [AnonymousClassDeclarationContext.java <119:5 119:12>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [AnonymousClassDeclarationContext.java <134:5 134:12>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<U> java.util.Optional<T>.map<U>(java.util.function.Function<? super T, ? extends U>) [AnonymousClassDeclarationContext.java <111:14 111:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<U> java.util.Optional<T>.map<U>(java.util.function.Function<? super T, ? extends U>) [AnonymousClassDeclarationContext.java <124:14 124:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<U> java.util.Optional<T>.map<U>(java.util.function.Function<? super T, ? extends U>) [AnonymousClassDeclarationContext.java <137:14 137:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<U> java.util.Optional<T>.map<U>(java.util.function.Function<? super T, ? extends U>) [AnonymousClassDeclarationContext.java <144:14 144:16>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst() [AnonymousClassDeclarationContext.java <110:14 110:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst() [AnonymousClassDeclarationContext.java <123:14 123:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst() [AnonymousClassDeclarationContext.java <143:14 143:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [AnonymousClassDeclarationContext.java <109:14 109:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [AnonymousClassDeclarationContext.java <122:14 122:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [AnonymousClassDeclarationContext.java <142:14 142:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [AnonymousClassDeclarationContext.java <108:14 108:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [AnonymousClassDeclarationContext.java <121:14 121:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [AnonymousClassDeclarationContext.java <141:14 141:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AnonymousClassDeclarationContext.java <109:68 109:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AnonymousClassDeclarationContext.java <142:45 142:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AnonymousClassDeclarationContext.java <156:51 156:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [AnonymousClassDeclarationContext.java <162:49 162:54>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [AnonymousClassDeclarationContext.java <109:60 109:64>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [AnonymousClassDeclarationContext.java <127:75 127:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [AnonymousClassDeclarationContext.java <109:50 109:56>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [AnonymousClassDeclarationContext.java <122:87 122:93>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [AnonymousClassDeclarationContext.java <127:65 127:71>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AnonymousClassDeclarationContext.java <112:38 112:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AnonymousClassDeclarationContext.java <145:38 145:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AnonymousClassDeclarationContext.java <157:32 157:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AnonymousClassDeclarationContext.java <163:36 163:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.TypeDeclaration<?>) [AnonymousClassDeclarationContext.java <113:59 113:76>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <113:43 113:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [AnonymousClassDeclarationContext.java <115:19 115:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [AnonymousClassDeclarationContext.java <130:24 130:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.Optional<T>.isPresent() [AnonymousClassDeclarationContext.java <149:28 149:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [AnonymousClassDeclarationContext.java <116:25 116:27>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [AnonymousClassDeclarationContext.java <131:29 131:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.get() [AnonymousClassDeclarationContext.java <150:33 150:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.startsWith(java.lang.String) [AnonymousClassDeclarationContext.java <122:42 122:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [AnonymousClassDeclarationContext.java <122:60 122:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <127:27 127:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <171:24 171:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(com.github.javaparser.ast.Node, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <126:27 126:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String java.lang.String.substring(int) [AnonymousClassDeclarationContext.java <127:42 127:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> int java.lang.String.length() [AnonymousClassDeclarationContext.java <127:83 127:88>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.orElse(java.util.Optional<T>.T) [AnonymousClassDeclarationContext.java <139:57 139:62>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T>.T java.util.Optional<T>.orElse(java.util.Optional<T>.T) [AnonymousClassDeclarationContext.java <140:14 140:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.expr.ObjectCreationExpr.getTypeArguments() [AnonymousClassDeclarationContext.java <136:14 136:29>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [AnonymousClassDeclarationContext.java <135:9 135:19>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.Type>> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<N>.getTypeArguments() [AnonymousClassDeclarationContext.java <138:57 138:72>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<N> -> ? [AnonymousClassDeclarationContext.java <138:46 138:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<N> [AnonymousClassDeclarationContext.java <138:24 138:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.NodeList() [AnonymousClassDeclarationContext.java <139:68 139:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N>.NodeList() [AnonymousClassDeclarationContext.java <140:25 140:34>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N> [AnonymousClassDeclarationContext.java <139:68 139:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<N> [AnonymousClassDeclarationContext.java <140:25 140:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.Node.toString() [AnonymousClassDeclarationContext.java <142:34 142:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.Node.toString() [AnonymousClassDeclarationContext.java <146:85 146:92>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <146:30 146:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [AnonymousClassDeclarationContext.java <146:30 146:52>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter.TypeParameter(java.lang.String) [AnonymousClassDeclarationContext.java <146:58 146:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [AnonymousClassDeclarationContext.java <146:58 146:70>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AnonymousClassDeclarationContext.java <154:10 154:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration.getAncestors() [AnonymousClassDeclarationContext.java <154:49 154:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [AnonymousClassDeclarationContext.java <156:41 156:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [AnonymousClassDeclarationContext.java <162:39 162:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [AnonymousClassDeclarationContext.java <156:20 156:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [AnonymousClassDeclarationContext.java <157:48 157:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [AnonymousClassDeclarationContext.java <161:65 161:82>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.internalTypes() [AnonymousClassDeclarationContext.java <161:86 161:98>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.UnsupportedOperationException [AnonymousClassDeclarationContext.java <166:16 166:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AnonymousClassDeclarationContext.java <171:12 171:20>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <175:54 175:64>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [AnonymousClassDeclarationContext.java <174:4 174:11>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [AnonymousClassDeclarationContext.java <175:26 175:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [AnonymousClassDeclarationContext.java <175:10 175:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [AnonymousClassDeclarationContext.java <175:36 175:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [AnonymousClassDeclarationContext.java <175:66 175:71>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [AnonymousClassDeclarationContext.java <176:66 176:75>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static void com.google.common.base.Preconditions.checkArgument(boolean) [AnonymousClassDeclarationContext.java <177:19 177:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasVisibleField(java.lang.String) [AnonymousClassDeclarationContext.java <179:23 179:37>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <179:9 179:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.myDeclaration [AnonymousClassDeclarationContext.java <180:37 180:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [AnonymousClassDeclarationContext.java <180:30 180:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getVisibleField(java.lang.String) [AnonymousClassDeclarationContext.java <180:51 180:65>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [AnonymousClassDeclarationContext.java <183:24 183:34>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [AnonymousClassDeclarationContext.java <183:12 183:20>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<101:89> [AnonymousClassDeclarationContext.java <101:89 101:89>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<101:89> [AnonymousClassDeclarationContext.java <172:3 172:3>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<115:31> [AnonymousClassDeclarationContext.java <115:31 115:31>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<115:31> [AnonymousClassDeclarationContext.java <117:5 117:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<130:37> [AnonymousClassDeclarationContext.java <130:37 130:37>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<130:37> [AnonymousClassDeclarationContext.java <132:5 132:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<149:41> [AnonymousClassDeclarationContext.java <149:41 149:41>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<149:41> [AnonymousClassDeclarationContext.java <151:5 151:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<154:65> [AnonymousClassDeclarationContext.java <154:65 154:65>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<154:65> [AnonymousClassDeclarationContext.java <169:5 169:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<156:65> [AnonymousClassDeclarationContext.java <156:65 156:65>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<156:65> [AnonymousClassDeclarationContext.java <158:7 158:7>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<160:11> [AnonymousClassDeclarationContext.java <160:11 160:11>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<160:11> [AnonymousClassDeclarationContext.java <166:7 166:7>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<161:103> [AnonymousClassDeclarationContext.java <161:103 161:103>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<161:103> [AnonymousClassDeclarationContext.java <165:9 165:9>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<162:63> [AnonymousClassDeclarationContext.java <162:63 162:63>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<162:63> [AnonymousClassDeclarationContext.java <164:11 164:11>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<166:49> [AnonymousClassDeclarationContext.java <166:49 166:49>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<166:49> [AnonymousClassDeclarationContext.java <168:7 168:7>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<176:89> [AnonymousClassDeclarationContext.java <176:89 176:89>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<176:89> [AnonymousClassDeclarationContext.java <184:3 184:3>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<179:46> [AnonymousClassDeclarationContext.java <179:46 179:46>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<179:46> [AnonymousClassDeclarationContext.java <181:5 181:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<30:101> [AnonymousClassDeclarationContext.java <30:101 30:101>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<30:101> [AnonymousClassDeclarationContext.java <186:1 186:1>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<35:91> [AnonymousClassDeclarationContext.java <35:91 35:91>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<35:91> [AnonymousClassDeclarationContext.java <39:3 39:3>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<45:80> [AnonymousClassDeclarationContext.java <45:80 45:80>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<45:80> [AnonymousClassDeclarationContext.java <98:3 98:3>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<53:84> [AnonymousClassDeclarationContext.java <53:84 53:84>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<53:84> [AnonymousClassDeclarationContext.java <68:5 68:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<54:67> [AnonymousClassDeclarationContext.java <54:67 54:67>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<54:67> [AnonymousClassDeclarationContext.java <67:7 67:7>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<64:29> [AnonymousClassDeclarationContext.java <64:29 64:29>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<64:29> [AnonymousClassDeclarationContext.java <66:9 66:9>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<72:37> [AnonymousClassDeclarationContext.java <72:37 72:37>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<72:37> [AnonymousClassDeclarationContext.java <78:5 78:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<75:38> [AnonymousClassDeclarationContext.java <75:38 75:38>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<75:38> [AnonymousClassDeclarationContext.java <77:7 77:7>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<81:94> [AnonymousClassDeclarationContext.java <81:94 81:94>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<81:94> [AnonymousClassDeclarationContext.java <92:5 92:5>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<89:27> [AnonymousClassDeclarationContext.java <89:27 89:27>]
LOCAL_SYMBOL: AnonymousClassDeclarationContext.java<89:27> [AnonymousClassDeclarationContext.java <91:7 91:7>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext<0> [AnonymousClassDeclarationContext.java <35:62 35:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext<0> [AnonymousClassDeclarationContext.java <36:11 36:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext<0> [AnonymousClassDeclarationContext.java <37:33 37:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext<1> [AnonymousClassDeclarationContext.java <35:79 35:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.AnonymousClassDeclarationContext<1> [AnonymousClassDeclarationContext.java <36:17 36:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<0> [AnonymousClassDeclarationContext.java <42:64 42:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<0> [AnonymousClassDeclarationContext.java <50:45 50:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<0> [AnonymousClassDeclarationContext.java <57:53 57:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<0> [AnonymousClassDeclarationContext.java <74:35 74:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<0> [AnonymousClassDeclarationContext.java <85:51 85:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<0> [AnonymousClassDeclarationContext.java <95:53 95:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<10> [AnonymousClassDeclarationContext.java <73:42 73:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<10> [AnonymousClassDeclarationContext.java <75:11 75:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<10> [AnonymousClassDeclarationContext.java <76:30 76:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<11> [AnonymousClassDeclarationContext.java <82:42 82:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<11> [AnonymousClassDeclarationContext.java <89:11 89:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<11> [AnonymousClassDeclarationContext.java <90:30 90:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<1> [AnonymousClassDeclarationContext.java <43:68 43:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<1> [AnonymousClassDeclarationContext.java <58:53 58:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<1> [AnonymousClassDeclarationContext.java <74:41 74:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<1> [AnonymousClassDeclarationContext.java <86:51 86:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<1> [AnonymousClassDeclarationContext.java <96:53 96:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<2> [AnonymousClassDeclarationContext.java <44:65 44:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<2> [AnonymousClassDeclarationContext.java <50:56 50:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<2> [AnonymousClassDeclarationContext.java <59:53 59:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<2> [AnonymousClassDeclarationContext.java <74:57 74:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<3> [AnonymousClassDeclarationContext.java <45:68 45:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<3> [AnonymousClassDeclarationContext.java <60:53 60:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<3> [AnonymousClassDeclarationContext.java <74:69 74:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<3> [AnonymousClassDeclarationContext.java <84:82 84:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<3> [AnonymousClassDeclarationContext.java <88:51 88:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<3> [AnonymousClassDeclarationContext.java <97:53 97:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <46:29 46:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <65:11 65:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <72:9 72:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <76:9 76:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <81:9 81:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <90:9 90:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<4> [AnonymousClassDeclarationContext.java <94:53 94:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<7> [AnonymousClassDeclarationContext.java <54:26 54:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<7> [AnonymousClassDeclarationContext.java <56:53 56:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<9> [AnonymousClassDeclarationContext.java <55:44 55:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<9> [AnonymousClassDeclarationContext.java <64:13 64:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveMethod<9> [AnonymousClassDeclarationContext.java <65:32 65:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<0> [AnonymousClassDeclarationContext.java <175:73 175:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<0> [AnonymousClassDeclarationContext.java <179:39 179:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<0> [AnonymousClassDeclarationContext.java <180:67 180:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<0> [AnonymousClassDeclarationContext.java <183:36 183:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<1> [AnonymousClassDeclarationContext.java <176:77 176:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<1> [AnonymousClassDeclarationContext.java <177:33 177:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveSymbol<1> [AnonymousClassDeclarationContext.java <183:42 183:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <101:60 101:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <109:75 109:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <122:37 122:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <127:37 127:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <142:52 142:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <156:58 156:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <162:56 162:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<0> [AnonymousClassDeclarationContext.java <171:34 171:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<15> [AnonymousClassDeclarationContext.java <134:48 134:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<15> [AnonymousClassDeclarationContext.java <149:9 149:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<15> [AnonymousClassDeclarationContext.java <150:14 150:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<1> [AnonymousClassDeclarationContext.java <101:77 101:86>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<1> [AnonymousClassDeclarationContext.java <113:47 113:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<1> [AnonymousClassDeclarationContext.java <126:52 126:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<1> [AnonymousClassDeclarationContext.java <128:37 128:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<1> [AnonymousClassDeclarationContext.java <147:54 147:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<1> [AnonymousClassDeclarationContext.java <171:40 171:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<23> [AnonymousClassDeclarationContext.java <154:24 154:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<23> [AnonymousClassDeclarationContext.java <156:11 156:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<23> [AnonymousClassDeclarationContext.java <157:39 157:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<23> [AnonymousClassDeclarationContext.java <161:56 161:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<25> [AnonymousClassDeclarationContext.java <161:30 161:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<25> [AnonymousClassDeclarationContext.java <162:15 162:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<25> [AnonymousClassDeclarationContext.java <163:43 163:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<27> [AnonymousClassDeclarationContext.java <166:46 166:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<2> [AnonymousClassDeclarationContext.java <102:58 102:73>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<2> [AnonymousClassDeclarationContext.java <107:9 107:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<2> [AnonymousClassDeclarationContext.java <120:9 120:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<3> [AnonymousClassDeclarationContext.java <106:48 106:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<3> [AnonymousClassDeclarationContext.java <115:8 115:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<3> [AnonymousClassDeclarationContext.java <116:14 116:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<9> [AnonymousClassDeclarationContext.java <119:48 119:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<9> [AnonymousClassDeclarationContext.java <130:9 130:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AnonymousClassDeclarationContext.solveType<9> [AnonymousClassDeclarationContext.java <131:14 131:27>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<14> [AnonymousClassDeclarationContext.java <124:18 124:29>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<14> [AnonymousClassDeclarationContext.java <126:38 126:49>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<14> [AnonymousClassDeclarationContext.java <127:52 127:63>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<17> [AnonymousClassDeclarationContext.java <137:18 137:22>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<17> [AnonymousClassDeclarationContext.java <138:50 138:54>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<22> [AnonymousClassDeclarationContext.java <144:18 144:29>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<22> [AnonymousClassDeclarationContext.java <146:72 146:83>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [AnonymousClassDeclarationContext.java <111:18 111:29>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<8> [AnonymousClassDeclarationContext.java <113:78 113:89>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<10> [AnonymousClassDeclarationContext.java <122:21 122:32>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<10> [AnonymousClassDeclarationContext.java <122:74 122:85>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<18> [AnonymousClassDeclarationContext.java <142:21 142:24>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<18> [AnonymousClassDeclarationContext.java <142:29 142:32>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<4> [AnonymousClassDeclarationContext.java <109:21 109:32>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<4> [AnonymousClassDeclarationContext.java <109:37 109:48>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [AnonymousClassDeclarationContext.java <50:21 50:21>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [AnonymousClassDeclarationContext.java <50:26 50:26>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<5> [AnonymousClassDeclarationContext.java <50:70 50:70>]
COMMENT: comment [AnonymousClassDeclarationContext.java <27:1 29:3>]
COMMENT: comment [AnonymousClassDeclarationContext.java <61:9 61:88>]
COMMENT: comment [AnonymousClassDeclarationContext.java <62:9 62:65>]
COMMENT: comment [AnonymousClassDeclarationContext.java <63:9 63:82>]
COMMENT: comment [AnonymousClassDeclarationContext.java <70:5 70:79>]
COMMENT: comment [AnonymousClassDeclarationContext.java <71:5 71:20>]
COMMENT: comment [AnonymousClassDeclarationContext.java <80:5 80:93>]
COMMENT: comment [AnonymousClassDeclarationContext.java <153:5 153:60>]
COMMENT: comment [AnonymousClassDeclarationContext.java <155:7 155:148>]
COMMENT: comment [AnonymousClassDeclarationContext.java <159:7 159:80>]
COMMENT: comment [AnonymousClassDeclarationContext.java <167:9 167:48>]
