FILE: Navigator.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparser [Navigator.java <17:44 17:53>]
QUALIFIER: com.github.javaparser.symbolsolver [Navigator.java <17:31 17:42>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [Navigator.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [Navigator.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [Navigator.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [Navigator.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [Navigator.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [Navigator.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [Navigator.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [Navigator.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [Navigator.java <26:19 26:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [Navigator.java <17:13 17:18>]
QUALIFIER: com.github [Navigator.java <19:12 19:17>]
QUALIFIER: com.github [Navigator.java <20:12 20:17>]
QUALIFIER: com.github [Navigator.java <21:12 21:17>]
QUALIFIER: com.github [Navigator.java <22:12 22:17>]
QUALIFIER: com.github [Navigator.java <23:12 23:17>]
QUALIFIER: com.github [Navigator.java <24:12 24:17>]
QUALIFIER: com.github [Navigator.java <25:12 25:17>]
QUALIFIER: com.github [Navigator.java <26:12 26:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [Navigator.java <17:9 17:11>]
QUALIFIER: com [Navigator.java <19:8 19:10>]
QUALIFIER: com [Navigator.java <20:8 20:10>]
QUALIFIER: com [Navigator.java <21:8 21:10>]
QUALIFIER: com [Navigator.java <22:8 22:10>]
QUALIFIER: com [Navigator.java <23:8 23:10>]
QUALIFIER: com [Navigator.java <24:8 24:10>]
QUALIFIER: com [Navigator.java <25:8 25:10>]
QUALIFIER: com [Navigator.java <26:8 26:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast [Navigator.java <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <20:30 20:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <21:30 21:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <22:30 22:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <23:30 23:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <24:30 24:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <25:30 25:32>]
QUALIFIER: com.github.javaparser.ast [Navigator.java <26:30 26:32>]
SYMBOL_PACKAGE: com.github.javaparser.ast
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast.expr [Navigator.java <22:34 22:37>]
QUALIFIER: com.github.javaparser.ast.expr [Navigator.java <23:34 23:37>]
QUALIFIER: com.github.javaparser.ast.expr [Navigator.java <24:34 24:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.expr
QUALIFIER: com.github.javaparser.ast.stmt [Navigator.java <25:34 25:37>]
QUALIFIER: com.github.javaparser.ast.stmt [Navigator.java <26:34 26:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.stmt
QUALIFIER: java.util [Navigator.java <28:13 28:16>]
QUALIFIER: java.util [Navigator.java <29:13 29:16>]
QUALIFIER: java.util [Navigator.java <30:13 30:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [Navigator.java <28:8 28:11>]
QUALIFIER: java [Navigator.java <29:8 29:11>]
QUALIFIER: java [Navigator.java <30:8 30:11>]
SYMBOL_PACKAGE: java
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparser.Navigator [Navigator.java <37:1 <37:20 37:28> 295:1>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.javaparser.Navigator.Navigator() [Navigator.java <39:5 <39:5 <39:13 39:21> 39:23> 41:5>]
SYMBOL_METHOD: public static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) [Navigator.java <43:5 <43:5 <43:24 43:36> 43:47> 46:5>]
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.orElse(java.util.Optional<T>.T)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode()
SYMBOL_METHOD: public static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <48:5 <48:5 <48:48 48:55> 48:97> 61:5>]
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: boolean com.github.javaparser.ast.NodeList<N>.isEmpty()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
QUALIFIER: java.util.Optional [Navigator.java <50:20 50:27>]
QUALIFIER: java.util.Optional [Navigator.java <66:45 66:52>]
QUALIFIER: java.util.Optional [Navigator.java <69:24 69:31>]
QUALIFIER: java.util.Optional [Navigator.java <238:20 238:27>]
QUALIFIER: java.util.Optional [Navigator.java <240:20 240:27>]
SYMBOL_METHOD: private static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName(java.lang.String) [Navigator.java <250:5 <250:5 <250:27 250:42> 250:64> 252:5>]
SYMBOL_METHOD: java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst()
SYMBOL_METHOD: java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName()
SYMBOL_METHOD: private static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) [Navigator.java <254:5 <254:5 <254:27 254:42> 254:64> 259:5>]
SYMBOL_METHOD: boolean java.util.Optional<T>.isPresent()
SYMBOL_METHOD: boolean java.lang.String.isEmpty()
SYMBOL_METHOD: public static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) [Navigator.java <63:5 <63:5 <63:48 63:55> 63:100> 78:5>]
SYMBOL_METHOD: java.util.Optional<T>.T java.util.Optional<T>.get()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
SYMBOL_METHOD: public static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <80:5 <80:5 <80:47 80:57> 80:99> 86:5>]
SYMBOL_METHOD: public static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <196:5 <196:5 <196:47 196:68> 196:123> 206:5>]
SYMBOL_METHOD: boolean com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
SYMBOL_METHOD: java.lang.IllegalStateException.IllegalStateException(java.lang.String)
SYMBOL_METHOD: public static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <88:5 <88:5 <88:35 88:44> 88:86> 97:5>]
SYMBOL_METHOD: public static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) [Navigator.java <99:5 <99:5 <99:37 99:48> 99:84> 116:5>]
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.CallableDeclaration<T>.getName()
SYMBOL_METHOD: public static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) [Navigator.java <118:5 <118:5 <118:38 118:48> 118:93> 130:5>]
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.VariableDeclarator.getName()
SYMBOL_METHOD: public static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <132:5 <132:5 <132:28 132:45> 132:69> 146:5>]
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName()
SYMBOL_METHOD: java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes()
SYMBOL_METHOD: public static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <148:5 <148:5 <148:30 148:43> 148:67> 162:5>]
SYMBOL_METHOD: public static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <164:5 <164:5 <164:34 164:47> 164:77> 178:5>]
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.MethodCallExpr.getName()
SYMBOL_METHOD: public static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <180:5 <180:5 <180:38 180:62> 180:86> 194:5>]
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: public static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) [Navigator.java <208:5 <208:5 <208:30 208:39> 208:50> 215:5>]
SYMBOL_METHOD: private static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) [Navigator.java <261:5 <261:5 <261:31 261:46> 261:57> 272:5>]
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException()
SYMBOL_METHOD: public static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <217:5 <217:5 <217:25 217:44> 217:71> 224:5>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>.N [Navigator.java <217:20 217:20>]
SYMBOL_METHOD: private static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <274:5 <274:5 <274:26 274:51> 274:78> 285:5>]
SYMBOL_METHOD: public static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <226:5 <226:5 <226:31 226:54> 226:81> 230:5>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <226:20 226:20>]
SYMBOL_METHOD: java.util.LinkedList<E>.LinkedList()
SYMBOL_METHOD: private static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) [Navigator.java <287:5 <287:5 <287:29 287:58> 287:104> 294:5>]
SYMBOL_METHOD: public static com.github.javaparser.ast.stmt.ReturnStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt(com.github.javaparser.ast.body.MethodDeclaration) [Navigator.java <232:5 <232:5 <232:30 232:43> 232:69> 234:5>]
SYMBOL_METHOD: public static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <236:5 <236:5 <236:48 236:59> 236:86> 244:5>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>.N [Navigator.java <236:20 236:20>]
SYMBOL_METHOD: boolean java.lang.Class<T>.isInstance(java.lang.Object)
SYMBOL_METHOD: java.lang.Class<T>.T java.lang.Class<T>.cast(java.lang.Object)
SYMBOL_METHOD: java.lang.String java.lang.String.split(java.lang.String, int)
SYMBOL_METHOD: boolean java.lang.String.contains(java.lang.CharSequence)
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>.N [Navigator.java <274:21 274:21>]
SYMBOL_TYPE_PARAMETER: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>.N [Navigator.java <287:21 287:21>]
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.CompilationUnit [Navigator.java <19:34 19:48>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.Node [Navigator.java <20:34 20:37>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.body [Navigator.java <21:34 21:37>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.expr.MethodCallExpr [Navigator.java <22:39 22:52>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.expr.NameExpr [Navigator.java <23:39 23:46>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.expr.SimpleName [Navigator.java <24:39 24:48>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.stmt.ReturnStmt [Navigator.java <25:39 25:48>]
REFERENCE_IMPORT: Navigator.java -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <26:39 26:48>]
REFERENCE_IMPORT: Navigator.java -> java.util.LinkedList<E> [Navigator.java <28:18 28:27>]
REFERENCE_IMPORT: Navigator.java -> java.util.List<E> [Navigator.java <29:18 29:21>]
REFERENCE_IMPORT: Navigator.java -> java.util.Optional<T> [Navigator.java <30:18 30:25>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [Navigator.java <43:19 43:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [Navigator.java <43:38 43:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [Navigator.java <44:9 44:12>]
REFERENCE_CALL: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) -> java.util.Optional<T>.T java.util.Optional<T>.orElse(java.util.Optional<T>.T) [Navigator.java <44:44 44:49>]
REFERENCE_CALL: static com.github.javaparser.ast.Node com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode(com.github.javaparser.ast.Node) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [Navigator.java <44:28 44:40>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <48:28 48:45>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <54:18 54:35>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <63:28 63:45>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <66:18 66:35>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <89:18 89:35>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <197:18 197:35>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T> [Navigator.java <48:19 48:26>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T> [Navigator.java <54:9 54:16>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <48:44 48:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <54:34 54:34>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <63:44 63:44>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <63:73 63:73>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <66:34 66:34>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <68:67 68:67>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <69:53 69:53>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <89:34 89:34>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <99:66 99:66>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.TypeDeclaration<T> -> ? [Navigator.java <197:34 197:34>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <48:28 48:42>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <54:18 54:32>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.CompilationUnit [Navigator.java <48:57 48:71>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String [Navigator.java <48:77 48:82>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String [Navigator.java <53:15 53:20>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String [Navigator.java <56:15 56:20>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean com.github.javaparser.ast.NodeList<N>.isEmpty() [Navigator.java <49:27 49:33>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [Navigator.java <49:16 49:23>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.ast.CompilationUnit.getTypes() [Navigator.java <54:48 54:55>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [Navigator.java <50:29 50:33>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName(java.lang.String) [Navigator.java <53:33 53:48>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.findFirst() [Navigator.java <54:120 54:128>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.stream.Stream<java.util.stream.Stream<T>.T> java.util.stream.Stream<T>.filter(java.util.function.Predicate<? super T>) [Navigator.java <54:68 54:73>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [Navigator.java <54:59 54:64>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <54:102 54:107>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <54:94 54:98>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [Navigator.java <54:84 54:90>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) [Navigator.java <56:38 56:53>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean java.util.Optional<T>.isPresent() [Navigator.java <57:18 57:26>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean java.lang.String.isEmpty() [Navigator.java <57:48 57:54>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) [Navigator.java <58:20 58:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <58:34 58:36>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.util.Optional<T> [Navigator.java <63:19 63:26>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.util.Optional<T> [Navigator.java <66:9 66:16>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <63:28 63:42>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <63:57 63:71>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <66:18 66:32>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <68:30 68:44>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <68:51 68:65>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <69:37 69:51>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.String [Navigator.java <63:80 63:85>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.String [Navigator.java <64:15 64:20>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.String [Navigator.java <73:15 73:20>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName(java.lang.String) [Navigator.java <64:33 64:48>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [Navigator.java <66:54 66:58>]
REFERENCE_TYPE_USAGE: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <67:14 67:17>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers() [Navigator.java <67:26 67:35>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <68:92 68:97>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <68:84 68:88>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.TypeDeclaration<T>.getName() [Navigator.java <68:74 68:80>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [Navigator.java <69:33 69:34>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) [Navigator.java <73:38 73:53>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> boolean java.util.Optional<T>.isPresent() [Navigator.java <74:18 74:26>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> boolean java.lang.String.isEmpty() [Navigator.java <74:48 74:54>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) [Navigator.java <75:20 75:27>]
REFERENCE_CALL: static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <75:34 75:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <80:19 80:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <81:9 81:35>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.CompilationUnit [Navigator.java <80:59 80:73>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String [Navigator.java <80:79 80:84>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <81:42 81:63>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface() [Navigator.java <82:16 82:26>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <83:23 83:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <83:23 83:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.EnumDeclaration [Navigator.java <88:19 88:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.EnumDeclaration [Navigator.java <93:36 93:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.EnumDeclaration [Navigator.java <96:17 96:31>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.CompilationUnit [Navigator.java <88:46 88:60>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String [Navigator.java <88:66 88:71>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T> [Navigator.java <89:9 89:16>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <89:18 89:32>]
REFERENCE_CALL: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <89:44 89:51>]
REFERENCE_CALL: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean java.util.Optional<T>.isPresent() [Navigator.java <90:18 90:26>]
REFERENCE_CALL: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <91:23 91:43>]
REFERENCE_CALL: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <94:23 94:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <91:23 91:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <94:23 94:43>]
REFERENCE_CALL: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <93:19 93:21>]
REFERENCE_CALL: static com.github.javaparser.ast.body.EnumDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <96:38 96:40>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.MethodDeclaration [Navigator.java <99:19 99:35>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.MethodDeclaration [Navigator.java <100:9 100:25>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.MethodDeclaration [Navigator.java <102:31 102:47>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.MethodDeclaration [Navigator.java <103:17 103:33>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.MethodDeclaration [Navigator.java <103:41 103:57>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <99:50 99:64>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.String [Navigator.java <99:73 99:78>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.BodyDeclaration<T> -> ? [Navigator.java <101:30 101:30>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.ast.body.BodyDeclaration<T> -> ? [Navigator.java <119:30 119:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.body.BodyDeclaration<T> [Navigator.java <101:14 101:28>]
REFERENCE_CALL: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers() [Navigator.java <101:41 101:50>]
REFERENCE_CALL: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <104:42 104:47>]
REFERENCE_CALL: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <104:34 104:38>]
REFERENCE_CALL: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.CallableDeclaration<T>.getName() [Navigator.java <104:24 104:30>]
REFERENCE_CALL: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <106:35 106:55>]
REFERENCE_CALL: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <113:23 113:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <106:35 106:55>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.MethodDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod(com.github.javaparser.ast.body.TypeDeclaration<?>, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <113:23 113:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <118:19 118:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <122:22 122:39>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <118:50 118:76>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> java.lang.String [Navigator.java <118:82 118:87>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.BodyDeclaration<T> [Navigator.java <119:14 119:28>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.BodyDeclaration<?>> com.github.javaparser.ast.body.TypeDeclaration<T>.getMembers() [Navigator.java <119:41 119:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.FieldDeclaration [Navigator.java <120:31 120:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.FieldDeclaration [Navigator.java <121:17 121:32>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.body.FieldDeclaration [Navigator.java <121:40 121:55>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.VariableDeclarator> com.github.javaparser.ast.body.FieldDeclaration.getVariables() [Navigator.java <122:49 122:60>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <123:46 123:51>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <123:38 123:42>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.VariableDeclarator.getName() [Navigator.java <123:28 123:34>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <129:19 129:39>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandField(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <129:19 129:39>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.NameExpr [Navigator.java <132:19 132:26>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.NameExpr [Navigator.java <133:29 133:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.NameExpr [Navigator.java <134:13 134:20>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.NameExpr [Navigator.java <134:34 134:41>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.NameExpr [Navigator.java <140:13 140:20>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <132:47 132:50>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <139:14 139:17>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String [Navigator.java <132:58 132:63>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName() [Navigator.java <135:26 135:32>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.NameExpr.getName() [Navigator.java <135:56 135:62>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <135:74 135:79>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <135:66 135:70>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <139:32 139:44>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) -> static com.github.javaparser.ast.expr.NameExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <140:28 140:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName [Navigator.java <148:19 148:28>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName [Navigator.java <149:29 149:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName [Navigator.java <150:13 150:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName [Navigator.java <150:36 150:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName [Navigator.java <156:13 156:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <148:45 148:48>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <155:14 155:17>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String [Navigator.java <148:56 148:61>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <151:26 151:30>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <151:54 151:58>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <151:62 151:67>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <155:32 155:44>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) -> static com.github.javaparser.ast.expr.SimpleName com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <156:30 156:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.MethodCallExpr [Navigator.java <164:19 164:32>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.MethodCallExpr [Navigator.java <165:29 165:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.MethodCallExpr [Navigator.java <166:13 166:26>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.MethodCallExpr [Navigator.java <166:46 166:59>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.MethodCallExpr [Navigator.java <172:13 172:26>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <164:49 164:52>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <171:14 171:17>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String [Navigator.java <164:60 164:65>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <167:50 167:55>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <167:42 167:46>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.expr.MethodCallExpr.getName() [Navigator.java <167:32 167:38>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <171:32 171:44>]
REFERENCE_CALL: static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) -> static com.github.javaparser.ast.expr.MethodCallExpr com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <172:34 172:47>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <180:19 180:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <181:29 181:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <182:13 182:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <182:54 182:71>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.body.VariableDeclarator [Navigator.java <188:13 188:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <180:64 180:67>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.Node [Navigator.java <187:14 187:17>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String [Navigator.java <180:75 180:80>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [Navigator.java <183:54 183:59>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [Navigator.java <183:46 183:50>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.body.VariableDeclarator.getName() [Navigator.java <183:36 183:42>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <187:32 187:44>]
REFERENCE_CALL: static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) -> static com.github.javaparser.ast.body.VariableDeclarator com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration(com.github.javaparser.ast.Node, java.lang.String) [Navigator.java <188:38 188:62>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <196:19 196:45>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <201:36 201:62>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <204:9 204:35>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [Navigator.java <204:43 204:69>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.CompilationUnit [Navigator.java <196:70 196:84>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String [Navigator.java <196:103 196:108>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T> [Navigator.java <197:9 197:16>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> com.github.javaparser.ast.body.TypeDeclaration<T> [Navigator.java <197:18 197:32>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> static java.util.Optional<com.github.javaparser.ast.body.TypeDeclaration<?>> com.github.javaparser.symbolsolver.javaparser.Navigator.findType(com.github.javaparser.ast.CompilationUnit, java.lang.String) [Navigator.java <197:44 197:51>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> boolean java.util.Optional<T>.isPresent() [Navigator.java <198:18 198:26>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <199:23 199:43>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException.IllegalStateException(java.lang.String) [Navigator.java <202:23 202:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <199:23 199:43>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.IllegalStateException [Navigator.java <202:23 202:43>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <201:19 201:21>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <202:97 202:99>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <204:76 204:78>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.String java.lang.Class<T>.getCanonicalName() [Navigator.java <202:114 202:129>]
REFERENCE_CALL: static com.github.javaparser.ast.body.ClassOrInterfaceDeclaration com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface(com.github.javaparser.ast.CompilationUnit, java.lang.String) -> java.lang.Class<?> java.lang.Object.getClass() [Navigator.java <202:103 202:110>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <208:19 208:28>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <209:9 209:18>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [Navigator.java <208:41 208:44>]
REFERENCE_CALL: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) [Navigator.java <209:26 209:41>]
REFERENCE_CALL: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) -> java.lang.IllegalArgumentException.IllegalArgumentException() [Navigator.java <211:23 211:46>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch(com.github.javaparser.ast.Node) -> java.lang.IllegalArgumentException [Navigator.java <211:23 211:46>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>.N [Navigator.java <217:23 217:23>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>.N [Navigator.java <217:63 217:63>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>.N [Navigator.java <218:9 218:9>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.ast.Node [Navigator.java <217:46 217:49>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>.N [Navigator.java <217:63 217:63>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.Class<T> [Navigator.java <217:57 217:61>]
REFERENCE_CALL: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <218:17 218:42>]
REFERENCE_CALL: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.IllegalArgumentException.IllegalArgumentException() [Navigator.java <220:23 220:46>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.IllegalArgumentException [Navigator.java <220:23 220:46>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <226:28 226:28>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <227:14 227:14>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.List<E> [Navigator.java <226:23 226:26>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.List<E> [Navigator.java <227:9 227:12>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <226:28 226:28>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <226:73 226:73>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <227:14 227:14>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.ast.Node [Navigator.java <226:56 226:59>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>.N [Navigator.java <226:73 226:73>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.Class<T> [Navigator.java <226:67 226:71>]
REFERENCE_CALL: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.LinkedList<E>.LinkedList() [Navigator.java <227:27 227:38>]
REFERENCE_TYPE_USAGE: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.LinkedList<E> [Navigator.java <227:27 227:36>]
REFERENCE_CALL: static java.util.List<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) [Navigator.java <228:9 228:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.ReturnStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt(com.github.javaparser.ast.body.MethodDeclaration) -> com.github.javaparser.ast.stmt.ReturnStmt [Navigator.java <232:19 232:28>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.ReturnStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt(com.github.javaparser.ast.body.MethodDeclaration) -> com.github.javaparser.ast.stmt.ReturnStmt [Navigator.java <233:45 233:54>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.ReturnStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt(com.github.javaparser.ast.body.MethodDeclaration) -> com.github.javaparser.ast.body.MethodDeclaration [Navigator.java <232:45 232:61>]
REFERENCE_CALL: static com.github.javaparser.ast.stmt.ReturnStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt(com.github.javaparser.ast.body.MethodDeclaration) -> static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <233:16 233:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>.N -> com.github.javaparser.ast.Node [Navigator.java <236:30 236:33>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>.N [Navigator.java <236:45 236:45>]
REFERENCE_TYPE_USAGE: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<T> [Navigator.java <236:36 236:43>]
REFERENCE_TYPE_USAGE: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>.N [Navigator.java <236:45 236:45>]
REFERENCE_TYPE_USAGE: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>.N [Navigator.java <236:78 236:78>]
REFERENCE_TYPE_USAGE: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.ast.Node [Navigator.java <236:61 236:64>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>.N [Navigator.java <236:78 236:78>]
REFERENCE_TYPE_USAGE: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.Class<T> [Navigator.java <236:72 236:76>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> boolean java.util.Optional<T>.isPresent() [Navigator.java <237:35 237:43>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [Navigator.java <237:19 237:31>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [Navigator.java <239:42 239:54>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [Navigator.java <240:48 240:60>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getParentNode() [Navigator.java <242:38 242:50>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [Navigator.java <238:29 238:33>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> boolean java.lang.Class<T>.isInstance(java.lang.Object) [Navigator.java <239:26 239:35>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <239:58 239:60>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <240:64 240:66>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.Optional<T>.T java.util.Optional<T>.get() [Navigator.java <242:54 242:56>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [Navigator.java <240:29 240:30>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.Class<T>.T java.lang.Class<T>.cast(java.lang.Object) [Navigator.java <240:38 240:41>]
REFERENCE_CALL: static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> static java.util.Optional<N> com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <242:20 242:31>]
REFERENCE_TYPE_USAGE: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName(java.lang.String) -> java.lang.String [Navigator.java <250:20 250:25>]
REFERENCE_TYPE_USAGE: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName(java.lang.String) -> java.lang.String [Navigator.java <250:44 250:49>]
REFERENCE_CALL: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName(java.lang.String) -> java.lang.String java.lang.String.split(java.lang.String, int) [Navigator.java <251:30 251:34>]
REFERENCE_TYPE_USAGE: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) -> java.lang.String [Navigator.java <254:20 254:25>]
REFERENCE_TYPE_USAGE: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) -> java.lang.String [Navigator.java <254:44 254:49>]
REFERENCE_CALL: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) -> boolean java.lang.String.contains(java.lang.CharSequence) [Navigator.java <255:27 255:34>]
REFERENCE_CALL: static java.lang.String com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName(java.lang.String) -> java.lang.String java.lang.String.split(java.lang.String, int) [Navigator.java <256:34 256:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <261:20 261:29>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <262:29 262:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <263:21 263:30>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.stmt.SwitchStmt [Navigator.java <266:13 266:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [Navigator.java <261:48 261:51>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> com.github.javaparser.ast.Node [Navigator.java <265:14 265:17>]
REFERENCE_CALL: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <265:32 265:44>]
REFERENCE_CALL: static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) -> static com.github.javaparser.ast.stmt.SwitchStmt com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper(com.github.javaparser.ast.Node) [Navigator.java <266:35 266:50>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>.N [Navigator.java <274:24 274:24>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>.N [Navigator.java <274:70 274:70>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>.N [Navigator.java <279:13 279:13>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.ast.Node [Navigator.java <274:53 274:56>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> com.github.javaparser.ast.Node [Navigator.java <278:14 278:17>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>.N [Navigator.java <274:70 274:70>]
REFERENCE_TYPE_USAGE: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.Class<T> [Navigator.java <274:64 274:68>]
REFERENCE_CALL: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> boolean java.lang.Class<T>.isInstance(java.lang.Object) [Navigator.java <275:19 275:28>]
REFERENCE_CALL: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.lang.Class<T>.T java.lang.Class<T>.cast(java.lang.Object) [Navigator.java <276:26 276:29>]
REFERENCE_CALL: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <278:32 278:44>]
REFERENCE_CALL: static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) -> static N com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>) [Navigator.java <279:26 279:51>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> void [Navigator.java <287:24 287:27>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> com.github.javaparser.ast.Node [Navigator.java <287:60 287:63>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> com.github.javaparser.ast.Node [Navigator.java <291:14 291:17>]
REFERENCE_TYPE_ARGUMENT: java.lang.Class<T> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>.N [Navigator.java <287:77 287:77>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> java.lang.Class<T> [Navigator.java <287:71 287:75>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>.N [Navigator.java <287:77 287:77>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>.N [Navigator.java <287:92 287:92>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>.N [Navigator.java <287:92 287:92>]
REFERENCE_TYPE_USAGE: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> java.util.List<E> [Navigator.java <287:87 287:90>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> boolean java.lang.Class<T>.isInstance(java.lang.Object) [Navigator.java <288:19 288:28>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> boolean java.util.List<E>.add(java.util.List<E>.E) [Navigator.java <289:23 289:25>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> java.lang.Class<T>.T java.lang.Class<T>.cast(java.lang.Object) [Navigator.java <289:33 289:36>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> java.util.List<com.github.javaparser.ast.Node> com.github.javaparser.ast.Node.getChildNodes() [Navigator.java <291:32 291:44>]
REFERENCE_CALL: static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) -> static void com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N>(com.github.javaparser.ast.Node, java.lang.Class<N>, java.util.List<N>) [Navigator.java <292:13 292:42>]
LOCAL_SYMBOL: Navigator.java<101:55> [Navigator.java <101:55 101:55>]
LOCAL_SYMBOL: Navigator.java<101:55> [Navigator.java <111:9 111:9>]
LOCAL_SYMBOL: Navigator.java<102:50> [Navigator.java <102:50 102:50>]
LOCAL_SYMBOL: Navigator.java<102:50> [Navigator.java <110:13 110:13>]
LOCAL_SYMBOL: Navigator.java<104:56> [Navigator.java <104:56 104:56>]
LOCAL_SYMBOL: Navigator.java<104:56> [Navigator.java <109:17 109:17>]
LOCAL_SYMBOL: Navigator.java<105:40> [Navigator.java <105:40 105:40>]
LOCAL_SYMBOL: Navigator.java<105:40> [Navigator.java <107:21 107:21>]
LOCAL_SYMBOL: Navigator.java<112:28> [Navigator.java <112:28 112:28>]
LOCAL_SYMBOL: Navigator.java<112:28> [Navigator.java <114:9 114:9>]
LOCAL_SYMBOL: Navigator.java<118:95> [Navigator.java <118:95 118:95>]
LOCAL_SYMBOL: Navigator.java<118:95> [Navigator.java <130:5 130:5>]
LOCAL_SYMBOL: Navigator.java<119:55> [Navigator.java <119:55 119:55>]
LOCAL_SYMBOL: Navigator.java<119:55> [Navigator.java <128:9 128:9>]
LOCAL_SYMBOL: Navigator.java<120:49> [Navigator.java <120:49 120:49>]
LOCAL_SYMBOL: Navigator.java<120:49> [Navigator.java <127:13 127:13>]
LOCAL_SYMBOL: Navigator.java<122:65> [Navigator.java <122:65 122:65>]
LOCAL_SYMBOL: Navigator.java<122:65> [Navigator.java <126:17 126:17>]
LOCAL_SYMBOL: Navigator.java<123:60> [Navigator.java <123:60 123:60>]
LOCAL_SYMBOL: Navigator.java<123:60> [Navigator.java <125:21 125:21>]
LOCAL_SYMBOL: Navigator.java<132:71> [Navigator.java <132:71 132:71>]
LOCAL_SYMBOL: Navigator.java<132:71> [Navigator.java <146:5 146:5>]
LOCAL_SYMBOL: Navigator.java<133:39> [Navigator.java <133:39 133:39>]
LOCAL_SYMBOL: Navigator.java<133:39> [Navigator.java <138:9 138:9>]
LOCAL_SYMBOL: Navigator.java<135:88> [Navigator.java <135:88 135:88>]
LOCAL_SYMBOL: Navigator.java<135:88> [Navigator.java <137:13 137:13>]
LOCAL_SYMBOL: Navigator.java<139:49> [Navigator.java <139:49 139:49>]
LOCAL_SYMBOL: Navigator.java<139:49> [Navigator.java <144:9 144:9>]
LOCAL_SYMBOL: Navigator.java<141:30> [Navigator.java <141:30 141:30>]
LOCAL_SYMBOL: Navigator.java<141:30> [Navigator.java <143:13 143:13>]
LOCAL_SYMBOL: Navigator.java<148:69> [Navigator.java <148:69 148:69>]
LOCAL_SYMBOL: Navigator.java<148:69> [Navigator.java <162:5 162:5>]
LOCAL_SYMBOL: Navigator.java<149:41> [Navigator.java <149:41 149:41>]
LOCAL_SYMBOL: Navigator.java<149:41> [Navigator.java <154:9 154:9>]
LOCAL_SYMBOL: Navigator.java<151:76> [Navigator.java <151:76 151:76>]
LOCAL_SYMBOL: Navigator.java<151:76> [Navigator.java <153:13 153:13>]
LOCAL_SYMBOL: Navigator.java<155:49> [Navigator.java <155:49 155:49>]
LOCAL_SYMBOL: Navigator.java<155:49> [Navigator.java <160:9 160:9>]
LOCAL_SYMBOL: Navigator.java<157:30> [Navigator.java <157:30 157:30>]
LOCAL_SYMBOL: Navigator.java<157:30> [Navigator.java <159:13 159:13>]
LOCAL_SYMBOL: Navigator.java<164:79> [Navigator.java <164:79 164:79>]
LOCAL_SYMBOL: Navigator.java<164:79> [Navigator.java <178:5 178:5>]
LOCAL_SYMBOL: Navigator.java<165:45> [Navigator.java <165:45 165:45>]
LOCAL_SYMBOL: Navigator.java<165:45> [Navigator.java <170:9 170:9>]
LOCAL_SYMBOL: Navigator.java<167:70> [Navigator.java <167:70 167:70>]
LOCAL_SYMBOL: Navigator.java<167:70> [Navigator.java <169:13 169:13>]
LOCAL_SYMBOL: Navigator.java<171:49> [Navigator.java <171:49 171:49>]
LOCAL_SYMBOL: Navigator.java<171:49> [Navigator.java <176:9 176:9>]
LOCAL_SYMBOL: Navigator.java<173:30> [Navigator.java <173:30 173:30>]
LOCAL_SYMBOL: Navigator.java<173:30> [Navigator.java <175:13 175:13>]
LOCAL_SYMBOL: Navigator.java<180:88> [Navigator.java <180:88 180:88>]
LOCAL_SYMBOL: Navigator.java<180:88> [Navigator.java <194:5 194:5>]
LOCAL_SYMBOL: Navigator.java<181:49> [Navigator.java <181:49 181:49>]
LOCAL_SYMBOL: Navigator.java<181:49> [Navigator.java <186:9 186:9>]
LOCAL_SYMBOL: Navigator.java<183:68> [Navigator.java <183:68 183:68>]
LOCAL_SYMBOL: Navigator.java<183:68> [Navigator.java <185:13 185:13>]
LOCAL_SYMBOL: Navigator.java<187:49> [Navigator.java <187:49 187:49>]
LOCAL_SYMBOL: Navigator.java<187:49> [Navigator.java <192:9 192:9>]
LOCAL_SYMBOL: Navigator.java<189:30> [Navigator.java <189:30 189:30>]
LOCAL_SYMBOL: Navigator.java<189:30> [Navigator.java <191:13 191:13>]
LOCAL_SYMBOL: Navigator.java<196:125> [Navigator.java <196:125 196:125>]
LOCAL_SYMBOL: Navigator.java<196:125> [Navigator.java <206:5 206:5>]
LOCAL_SYMBOL: Navigator.java<198:31> [Navigator.java <198:31 198:31>]
LOCAL_SYMBOL: Navigator.java<198:31> [Navigator.java <200:9 200:9>]
LOCAL_SYMBOL: Navigator.java<201:66> [Navigator.java <201:66 201:66>]
LOCAL_SYMBOL: Navigator.java<201:66> [Navigator.java <203:9 203:9>]
LOCAL_SYMBOL: Navigator.java<208:52> [Navigator.java <208:52 208:52>]
LOCAL_SYMBOL: Navigator.java<208:52> [Navigator.java <215:5 215:5>]
LOCAL_SYMBOL: Navigator.java<210:26> [Navigator.java <210:26 210:26>]
LOCAL_SYMBOL: Navigator.java<210:26> [Navigator.java <212:9 212:9>]
LOCAL_SYMBOL: Navigator.java<212:16> [Navigator.java <212:16 212:16>]
LOCAL_SYMBOL: Navigator.java<212:16> [Navigator.java <214:9 214:9>]
LOCAL_SYMBOL: Navigator.java<217:73> [Navigator.java <217:73 217:73>]
LOCAL_SYMBOL: Navigator.java<217:73> [Navigator.java <224:5 224:5>]
LOCAL_SYMBOL: Navigator.java<219:26> [Navigator.java <219:26 219:26>]
LOCAL_SYMBOL: Navigator.java<219:26> [Navigator.java <221:9 221:9>]
LOCAL_SYMBOL: Navigator.java<221:16> [Navigator.java <221:16 221:16>]
LOCAL_SYMBOL: Navigator.java<221:16> [Navigator.java <223:9 223:9>]
LOCAL_SYMBOL: Navigator.java<226:83> [Navigator.java <226:83 226:83>]
LOCAL_SYMBOL: Navigator.java<226:83> [Navigator.java <230:5 230:5>]
LOCAL_SYMBOL: Navigator.java<232:71> [Navigator.java <232:71 232:71>]
LOCAL_SYMBOL: Navigator.java<232:71> [Navigator.java <234:5 234:5>]
LOCAL_SYMBOL: Navigator.java<236:88> [Navigator.java <236:88 236:88>]
LOCAL_SYMBOL: Navigator.java<236:88> [Navigator.java <244:5 244:5>]
LOCAL_SYMBOL: Navigator.java<237:48> [Navigator.java <237:48 237:48>]
LOCAL_SYMBOL: Navigator.java<237:48> [Navigator.java <239:9 239:9>]
LOCAL_SYMBOL: Navigator.java<239:66> [Navigator.java <239:66 239:66>]
LOCAL_SYMBOL: Navigator.java<239:66> [Navigator.java <241:9 241:9>]
LOCAL_SYMBOL: Navigator.java<241:16> [Navigator.java <241:16 241:16>]
LOCAL_SYMBOL: Navigator.java<241:16> [Navigator.java <243:9 243:9>]
LOCAL_SYMBOL: Navigator.java<250:66> [Navigator.java <250:66 250:66>]
LOCAL_SYMBOL: Navigator.java<250:66> [Navigator.java <252:5 252:5>]
LOCAL_SYMBOL: Navigator.java<254:66> [Navigator.java <254:66 254:66>]
LOCAL_SYMBOL: Navigator.java<254:66> [Navigator.java <259:5 259:5>]
LOCAL_SYMBOL: Navigator.java<255:42> [Navigator.java <255:42 255:42>]
LOCAL_SYMBOL: Navigator.java<255:42> [Navigator.java <257:9 257:9>]
LOCAL_SYMBOL: Navigator.java<261:59> [Navigator.java <261:59 261:59>]
LOCAL_SYMBOL: Navigator.java<261:59> [Navigator.java <272:5 272:5>]
LOCAL_SYMBOL: Navigator.java<262:41> [Navigator.java <262:41 262:41>]
LOCAL_SYMBOL: Navigator.java<262:41> [Navigator.java <264:9 264:9>]
LOCAL_SYMBOL: Navigator.java<265:49> [Navigator.java <265:49 265:49>]
LOCAL_SYMBOL: Navigator.java<265:49> [Navigator.java <270:9 270:9>]
LOCAL_SYMBOL: Navigator.java<267:35> [Navigator.java <267:35 267:35>]
LOCAL_SYMBOL: Navigator.java<267:35> [Navigator.java <269:13 269:13>]
LOCAL_SYMBOL: Navigator.java<274:80> [Navigator.java <274:80 274:80>]
LOCAL_SYMBOL: Navigator.java<274:80> [Navigator.java <285:5 285:5>]
LOCAL_SYMBOL: Navigator.java<275:37> [Navigator.java <275:37 275:37>]
LOCAL_SYMBOL: Navigator.java<275:37> [Navigator.java <277:9 277:9>]
LOCAL_SYMBOL: Navigator.java<278:49> [Navigator.java <278:49 278:49>]
LOCAL_SYMBOL: Navigator.java<278:49> [Navigator.java <283:9 283:9>]
LOCAL_SYMBOL: Navigator.java<280:35> [Navigator.java <280:35 280:35>]
LOCAL_SYMBOL: Navigator.java<280:35> [Navigator.java <282:13 282:13>]
LOCAL_SYMBOL: Navigator.java<287:106> [Navigator.java <287:106 287:106>]
LOCAL_SYMBOL: Navigator.java<287:106> [Navigator.java <294:5 294:5>]
LOCAL_SYMBOL: Navigator.java<288:37> [Navigator.java <288:37 288:37>]
LOCAL_SYMBOL: Navigator.java<288:37> [Navigator.java <290:9 290:9>]
LOCAL_SYMBOL: Navigator.java<291:49> [Navigator.java <291:49 291:49>]
LOCAL_SYMBOL: Navigator.java<291:49> [Navigator.java <293:9 293:9>]
LOCAL_SYMBOL: Navigator.java<37:30> [Navigator.java <37:30 37:30>]
LOCAL_SYMBOL: Navigator.java<37:30> [Navigator.java <295:1 295:1>]
LOCAL_SYMBOL: Navigator.java<39:25> [Navigator.java <39:25 39:25>]
LOCAL_SYMBOL: Navigator.java<39:25> [Navigator.java <41:5 41:5>]
LOCAL_SYMBOL: Navigator.java<43:49> [Navigator.java <43:49 43:49>]
LOCAL_SYMBOL: Navigator.java<43:49> [Navigator.java <46:5 46:5>]
LOCAL_SYMBOL: Navigator.java<48:99> [Navigator.java <48:99 48:99>]
LOCAL_SYMBOL: Navigator.java<48:99> [Navigator.java <61:5 61:5>]
LOCAL_SYMBOL: Navigator.java<49:38> [Navigator.java <49:38 49:38>]
LOCAL_SYMBOL: Navigator.java<49:38> [Navigator.java <51:9 51:9>]
LOCAL_SYMBOL: Navigator.java<57:59> [Navigator.java <57:59 57:59>]
LOCAL_SYMBOL: Navigator.java<57:59> [Navigator.java <59:9 59:9>]
LOCAL_SYMBOL: Navigator.java<63:102> [Navigator.java <63:102 63:102>]
LOCAL_SYMBOL: Navigator.java<63:102> [Navigator.java <78:5 78:5>]
LOCAL_SYMBOL: Navigator.java<67:40> [Navigator.java <67:40 67:40>]
LOCAL_SYMBOL: Navigator.java<67:40> [Navigator.java <72:9 72:9>]
LOCAL_SYMBOL: Navigator.java<68:110> [Navigator.java <68:110 68:110>]
LOCAL_SYMBOL: Navigator.java<68:110> [Navigator.java <71:13 71:13>]
LOCAL_SYMBOL: Navigator.java<74:59> [Navigator.java <74:59 74:59>]
LOCAL_SYMBOL: Navigator.java<74:59> [Navigator.java <76:9 76:9>]
LOCAL_SYMBOL: Navigator.java<80:101> [Navigator.java <80:101 80:101>]
LOCAL_SYMBOL: Navigator.java<80:101> [Navigator.java <86:5 86:5>]
LOCAL_SYMBOL: Navigator.java<82:31> [Navigator.java <82:31 82:31>]
LOCAL_SYMBOL: Navigator.java<82:31> [Navigator.java <84:9 84:9>]
LOCAL_SYMBOL: Navigator.java<88:88> [Navigator.java <88:88 88:88>]
LOCAL_SYMBOL: Navigator.java<88:88> [Navigator.java <97:5 97:5>]
LOCAL_SYMBOL: Navigator.java<90:31> [Navigator.java <90:31 90:31>]
LOCAL_SYMBOL: Navigator.java<90:31> [Navigator.java <92:9 92:9>]
LOCAL_SYMBOL: Navigator.java<93:54> [Navigator.java <93:54 93:54>]
LOCAL_SYMBOL: Navigator.java<93:54> [Navigator.java <95:9 95:9>]
LOCAL_SYMBOL: Navigator.java<99:86> [Navigator.java <99:86 99:86>]
LOCAL_SYMBOL: Navigator.java<99:86> [Navigator.java <116:5 116:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<0> [Navigator.java <80:75 80:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<0> [Navigator.java <81:65 81:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<1> [Navigator.java <80:86 80:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<1> [Navigator.java <81:69 81:81>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<2> [Navigator.java <81:37 81:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<2> [Navigator.java <82:13 82:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClass<2> [Navigator.java <85:16 85:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<0> [Navigator.java <196:86 196:100>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<0> [Navigator.java <197:53 197:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<1> [Navigator.java <196:110 196:122>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<1> [Navigator.java <197:70 197:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<1> [Navigator.java <199:65 199:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<2> [Navigator.java <197:38 197:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<2> [Navigator.java <198:14 198:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<2> [Navigator.java <201:15 201:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<2> [Navigator.java <202:93 202:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<2> [Navigator.java <204:72 204:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<3> [Navigator.java <204:37 204:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandClassOrInterface<3> [Navigator.java <205:16 205:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<0> [Navigator.java <88:62 88:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<0> [Navigator.java <89:53 89:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<1> [Navigator.java <88:73 88:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<1> [Navigator.java <89:57 89:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<2> [Navigator.java <89:38 89:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<2> [Navigator.java <90:14 90:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<2> [Navigator.java <93:15 93:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandEnum<2> [Navigator.java <96:34 96:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<0> [Navigator.java <118:78 118:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<0> [Navigator.java <119:38 119:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<1> [Navigator.java <118:89 118:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<1> [Navigator.java <123:53 123:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<2> [Navigator.java <119:33 119:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<2> [Navigator.java <120:17 120:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<2> [Navigator.java <121:58 121:59>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<4> [Navigator.java <121:34 121:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<4> [Navigator.java <122:46 122:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<5> [Navigator.java <122:41 122:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<5> [Navigator.java <123:25 123:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandField<5> [Navigator.java <124:32 124:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<0> [Navigator.java <99:69 99:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<0> [Navigator.java <101:38 101:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<1> [Navigator.java <99:80 99:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<1> [Navigator.java <104:49 104:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<2> [Navigator.java <100:27 100:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<2> [Navigator.java <105:25 105:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<2> [Navigator.java <108:21 108:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<2> [Navigator.java <112:13 112:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<2> [Navigator.java <115:16 115:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<3> [Navigator.java <101:33 101:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<3> [Navigator.java <102:17 102:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<3> [Navigator.java <103:60 103:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<5> [Navigator.java <103:35 103:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<5> [Navigator.java <104:21 104:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandMethod<5> [Navigator.java <108:29 108:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<0> [Navigator.java <180:69 180:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<0> [Navigator.java <181:13 181:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<0> [Navigator.java <182:74 182:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<0> [Navigator.java <187:27 187:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<1> [Navigator.java <180:82 180:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<1> [Navigator.java <183:61 183:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<1> [Navigator.java <188:71 188:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<2> [Navigator.java <182:32 182:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<2> [Navigator.java <183:17 183:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<2> [Navigator.java <184:24 184:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<3> [Navigator.java <187:19 187:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<3> [Navigator.java <188:64 188:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<5> [Navigator.java <188:32 188:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<5> [Navigator.java <189:17 189:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.demandVariableDeclaration<5> [Navigator.java <190:24 190:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><0> [Navigator.java <226:61 226:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><0> [Navigator.java <228:40 228:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><1> [Navigator.java <226:76 226:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><1> [Navigator.java <228:46 228:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><2> [Navigator.java <227:17 227:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><2> [Navigator.java <228:53 228:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClass<N><2> [Navigator.java <229:16 229:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><0> [Navigator.java <287:65 287:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><0> [Navigator.java <288:30 288:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><0> [Navigator.java <289:38 289:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><0> [Navigator.java <291:27 291:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><1> [Navigator.java <287:80 287:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><1> [Navigator.java <288:13 288:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><1> [Navigator.java <289:27 289:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><1> [Navigator.java <292:51 292:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><2> [Navigator.java <287:95 287:103>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><2> [Navigator.java <289:13 289:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><2> [Navigator.java <292:58 292:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><3> [Navigator.java <291:19 291:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAllNodesOfGivenClassHelper<N><3> [Navigator.java <292:44 292:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><0> [Navigator.java <236:66 236:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><0> [Navigator.java <237:14 237:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><0> [Navigator.java <239:37 239:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><0> [Navigator.java <240:43 240:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><0> [Navigator.java <242:33 242:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><1> [Navigator.java <236:81 236:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><1> [Navigator.java <239:20 239:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><1> [Navigator.java <240:32 240:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findAncestor<N><1> [Navigator.java <242:61 242:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<0> [Navigator.java <164:54 164:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<0> [Navigator.java <165:13 165:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<0> [Navigator.java <166:62 166:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<0> [Navigator.java <171:27 171:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<1> [Navigator.java <164:67 164:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<1> [Navigator.java <167:57 167:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<1> [Navigator.java <172:56 172:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<2> [Navigator.java <166:28 166:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<2> [Navigator.java <167:17 167:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<2> [Navigator.java <168:24 168:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<3> [Navigator.java <171:19 171:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<3> [Navigator.java <172:49 172:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<5> [Navigator.java <172:28 172:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<5> [Navigator.java <173:17 173:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findMethodCall<5> [Navigator.java <174:24 174:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<0> [Navigator.java <132:52 132:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<0> [Navigator.java <133:13 133:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<0> [Navigator.java <134:44 134:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<0> [Navigator.java <139:27 139:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<1> [Navigator.java <132:65 132:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<1> [Navigator.java <135:81 135:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<1> [Navigator.java <140:54 140:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<2> [Navigator.java <134:22 134:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<2> [Navigator.java <135:17 135:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<2> [Navigator.java <135:47 135:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<2> [Navigator.java <136:24 136:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<3> [Navigator.java <139:19 139:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<3> [Navigator.java <140:47 140:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<5> [Navigator.java <140:22 140:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<5> [Navigator.java <141:17 141:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNameExpression<5> [Navigator.java <142:24 142:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><0> [Navigator.java <217:51 217:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><0> [Navigator.java <218:44 218:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><1> [Navigator.java <217:66 217:70>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><1> [Navigator.java <218:50 218:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><2> [Navigator.java <218:11 218:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><2> [Navigator.java <219:13 219:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClass<N><2> [Navigator.java <222:20 222:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><0> [Navigator.java <274:58 274:61>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><0> [Navigator.java <275:30 275:33>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><0> [Navigator.java <276:31 276:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><0> [Navigator.java <278:27 278:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><1> [Navigator.java <274:73 274:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><1> [Navigator.java <275:13 275:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><1> [Navigator.java <276:20 276:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><1> [Navigator.java <279:60 279:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><2> [Navigator.java <278:19 278:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><2> [Navigator.java <279:53 279:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><4> [Navigator.java <279:15 279:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><4> [Navigator.java <280:17 280:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findNodeOfGivenClassHelper<N><4> [Navigator.java <281:24 281:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt<0> [Navigator.java <232:63 232:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findReturnStmt<0> [Navigator.java <233:37 233:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<0> [Navigator.java <148:50 148:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<0> [Navigator.java <149:13 149:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<0> [Navigator.java <150:48 150:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<0> [Navigator.java <155:27 155:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<1> [Navigator.java <148:63 148:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<1> [Navigator.java <151:69 151:72>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<1> [Navigator.java <156:52 156:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<2> [Navigator.java <150:24 150:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<2> [Navigator.java <151:17 151:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<2> [Navigator.java <151:45 151:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<2> [Navigator.java <152:24 152:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<3> [Navigator.java <155:19 155:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<3> [Navigator.java <156:45 156:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<5> [Navigator.java <156:24 156:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<5> [Navigator.java <157:17 157:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSimpleName<5> [Navigator.java <158:24 158:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch<0> [Navigator.java <208:46 208:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch<0> [Navigator.java <209:43 209:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch<1> [Navigator.java <209:20 209:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch<1> [Navigator.java <210:13 210:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitch<1> [Navigator.java <213:20 213:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<0> [Navigator.java <261:53 261:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<0> [Navigator.java <262:13 262:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<0> [Navigator.java <263:33 263:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<0> [Navigator.java <265:27 265:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<1> [Navigator.java <265:19 265:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<1> [Navigator.java <266:52 266:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<3> [Navigator.java <266:24 266:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<3> [Navigator.java <267:17 267:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findSwitchHelper<3> [Navigator.java <268:24 268:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<0> [Navigator.java <48:73 48:74>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<0> [Navigator.java <49:13 49:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<0> [Navigator.java <54:45 54:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<0> [Navigator.java <63:76 63:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<0> [Navigator.java <67:23 67:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<1> [Navigator.java <48:84 48:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<1> [Navigator.java <53:50 53:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<1> [Navigator.java <56:55 56:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<1> [Navigator.java <63:87 63:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<1> [Navigator.java <64:50 64:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<1> [Navigator.java <73:55 73:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<2> [Navigator.java <53:22 53:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<2> [Navigator.java <54:109 54:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<2> [Navigator.java <64:22 64:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<2> [Navigator.java <68:99 68:106>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <54:38 54:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <57:13 57:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <58:29 58:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <60:16 60:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <66:38 66:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <69:17 69:20>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <74:13 74:16>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <75:29 75:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<3> [Navigator.java <77:16 77:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<4> [Navigator.java <67:19 67:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<4> [Navigator.java <68:17 68:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<4> [Navigator.java <68:71 68:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<4> [Navigator.java <69:57 69:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<6> [Navigator.java <56:22 56:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<6> [Navigator.java <57:34 57:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<6> [Navigator.java <58:41 58:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<6> [Navigator.java <73:22 73:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<6> [Navigator.java <74:34 74:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.findType<6> [Navigator.java <75:41 75:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName<0> [Navigator.java <254:51 254:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName<0> [Navigator.java <255:13 255:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getInnerTypeName<0> [Navigator.java <256:20 256:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName<0> [Navigator.java <250:51 250:63>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getOuterTypeName<0> [Navigator.java <251:16 251:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode<0> [Navigator.java <43:43 43:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode<0> [Navigator.java <44:23 44:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode<1> [Navigator.java <44:14 44:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparser.Navigator.getParentNode<1> [Navigator.java <45:16 45:21>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<4> [Navigator.java <54:76 54:76>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<4> [Navigator.java <54:82 54:82>]
COMMENT: comment [Navigator.java <1:1 15:3>]
COMMENT: comment [Navigator.java <32:1 36:3>]
COMMENT: comment [Navigator.java <40:9 40:32>]
COMMENT: comment [Navigator.java <246:5 246:7>]
COMMENT: comment [Navigator.java <247:5 247:23>]
COMMENT: comment [Navigator.java <248:5 248:7>]
