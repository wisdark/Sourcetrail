FILE: AbstractClassDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.logic [AbstractClassDeclaration.java <17:44 17:48>]
QUALIFIER: com.github.javaparser.symbolsolver [AbstractClassDeclaration.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [AbstractClassDeclaration.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AbstractClassDeclaration.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [AbstractClassDeclaration.java <21:30 21:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [AbstractClassDeclaration.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [AbstractClassDeclaration.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [AbstractClassDeclaration.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [AbstractClassDeclaration.java <21:19 21:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [AbstractClassDeclaration.java <17:13 17:18>]
QUALIFIER: com.github [AbstractClassDeclaration.java <19:12 19:17>]
QUALIFIER: com.github [AbstractClassDeclaration.java <20:12 20:17>]
QUALIFIER: com.github [AbstractClassDeclaration.java <21:12 21:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [AbstractClassDeclaration.java <17:9 17:11>]
QUALIFIER: com [AbstractClassDeclaration.java <19:8 19:10>]
QUALIFIER: com [AbstractClassDeclaration.java <20:8 20:10>]
QUALIFIER: com [AbstractClassDeclaration.java <21:8 21:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [AbstractClassDeclaration.java <19:49 19:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [AbstractClassDeclaration.java <20:49 20:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [AbstractClassDeclaration.java <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AbstractClassDeclaration.java <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [AbstractClassDeclaration.java <21:43 21:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [AbstractClassDeclaration.java <21:49 21:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.util [AbstractClassDeclaration.java <23:13 23:16>]
QUALIFIER: java.util [AbstractClassDeclaration.java <24:13 24:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [AbstractClassDeclaration.java <23:8 23:11>]
QUALIFIER: java [AbstractClassDeclaration.java <24:8 24:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration [AbstractClassDeclaration.java <64:36 64:39>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration [AbstractClassDeclaration.java <31:1 <31:23 31:46> 85:1>]
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.hasName() [AbstractClassDeclaration.java <37:5 <37:5 <38:20 38:26> 38:28> 40:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.hasName()
SYMBOL_PACKAGE: java.lang
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() [AbstractClassDeclaration.java <42:5 <42:5 <43:38 43:55> 43:57> 55:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllSuperClasses()
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass()
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: boolean java.util.List<E>.addAll(java.util.Collection<? extends E>)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllClassesAncestors()
SYMBOL_METHOD: boolean java.util.Collection<E>.removeIf(java.util.function.Predicate<? super E>)
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object() [AbstractClassDeclaration.java <83:1 <83:1 <83:38 83:43> 83:45> 83:46>]
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() [AbstractClassDeclaration.java <57:5 <57:5 <58:38 58:53> 58:55> 69:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllInterfaces()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getInterfaces()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllInterfacesAncestors()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.asClass() [AbstractClassDeclaration.java <71:5 <71:5 <72:35 72:41> 72:43> 74:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass()
REFERENCE_IMPORT: AbstractClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [AbstractClassDeclaration.java <19:62 19:77>]
REFERENCE_IMPORT: AbstractClassDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [AbstractClassDeclaration.java <20:62 20:76>]
REFERENCE_IMPORT: AbstractClassDeclaration.java -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <21:60 21:72>]
REFERENCE_IMPORT: AbstractClassDeclaration.java -> java.util.ArrayList<E> [AbstractClassDeclaration.java <23:18 23:26>]
REFERENCE_IMPORT: AbstractClassDeclaration.java -> java.util.List<E> [AbstractClassDeclaration.java <24:18 24:21>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration -> com.github.javaparser.symbolsolver.logic.AbstractTypeDeclaration [AbstractClassDeclaration.java <31:56 31:78>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [AbstractClassDeclaration.java <31:91 31:106>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.hasName() -> boolean com.github.javaparser.symbolsolver.model.declarations.Declaration.hasName() [AbstractClassDeclaration.java <38:20 38:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.hasName() -> java.lang.Override [AbstractClassDeclaration.java <37:6 37:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.hasName() -> boolean [AbstractClassDeclaration.java <38:12 38:18>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.hasName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [AbstractClassDeclaration.java <39:16 39:31>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllSuperClasses() [AbstractClassDeclaration.java <43:38 43:55>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.lang.Override [AbstractClassDeclaration.java <42:6 42:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <43:23 43:35>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <44:14 44:26>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <58:23 58:35>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <59:14 59:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.util.List<E> [AbstractClassDeclaration.java <43:18 43:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.util.List<E> [AbstractClassDeclaration.java <44:9 44:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <43:23 43:35>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <44:14 44:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <45:9 45:21>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.util.ArrayList<E>.ArrayList() [AbstractClassDeclaration.java <44:48 44:58>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.util.ArrayList<E> [AbstractClassDeclaration.java <44:48 44:56>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass() [AbstractClassDeclaration.java <45:36 45:48>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> boolean java.util.List<E>.add(java.util.List<E>.E) [AbstractClassDeclaration.java <47:26 47:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> boolean java.util.List<E>.add(java.util.List<E>.E) [AbstractClassDeclaration.java <52:26 52:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> boolean java.util.List<E>.addAll(java.util.Collection<? extends E>) [AbstractClassDeclaration.java <48:26 48:31>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllClassesAncestors() [AbstractClassDeclaration.java <48:44 48:65>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> boolean java.util.Collection<E>.removeIf(java.util.function.Predicate<? super E>) [AbstractClassDeclaration.java <51:26 51:33>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> boolean java.lang.String.equals(java.lang.Object) [AbstractClassDeclaration.java <51:61 51:66>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [AbstractClassDeclaration.java <51:42 51:57>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.lang.String java.lang.Class<T>.getCanonicalName() [AbstractClassDeclaration.java <51:81 51:96>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> java.lang.Object [AbstractClassDeclaration.java <51:68 51:73>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object() [AbstractClassDeclaration.java <52:30 52:35>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getAllInterfaces() [AbstractClassDeclaration.java <58:38 58:53>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.lang.Override [AbstractClassDeclaration.java <57:6 57:13>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.List<E> [AbstractClassDeclaration.java <58:18 58:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.List<E> [AbstractClassDeclaration.java <59:9 59:12>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <58:23 58:35>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <59:14 59:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <60:14 60:26>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <64:9 64:21>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.ArrayList<E>.ArrayList() [AbstractClassDeclaration.java <59:46 59:56>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.ArrayList<E> [AbstractClassDeclaration.java <59:46 59:54>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getInterfaces() [AbstractClassDeclaration.java <60:51 60:63>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> boolean java.util.List<E>.add(java.util.List<E>.E) [AbstractClassDeclaration.java <61:24 61:26>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> boolean java.util.List<E>.addAll(java.util.Collection<? extends E>) [AbstractClassDeclaration.java <62:24 62:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> boolean java.util.List<E>.addAll(java.util.Collection<? extends E>) [AbstractClassDeclaration.java <66:24 66:29>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllInterfacesAncestors() [AbstractClassDeclaration.java <62:52 62:76>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllInterfacesAncestors() [AbstractClassDeclaration.java <66:42 66:66>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration.getSuperClass() [AbstractClassDeclaration.java <64:41 64:53>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.asClass() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.asClass() [AbstractClassDeclaration.java <72:35 72:41>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.asClass() -> java.lang.Override [AbstractClassDeclaration.java <71:6 71:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.asClass() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [AbstractClassDeclaration.java <72:18 72:33>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.object() -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [AbstractClassDeclaration.java <83:24 83:36>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<31:108> [AbstractClassDeclaration.java <31:108 31:108>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<31:108> [AbstractClassDeclaration.java <85:1 85:1>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<38:30> [AbstractClassDeclaration.java <38:30 38:30>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<38:30> [AbstractClassDeclaration.java <40:5 40:5>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<43:59> [AbstractClassDeclaration.java <43:59 43:59>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<43:59> [AbstractClassDeclaration.java <55:5 55:5>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<46:33> [AbstractClassDeclaration.java <46:33 46:33>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<46:33> [AbstractClassDeclaration.java <49:9 49:9>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<51:103> [AbstractClassDeclaration.java <51:103 51:103>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<51:103> [AbstractClassDeclaration.java <53:9 53:9>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<58:57> [AbstractClassDeclaration.java <58:57 58:57>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<58:57> [AbstractClassDeclaration.java <69:5 69:5>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<60:68> [AbstractClassDeclaration.java <60:68 60:68>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<60:68> [AbstractClassDeclaration.java <63:9 63:9>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<65:33> [AbstractClassDeclaration.java <65:33 65:33>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<65:33> [AbstractClassDeclaration.java <67:9 67:9>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<72:45> [AbstractClassDeclaration.java <72:45 72:45>]
LOCAL_SYMBOL: AbstractClassDeclaration.java<72:45> [AbstractClassDeclaration.java <74:5 74:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<0> [AbstractClassDeclaration.java <59:29 59:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<0> [AbstractClassDeclaration.java <61:13 61:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<0> [AbstractClassDeclaration.java <62:13 62:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<0> [AbstractClassDeclaration.java <66:13 66:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<0> [AbstractClassDeclaration.java <68:16 68:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<1> [AbstractClassDeclaration.java <60:28 60:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<1> [AbstractClassDeclaration.java <61:28 61:47>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<1> [AbstractClassDeclaration.java <62:31 62:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<3> [AbstractClassDeclaration.java <64:23 64:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<3> [AbstractClassDeclaration.java <65:13 65:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllInterfaces<3> [AbstractClassDeclaration.java <66:31 66:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<0> [AbstractClassDeclaration.java <44:29 44:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<0> [AbstractClassDeclaration.java <47:13 47:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<0> [AbstractClassDeclaration.java <48:13 48:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<0> [AbstractClassDeclaration.java <51:13 51:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<0> [AbstractClassDeclaration.java <52:13 52:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<0> [AbstractClassDeclaration.java <54:16 54:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<1> [AbstractClassDeclaration.java <45:23 45:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<1> [AbstractClassDeclaration.java <46:13 46:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<1> [AbstractClassDeclaration.java <47:30 47:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.logic.AbstractClassDeclaration.getAllSuperClasses<1> [AbstractClassDeclaration.java <48:33 48:42>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<2> [AbstractClassDeclaration.java <51:35 51:35>]
LOCAL_SYMBOL: java.util.function.Predicate<T>.test<2> [AbstractClassDeclaration.java <51:40 51:40>]
COMMENT: comment [AbstractClassDeclaration.java <1:1 15:3>]
COMMENT: comment [AbstractClassDeclaration.java <26:1 30:3>]
COMMENT: comment [AbstractClassDeclaration.java <33:5 33:7>]
COMMENT: comment [AbstractClassDeclaration.java <34:5 34:14>]
COMMENT: comment [AbstractClassDeclaration.java <35:5 35:7>]
COMMENT: comment [AbstractClassDeclaration.java <76:5 76:7>]
COMMENT: comment [AbstractClassDeclaration.java <77:5 77:17>]
COMMENT: comment [AbstractClassDeclaration.java <78:5 78:7>]
COMMENT: comment [AbstractClassDeclaration.java <80:5 82:7>]
